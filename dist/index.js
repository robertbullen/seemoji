/*! For license information please see index.js.LICENSE.txt */
(()=>{var e={1826:(e,t,n)=>{"use strict";n.r(t),n.d(t,{HandPose:()=>qr,load:()=>jr});var r={};n.r(r),n.d(r,{json:()=>A});var a={};n.r(a),n.d(a,{json:()=>_});var s={};n.r(s),n.d(s,{json:()=>O});var o={};n.r(o),n.d(o,{json:()=>F});var i={};n.r(i),n.d(i,{json:()=>B});var u={};n.r(u),n.d(u,{json:()=>M});var l={};n.r(l),n.d(l,{json:()=>P});var c={};n.r(c),n.d(c,{json:()=>L});var p={};n.r(p),n.d(p,{json:()=>W});var d={};n.r(d),n.d(d,{json:()=>V});var h={};n.r(h),n.d(h,{json:()=>U});var f={};n.r(f),n.d(f,{json:()=>z});var m={};n.r(m),n.d(m,{json:()=>H});var g={};n.r(g),n.d(g,{json:()=>G});var y={};n.r(y),n.d(y,{json:()=>X});var x={};n.r(x),n.d(x,{json:()=>j});var b={};n.r(b),n.d(b,{json:()=>q});var v,w,I=n(6853);!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(v||(v={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(w||(w={}));const N={};function k(e){return N[e]}function $(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return C(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,o).map((e=>C(e,n,r,a)));const i=C(t.inputNames.slice(e)[0],n,r,a),u=i.dataSync();return"number"===s.type?u[0]:I.D5U.GX(i.shape,u)}const o=t.attrParams[e];return o&&o.value}function C(e,t,n,r){const[a,s]=E(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[S(a,e)]));return void 0!==o?t[S(a,o)][s]:void 0}function T(e,t){const[n,r]=E(e);return[S(n,t&&t.currentContextId),r]}function S(e,t){return t?`${e}-${t}`:e}function E(e){const t=e.split(":");return 1===t.length?[e,0]:[t[0],Number(t[t.length-1])]}function R(e,t,n){let r=$("pad",e,t,n);if("explicit"===r){r=$("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function D(e){return e.kept?e:(0,I.d9v)(e)}const A=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],_=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],O=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],F=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],B=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],M=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],P=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],L=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],W=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],V=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],U=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],z=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],H=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],G=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],X=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],j=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],q=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class K{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,a,s,o,i,u,l,h,d,c,f,m,g,y,x,b,p].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const p=Object.keys(o);p.forEach((e=>{const t=o[e];t.inputNames.forEach((e=>{const[n]=T(e);t.inputs.push(o[n]),o[n].children.push(t)}))})),0===Object.keys(c).length?p.forEach((e=>{const t=o[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=T(e),n=o[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=T(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=r;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const h={nodes:o,inputs:i,outputs:u,weights:a,placeholders:r,signature:t,functions:d};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=k(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=Q(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Q(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=ie(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=J(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=J(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=oe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=Z(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Z(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=le(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=le(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=se(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=ue(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=ne(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ne(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=re(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=re(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=te(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=te(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=T(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ee(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach((e=>{const[n]=T(e);t.inputs.push(r[n]),r[n].children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=T(o[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const i=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function Y(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,I.OBj)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Q(e,t,n,r=!1){const a=e[t];return null!=a?Y(a.s,r):n}function Z(e,t,n){const r=e[t];return r?r.b:n}function J(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function ee(e){switch("string"==typeof e&&(e=v[e]),e){case v.DT_FLOAT:return"float32";case v.DT_INT32:case v.DT_INT64:case v.DT_INT8:case v.DT_UINT8:return"int32";case v.DT_BOOL:return"bool";case v.DT_DOUBLE:return"float32";case v.DT_STRING:return"string";default:return null}}function te(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function ne(e,t,n){const r=e[t];return r&&r.type?ee(r.type):n}function re(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>ee(e))):n}function ae(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function se(e,t,n){const r=e[t];return r&&r.shape?ae(r.shape):n}function oe(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function ie(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>Y(e,r))):n}function ue(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>ae(e))):n}function le(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class ce{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return C(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return C(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return J(this.node.rawAttrs,e,t);if(null!=n.s)return Q(this.node.rawAttrs,e,t);if(null!=n.b)return Z(this.node.rawAttrs,e,t);if(null!=n.shape)return se(this.node.rawAttrs,e,t);if(null!=n.type)return ne(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return oe(this.node.rawAttrs,e,t);if(null!=n.list.s)return ie(this.node.rawAttrs,e,t);if(null!=n.list.shape)return ue(this.node.rawAttrs,e,t);if(null!=n.list.b)return le(this.node.rawAttrs,e,t);if(null!=n.list.type)return re(this.node.rawAttrs,e,t)}return t}}var pe=n(6407),de=n(7097),he=n(9121),fe=n(3740),me=n(569),ge=n(2668);const ye=(0,ge.op)({addN_:function(e){me.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),me.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,fe._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!me.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return de.BV.runKernelFunc(((e,n)=>{const r=e.addN(t);return n(t),r}),r,null,he.Xz)}});var xe=n(5228),be=n(4841),ve=n(1274),we=n(9322),Ie=n(9165),Ne=n(827),ke=n(4513),$e=n(632),Ce=n(3453),Te=n(5265),Se=n(6235),Ee=n(7839),Re=n(1470),De=n(2421),Ae=n(1891),_e=n(7037),Oe=n(9812),Fe=n(369),Be=n(6825),Me=n(1661),Pe=n(173),Le=n(2699),We=n(3233),Ve=n(4650),Ue=n(4842),ze=n(3426),He=n(6943),Ge=n(2597),Xe=n(7474),je=n(4386),qe=n(7370),Ke=n(9036),Ye=n(766),Qe=n(7409),Ze=n(7809),Je=n(5503),et=n(625),tt=n(9331),nt=n(4434),rt=n(3254),at=n(3694),st=n(3261),ot=n(248),it=n(1869),ut=n(1173),lt=n(2279),ct=n(2634),pt=n(9451),dt=n(9133),ht=n(8151);function ft(e,t,n=""){I.D5U.hu(function(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(-1!==e[n]&&-1!==t[n]&&e[n]!==t[n])return!1;return!0}(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}class mt{constructor(e,t,n,r,a,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=(0,I.iD$)(0),(0,I.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),ft(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,I.CnY)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,I.XeE)([],[0].concat(this.elementShape));const n=this.readMany(e);return ft(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,I.knu)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,I.XeE)([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return ft(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,I.zoF)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,I.HHK)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];(0,I.lub)((()=>{t=(0,I.XLQ)(t,[1,n,a]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],a];s[n]=(0,I.XLQ)((0,I.tPi)(t,o,i),this.elementShape)}return s}));const o=[];for(let t=0;t<e.length;t++)o[t]=t;this.writeMany(o,s)}}class gt{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);ft(t,e.shape,"TensorList shape mismatch: "),(0,I.CnY)(e)})),this.idTensor=(0,I.iD$)(0),this.maxNumElements=r,(0,I.CnY)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new gt([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return ft(e,this.elementShape,"TensorList shape mismatch: "),(0,I.lub)((()=>{const t=this.tensors.map((t=>(0,I.XLQ)(t,e)));return(0,I.knu)(t,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return ft(n.shape,e,"TensorList shape mismatch: "),(0,I.XLQ)(n,e)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ft(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,I.CnY)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);return ft(this.tensors[e].shape,t,"TensorList shape mismatch: "),this.tensors[e]}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ft(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,I.CnY)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);return ft(this.elementShape,n,"TensorList shape mismatch: "),0===(e=e.slice(0,this.size())).length?(0,I.XeE)([],[0].concat(this.elementShape)):(0,I.lub)((()=>{const t=e.map((e=>(0,I.XLQ)(this.tensors[e],n)));return(0,I.knu)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);return ft(this.elementShape,t,"TensorList shape mismatch: "),0===this.size()?(0,I.XeE)([],[0].concat(this.elementShape)):(0,I.lub)((()=>{const e=this.tensors.map((e=>(0,I.XLQ)(e,t)));return(0,I.zoF)(e,0)}))}}var yt=n(1355),xt=n(4794),bt=n(633),vt=n(747),wt=n(2200),It=n(6013),Nt=n(9832),kt=n(2582),$t=n(9323),Ct=n(4968);const Tt=(0,ge.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l}){if(u=u||"linear",!1===(0,$t.uy)(de.BV.state.gradientDepth,u)){let c=(0,xt.T)(e,t,n,r,a,s,o);return null!=i&&(c=(0,pe.I)(c,i)),(0,$t.QH)(c,u,l)}const c=(0,fe._1)(e,"x","conv2d"),p=(0,fe._1)(t,"filter","conv2d");let d=c,h=!1;3===c.rank&&(h=!0,d=(0,Ct.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),me.hu(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),me.hu(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=o&&me.hu(me.GN(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`)),me.hu(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),me.hu(kt.jT(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),me.hu("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const f=kt.Ix(d.shape,p.shape,n,s,r,o);let m,g;null!=i&&(m=(0,fe._1)(i,"bias","fused conv2d"),[m]=(0,vt.T_)(m,c),wt.$N(f.outShape,m.shape)),null!=l&&(g=(0,fe._1)(l,"prelu weights","fused conv2d"));const y=(e,t)=>{const[a,o,i,l]=t,c=(0,$t.Fr)(e,i,u);me.hu(kt.I0(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const p=[(0,Nt._)(o.shape,c,a,n,r),(0,It.p)(o,c,a.shape,n,r)];if(null!=l){const e=(0,$t.pf)(l,c);p.push(e)}return p},x=e=>e.fusedConv2d({input:d,filter:p,convInfo:f,bias:m,activation:u,preluActivationWeights:g}),b={x:d,filter:p,bias:m,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u};return null==i?(0,bt.cb)(((e,t,n)=>{let r=de.BV.runKernelFunc(x,b,null,he._V,v);return n([t,e,r]),h&&(r=(0,Ct.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(d,p):(0,bt.cb)(((e,t,n,r)=>{let a=de.BV.runKernelFunc(x,b,null,he._V,v);return r([t,e,a,n]),h&&(a=(0,Ct.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}}))(d,p,m)}});var St=n(4718),Et=n(8098),Rt=n(4375);const Dt=(0,ge.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l}){if(!1===(0,$t.uy)(de.BV.state.gradientDepth,u)){let c=(0,St.B)(e,t,n,r,a,s,o);return null!=i&&(c=(0,pe.I)(c,i)),(0,$t.QH)(c,u,l)}const c=(0,fe._1)(e,"x","depthwiseConv2d"),p=(0,fe._1)(t,"filter","depthwiseConv2d");let d=c,h=!1;3===c.rank&&(h=!0,d=(0,Ct.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),me.hu(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),me.hu(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),me.hu(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==s&&(s=[1,1]),me.hu(kt.jT(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=o&&me.hu(me.GN(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${r}.`));const f=kt.Ix(d.shape,p.shape,n,s,r,o,!0);let m,g;null!=i&&(m=(0,fe._1)(i,"bias","fused conv2d"),[m]=(0,vt.T_)(m,c),wt.$N(f.outShape,m.shape)),null!=l&&(g=(0,fe._1)(l,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{me.hu(kt.I0(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,i,l,c]=t,p=(0,$t.Fr)(e,l,u),d=(0,Rt.v)(i.shape,p,a,n,r,s,o),h=(0,Et.z)(i,p,a.shape,n,r,s,o);return null!=c?[d,h,(0,$t.pf)(m,p)]:[d,h]},x=e=>e.fusedDepthwiseConv2D({input:d,filter:p,convInfo:f,bias:m,activation:u,preluActivationWeights:g}),b={x:d,filter:p,bias:m,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u};return null==i?(0,bt.cb)(((e,t,n)=>{let r=de.BV.runKernelFunc(x,b,null,he.lu,v);return n([t,e,r]),h&&(r=(0,Ct.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(d,p):(0,bt.cb)(((e,t,n,r)=>{let a=de.BV.runKernelFunc(x,b,null,he.lu,v);return r([t,e,a,n]),h&&(a=(0,Ct.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}}))(d,p,m)}});var At=n(8687);const _t=(0,ge.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:o}){if(!1===(0,$t.uy)(de.BV.state.gradientDepth,s)){let i=(0,At.O)(e,t,n,r);return null!=a&&(i=(0,pe.I)(i,a)),(0,$t.QH)(i,s,o)}let i=(0,fe._1)(e,"a","fused matMul"),u=(0,fe._1)(t,"b","fused matMul");[i,u]=(0,vt.T_)(i,u);const l=n?i.shape[i.rank-2]:i.shape[i.rank-1],c=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?i.shape[i.rank-1]:i.shape[i.rank-2],d=r?u.shape[u.rank-2]:u.shape[u.rank-1],h=i.shape.slice(0,-2),f=u.shape.slice(0,-2),m=me.NA(h),g=me.NA(f);me.hu(i.rank>=2&&u.rank>=2&&i.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${i.rank} and ${u.rank}.`)),me.hu(me.cO(h,f),(()=>`Error in fused matMul: outer dimensions (${h}) and (${f}) of Tensors with shapes ${i.shape} and ${u.shape} must match.`)),me.hu(l===c,(()=>`Error in fused matMul: inner shapes (${l}) and (${c}) of Tensors with shapes ${i.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=i.shape.slice(0,-2).concat([p,d]),x=n?(0,Ct.X)(i,[m,l,p]):(0,Ct.X)(i,[m,p,l]),b=r?(0,Ct.X)(u,[g,d,c]):(0,Ct.X)(u,[g,c,d]);let v,w;null!=a&&(v=(0,fe._1)(a,"bias","fused matMul"),[v]=(0,vt.T_)(v,i),wt.$N(y,v.shape)),null!=o&&(w=(0,fe._1)(o,"prelu weights","fused matMul"));const I=(e,t)=>{const[o,i,u,l]=t,c=(0,$t.Fr)((0,Ct.X)(e,u.shape),u,s);let p,d;return n||r?!n&&r?(p=(0,At.O)(c,i,!1,!1),d=(0,At.O)(c,o,!0,!1)):n&&!r?(p=(0,At.O)(i,c,!1,!0),d=(0,At.O)(o,c,!1,!1)):(p=(0,At.O)(i,c,!0,!0),d=(0,At.O)(c,o,!0,!0)):(p=(0,At.O)(c,i,!1,!0),d=(0,At.O)(o,c,!0,!1)),null!=a?[p,d,(0,$t.pf)(l,c)]:[p,d]},N=e=>e.fusedBatchMatMul({a:x,b,transposeA:n,transposeB:r,bias:v,activation:s,preluActivationWeights:w}),k={a:x,b,bias:v,preluActivationWeights:w},$={transposeA:n,transposeB:r,activation:s};return null==a?(0,bt.cb)(((e,t,n)=>{const r=de.BV.runKernelFunc(N,k,null,he.us,$);return n([e,t,r]),{value:(0,Ct.X)(r,y),gradFunc:I}}))(x,b):(0,bt.cb)(((e,t,n,r)=>{const a=de.BV.runKernelFunc(N,k,null,he.us,$);return r([e,t,a,n]),{value:(0,Ct.X)(a,y),gradFunc:I}}))(x,b,v)}});var Ot=n(1405);const Ft=(0,ge.op)({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const o=(0,fe._1)(e,"x","conv3d"),i=(0,fe._1)(t,"filter","conv3d");let u=o,l=!1;4===o.rank&&(l=!0,u=(0,Ct.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),me.hu(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),me.hu(5===i.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`)),me.hu(u.shape[4]===i.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`)),me.hu((0,kt.jT)(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),me.hu("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const c={x:u,filter:i},p={strides:n,pad:r,dataFormat:a,dilations:s},d=de.BV.runKernelFunc(((e,t)=>{const a=kt.jw(u.shape,i.shape,n,s,r),o=e.conv3d(u,i,a);return t([u,i]),o}),c,null,he.x1,p);return l?(0,Ct.X)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var Bt=n(5176),Mt=n(1174);const Pt=(0,ge.op)({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:(0,fe._1)(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},i=de.BV.runKernel(he.vF,s,o);return{result:i[0],indexes:i[1]}}});var Lt=n(4368),Wt=n(2271);const Vt=(0,ge.op)({avgPool3d_:function(e,t,n,r,a,s="NDHWC",o){null==o?o=[1,1,1]:(0,Lt.MX)("dilations is deprecated, this field will be gone in v3.0.0.");const i=(0,fe._1)(e,"x","avgPool3d","float32");let u=i,l=!1;4===i.rank&&(l=!0,u=(0,Ct.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),me.hu(5===u.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`)),me.hu("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),me.hu(kt.jT(n,o),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`)),null!=a&&me.hu(me.GN(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const c={x:u},p={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s,dilations:o};let d=de.BV.runKernelFunc(((e,i)=>{null==o&&(o=[1,1,1]);const l=kt.pl(u.shape,t,n,o,r,a,s);return i([u]),e.avgPool3d(u,l)}),c,null,he._k,p);return d=(0,Wt.p)(d,u.dtype),l?(0,Ct.X)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Ut=(0,ge.op)({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC",o){null==o?o=[1,1,1]:(0,Lt.MX)("dilations is deprecated, this field will be gone in v3.0.0.");const i=(0,fe._1)(e,"x","maxPool3d");let u=i,l=!1;4===i.rank&&(l=!0,u=(0,Ct.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),me.hu(5===u.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`)),me.hu("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),me.hu(kt.jT(n,o),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`)),null!=a&&me.hu(me.GN(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const c={x:u},p={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s,dilations:o},d=de.BV.runKernelFunc(((e,i)=>{null==o&&(o=[1,1,1]);const l=kt.pl(u.shape,t,n,o,r,a,s),c=e.maxPool3d(u,l);return i([u,c]),c}),c,null,he.OA,p);return l?(0,Ct.X)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var zt=n(557);function Ht(e,t,n){const[r,a]=$("fusedOps",e,t,n),s="biasadd"===r,o="prelu"===a,i="fusedbatchnorm"===r,u=$("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(i)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=$("strides",e,t,n),c=R(e,t,n),p=$("dataFormat",e,t,n).toUpperCase(),d=$("dilations",e,t,n),[h,f]=$("args",e,t,n);return{stride:l,pad:c,dataFormat:p,dilations:d,biasArg:h,preluArg:f,activationFunc:a}}var Gt=n(4006);function Xt(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return de.BV.runKernelFunc((r=>r.linspace(e,t,n)),{},null,he.e7,r)}const jt=(0,ge.op)({multinomial_:function(e,t,n,r=!1){const a=(0,fe._1)(e,"logits","multinomial"),s=a.size,o=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const i=1===o?(0,Ct.X)(a,[1,-1]):a,u=de.BV.runKernelFunc((e=>e.multinomial(i,r,t,n)),{logits2D:i});return 1===o?(0,Ct.X)(u,[u.size]):u}});var qt=n(6708),Kt=n(4917),Yt=n(7846),Qt=n(2657),Zt=n(6377);class Jt{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=Zt.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class en{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Zt.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const tn=(0,ge.op)({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=(0,Qt.f)(e,r),o=new en(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=o.nextValue();return s.toTensor()}});var nn=n(7245);const rn=(0,ge.op)({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new Jt(t,n,r,!0,a),o=(0,Qt.f)(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}});var an=n(9640),sn=n(6577),on=n(6665),un=n(8333);const ln=async function(e){const t=(0,fe._1)(e,"condition","whereAsync","bool"),n=await t.data(),r=(0,un.Z)(t.shape,n);return e!==t&&t.dispose(),r};var cn=n(4077);function pn(e,t,n){return{boxes:$("boxes",e,t,n),scores:$("scores",e,t,n),maxOutputSize:$("maxOutputSize",e,t,n),iouThreshold:$("iouThreshold",e,t,n),scoreThreshold:$("scoreThreshold",e,t,n),softNmsSigma:$("softNmsSigma",e,t,n)}}var dn=n(3243),hn=n(9608),fn=n(6092),mn=n(9494);class gn{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,I.iD$)(0),this.tensorMap=new Map,(0,I.CnY)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,I.lub)((()=>{const e=(0,I.HHK)(t),r=n.length,a=e.length;I.D5U.hu(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];(0,I.CnY)(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,I.lub)((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return(0,I.knu)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}var yn=n(6477),xn=n(6500),bn=n(636),vn=n(7630),wn=n(6573),In=n(624),Nn=n(2856),kn=n(8651),$n=n(5750),Cn=n(5912),Tn=n(9065),Sn=n(7505),En=n(9648),Rn=n(682),Dn=n(1510);const An=(0,ge.op)({sparseToDense_:function(e,t,n,r=0){const a=(0,fe._1)(e,"sparseIndices","sparseToDense","int32"),s=(0,fe._1)(t,"sparseValues","sparseToDense"),o=(0,fe._1)(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,o);const i={sparseIndices:a,sparseValues:s,defaultValue:o},u={outputShape:n};return de.BV.runKernelFunc((e=>e.sparseToDense(a,s,n,o)),i,null,he.D2,u)}});var _n=n(3307),On=n(5130),Fn=n(5735),Bn=n(5475),Mn=n(781),Pn=n(2998),Ln=n(47),Wn=n(7394),Vn=n(7405),Un=n(6884),zn=n(4926),Hn=n(7486),Gn=n(2676),Xn=n(5158),jn=n(9590),qn=n(2991),Kn=n(4136),Yn=n(7501),Qn=n(8644),Zn=n(3028);const Jn=(0,ge.op)({scatterND_:function(e,t,n){const r=(0,fe._1)(e,"indices","scatterND","int32"),a=(0,fe._1)(t,"updates","scatterND");Zn.b0(a,r,n);const s={indices:r,updates:a},o={shape:n};return de.BV.runKernelFunc((e=>e.scatterND(r,a,n)),s,null,he.xQ,o)}}),er=(0,ge.op)({gatherND_:function(e,t){const n=(0,fe._1)(t,"indices","gatherND","int32"),r=(0,fe._1)(e,"x","gatherND"),a={params:r,indices:n};return de.BV.runKernelFunc((e=>e.gatherND(r,n)),a,null,he.q1)}});var tr=n(7020),nr=n(8447),rr=n(3710),ar=n(4415),sr=n(1300),or=n(1483),ir=n(9682),ur=n(7918),lr=n(8441),cr=n(9112),pr=n(8247);function dr(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return I.lub((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[pe.I($("a",e,t,n),$("b",e,t,n))];case"AddN":return[ye($("tensors",e,t,n))];case"FloorMod":case"Mod":return[xe.w($("a",e,t,n),$("b",e,t,n))];case"Mul":return[be.d($("a",e,t,n),$("b",e,t,n))];case"RealDiv":case"Div":return[ve.h($("a",e,t,n),$("b",e,t,n))];case"DivNoNan":return[we.N($("a",e,t,n),$("b",e,t,n))];case"FloorDiv":return[Ie.q($("a",e,t,n),$("b",e,t,n))];case"Sub":return[Ne.l($("a",e,t,n),$("b",e,t,n))];case"Minimum":return[ke.L($("a",e,t,n),$("b",e,t,n))];case"Maximum":return[$e.g($("a",e,t,n),$("b",e,t,n))];case"Pow":return[Ce.s($("a",e,t,n),$("b",e,t,n))];case"SquaredDifference":return[Te.$($("a",e,t,n),$("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Se.W($("x",e,t,n))];case"Acos":return[Ee.K($("x",e,t,n))];case"Acosh":return[Re._($("x",e,t,n))];case"Asin":return[De.Z($("x",e,t,n))];case"Asinh":return[Ae.V($("x",e,t,n))];case"Atan":return[_e.z($("x",e,t,n))];case"Atan2":return[Oe.f($("x",e,t,n),$("y",e,t,n))];case"Atanh":return[Fe.C($("x",e,t,n))];case"Ceil":return[Be.m($("x",e,t,n))];case"Complex":return[Me.P($("real",e,t,n),$("imag",e,t,n))];case"Cos":return[Pe.m($("x",e,t,n))];case"Cosh":return[Le.f($("x",e,t,n))];case"Elu":return[We.p($("x",e,t,n))];case"Erf":return[Ve.q($("x",e,t,n))];case"Exp":return[Ue.Q($("x",e,t,n))];case"Expm1":return[ze.t($("x",e,t,n))];case"Floor":return[He.G($("x",e,t,n))];case"Log":return[Ge.c($("x",e,t,n))];case"Log1p":return[Xe.K($("x",e,t,n))];case"Imag":return[je.a($("x",e,t,n))];case"Neg":return[qe.W($("x",e,t,n))];case"Reciprocal":return[Ke.M($("x",e,t,n))];case"Real":return[Ye.k($("x",e,t,n))];case"Relu":return[Qe.U($("x",e,t,n))];case"Round":return[Ze.N($("x",e,t,n))];case"Selu":return[Je.U($("x",e,t,n))];case"Sigmoid":return[et.X($("x",e,t,n))];case"Sin":return[tt.O($("x",e,t,n))];case"Sign":return[nt.X($("x",e,t,n))];case"Sinh":return[rt.R($("x",e,t,n))];case"Softplus":return[at.W($("x",e,t,n))];case"Sqrt":return[st._($("x",e,t,n))];case"Square":return[ot.h($("x",e,t,n))];case"Tanh":return[it.A($("x",e,t,n))];case"Tan":return[ut.O($("x",e,t,n))];case"Relu6":case"ClipByValue":return[lt.i($("x",e,t,n),$("clipValueMin",e,t,n),$("clipValueMax",e,t,n))];case"Rsqrt":return[ct.b(C(e.inputNames[0],t,n))];case"Prod":return[pt.W($("x",e,t,n),$("axes",e,t,n))];case"LeakyRelu":return[dt.h($("x",e,t,n),$("alpha",e,t,n))];case"Prelu":return[ht.A($("x",e,t,n),$("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=$("thenBranch",e,t,n),a=$("elseBranch",e,t,n),s=$("cond",e,t,n),o=$("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=$("body",e,t,n),a=$("cond",e,t,n),s=$("args",e,t,n),o=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let u=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[D($("pred",e,t,n))];case"Switch":{const r=$("pred",e,t,n);let a=$("data",e,t,n);return a.kept||(a=D(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==C(e,t,n)));return r?[D(C(r,t,n))]:void 0}case"Enter":{const r=$("frameName",e,t,n),a=$("tensor",e,t,n);return n.enterFrame(r),[D(a)]}case"Exit":{const r=$("tensor",e,t,n);return n.exitFrame(),[D(r)]}case"NextIteration":{const r=$("tensor",e,t,n);return n.nextIteration(),[D(r)]}case"TensorArrayV3":{const r=$("size",e,t,n),a=$("dtype",e,t,n),s=$("elementShape",e,t,n),o=$("dynamicSize",e,t,n),i=$("clearAfterRead",e,t,n),u=$("identicalElementShapes",e,t,n),l=$("name",e,t,n),c=new mt(l,a,r,s,u,o,i);return n.addTensorArray(c),[c.idTensor,(0,I.iD$)(1)]}case"TensorArrayWriteV3":{const r=$("tensorArrayId",e,t,n),a=$("index",e,t,n),s=$("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(a,s),[o.idTensor]}case"TensorArrayReadV3":{const r=$("tensorArrayId",e,t,n),a=$("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=$("tensorArrayId",e,t,n),a=$("indices",e,t,n),s=$("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=$("tensorArrayId",e,t,n),a=$("indices",e,t,n),s=$("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(a,s),[o.idTensor]}case"TensorArrayConcatV3":{const r=$("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=$("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=$("tensorArrayId",e,t,n),a=$("tensor",e,t,n),s=$("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(s,a),[o.idTensor]}case"TensorArraySizeV3":{const r=$("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[(0,I.iD$)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=$("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=$("tensorListId",e,t,n),a=$("index",e,t,n),s=$("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(a,s),[o.idTensor]}case"TensorListGetItem":{const r=$("tensorListId",e,t,n),a=$("index",e,t,n),s=$("elementShape",e,t,n),o=$("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=$("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new gt([],n,e.dtype,r),o=(0,I.HHK)(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}($("tensor",e,t,n),r,$("elementShape",e,t,n),$("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":{const o=(r=$("elementShape",e,t,n),a=$("elementDType",e,t,n),s=$("numElements",e,t,n),new gt([],r,a,s));return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=$("tensorListId",e,t,n),a=$("indices",e,t,n),s=$("elementShape",e,t,n),o=$("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,o,s)]}case"TensorListStack":{const r=$("tensorListId",e,t,n),a=$("elementShape",e,t,n),s=$("elementDType",e,t,n),o=$("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);ft(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=(0,I.HHK)(e);return new gt(a,t,r)}($("tensor",e,t,n),$("elementShape",e,t,n),$("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=$("tensorListId",e,t,n),a=n.getTensorList(r.id),s=$("dtype",e,t,n),o=$("elementShape",e,t,n);return[a.concat(s,o)]}case"TensorListPushBack":{const r=$("tensorListId",e,t,n),a=$("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=$("tensorListId",e,t,n),a=$("elementShape",e,t,n),s=$("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=$("tensor",e,t,n),a=$("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=0===r?0:e.size/r,o=(0,I.lub)((()=>{const o=[];e=(0,I.XLQ)(e,[1,r,s]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:a[r-1],0],u=[1,t[r],s];o[r]=(0,I.XLQ)((0,I.tPi)(e,i,u),n)}return e.dispose(),o})),i=new gt([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)i.setItem(e,o[e]);return i}(r,$("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}var r,a,s})(e,t,n);case"convolution":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=$("stride",e,t,n),a=$("pad",e,t,n),s=$("dataFormat",e,t,n).toUpperCase(),o=$("dilation",e,t,n);return[yt.P($("x",e,t,n),$("filter",e,t,n),r,a,s,o)]}case"Conv2D":{const r=$("strides",e,t,n),a=R(e,t,n),s=$("dataFormat",e,t,n).toUpperCase(),o=$("dilations",e,t,n);return[xt.T($("x",e,t,n),$("filter",e,t,n),[r[1],r[2]],a,s,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:o,biasArg:i,preluArg:u,activationFunc:l}=Ht(e,t,n);return[Tt({x:$("x",e,t,n),filter:$("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:u})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:o,biasArg:i,preluArg:u,activationFunc:l}=Ht(e,t,n);return[Dt({x:$("x",e,t,n),filter:$("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=$("outputShape",e,t,n),a=$("strides",e,t,n),s=R(e,t,n);return[Ot.b($("x",e,t,n),$("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=$("strides",e,t,n),a=R(e,t,n),s=$("dilations",e,t,n),o=$("dataFormat",e,t,n).toUpperCase();return[St.B($("input",e,t,n),$("filter",e,t,n),[r[1],r[2]],a,o,[s[1],s[2]])]}case"Conv3D":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("dataFormat",e,t,n).toUpperCase(),o=$("dilations",e,t,n);return[Ft($("x",e,t,n),$("filter",e,t,n),[r[1],r[2],r[3]],a,s,[o[1],o[2],o[3]])]}case"AvgPool":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("kernelSize",e,t,n);return[Bt.w($("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("kernelSize",e,t,n);return[Mt._($("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("kernelSize",e,t,n),o=$("includeBatchInIndex",e,t,n),{result:i,indexes:u}=Pt($("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,o);return[i,u]}case"AvgPool3D":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("kernelSize",e,t,n);return[Vt($("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("kernelSize",e,t,n);return[Ut($("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("dilations",e,t,n),o=r[1],i=r[2],u=s[1],l=s[2];return[zt.W($("x",e,t,n),$("filter",e,t,n),[o,i],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=$("shape",e,t,n),a=$("dtype",e,t,n),s=$("value",e,t,n);return[Gt.h(r,s,a)]}case"LinSpace":return[Xt($("start",e,t,n),$("stop",e,t,n),$("num",e,t,n))];case"Multinomial":{const r=$("logits",e,t,n),a=$("numSamples",e,t,n),s=$("seed",e,t,n);return[jt(r,a,s)]}case"OneHot":{const r=$("indices",e,t,n),a=$("depth",e,t,n),s=$("onValue",e,t,n),o=$("offValue",e,t,n);return[qt.l(r,a,s,o)]}case"Ones":return[Kt.i($("shape",e,t,n),$("dtype",e,t,n))];case"OnesLike":return[Yt.J($("x",e,t,n))];case"RandomUniform":return[tn($("shape",e,t,n),$("minval",e,t,n),$("maxval",e,t,n),$("dtype",e,t,n))];case"Range":{const r=$("start",e,t,n),a=$("stop",e,t,n),s=$("step",e,t,n);return[nn.w(r,a,s,$("dtype",e,t,n))]}case"TruncatedNormal":{const r=$("shape",e,t,n),a=$("mean",e,t,n),s=$("stdDev",e,t,n),o=$("seed",e,t,n);return[rn(r,a,s,$("dtype",e,t,n),o)]}case"Zeros":return[an.l($("shape",e,t,n),$("dtype",e,t,n))];case"ZerosLike":return[sn.P($("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i,softNmsSigma:u}=pn(e,t,n),l=await on.BHj.nonMaxSuppressionWithScoreAsync(r,a,s,o,i,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=pn(e,t,n),u=$("padToMaxOutputSize",e,t,n),l=await on.BHj.nonMaxSuppressionPaddedAsync(r,a,s,o,i,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=pn(e,t,n);return[await on.BHj.nonMaxSuppressionAsync(r,a,s,o,i)]}case"Where":{const r=Wt.p($("condition",e,t,n),"bool"),a=[await ln(r)];return r.dispose(),a}case"ListDiff":return async function(e,t){const n=(0,fe._1)(e,"x","setdiff1d"),r=(0,fe._1)(t,"y","setdiff1d");me.hu(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),me.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),me.hu(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),o=new Set(s);let i=0;for(let e=0;e<a.length;e++)o.has(a[e])||i++;const u=new cn.YD([i],n.dtype),l=new cn.YD([i],"int32");for(let e=0,t=0;e<a.length;e++)o.has(a[e])||(u.values[t]=a[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]}($("x",e,t,n),$("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return I.lub((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=$("x",e,t,n),a=$("k",e,t,n),s=$("sorted",e,t,n),o=dn.h(r,a,s);return[o.values,o.indices]}case"Unique":{const r=$("x",e,t,n),a=hn.T(r);return[a.values,a.indices]}case"UniqueV2":{const r=$("x",e,t,n),a=$("axis",e,t,n),s=hn.T(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return I.lub((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=$("images",e,t,n),a=$("size",e,t,n),s=$("alignCorners",e,t,n);return[on.BHj.resizeBilinear(r,[a[0],a[1]],s)]}case"ResizeNearestNeighbor":{const r=$("images",e,t,n),a=$("size",e,t,n),s=$("alignCorners",e,t,n);return[on.BHj.resizeNearestNeighbor(r,[a[0],a[1]],s)]}case"CropAndResize":{const r=$("image",e,t,n),a=$("boxes",e,t,n),s=$("boxInd",e,t,n),o=$("cropSize",e,t,n),i=$("method",e,t,n),u=$("extrapolationValue",e,t,n);return[on.BHj.cropAndResize(r,a,s,o,i,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=$("default",e,t,n);return[C(e.name,t,n)||r];case"Placeholder":return[C(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[D($("x",e,t,n))];case"IdentityN":return $("x",e,t,n).map((e=>D(e)));case"Snapshot":return[D($("x",e,t,n))];case"Shape":return[fn.R($("x",e,t,n).shape,"int32")];case"ShapeN":return $("x",e,t,n).map((e=>fn.R(e.shape)));case"Size":return[mn.i($("x",e,t,n).size,"int32")];case"Rank":return[mn.i($("x",e,t,n).rank,"int32")];case"NoOp":return[mn.i(1)];case"Print":const a=$("x",e,t,n),s=$("data",e,t,n),o=$("message",e,t,n),i=$("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,i));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Equal":return[yn.D($("a",e,t,n),$("b",e,t,n))];case"NotEqual":return[xn.Q($("a",e,t,n),$("b",e,t,n))];case"Greater":return[bn.p($("a",e,t,n),$("b",e,t,n))];case"GreaterEqual":return[vn.b($("a",e,t,n),$("b",e,t,n))];case"Less":return[wn.d($("a",e,t,n),$("b",e,t,n))];case"LessEqual":return[In.z($("a",e,t,n),$("b",e,t,n))];case"LogicalAnd":return[Nn.H($("a",e,t,n),$("b",e,t,n))];case"LogicalNot":return[kn.h($("a",e,t,n))];case"LogicalOr":return[$n.K($("a",e,t,n),$("b",e,t,n))];case"Select":case"SelectV2":return[Cn.a($("condition",e,t,n),$("a",e,t,n),$("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return I.lub((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[At.O($("a",e,t,n),$("b",e,t,n),$("transposeA",e,t,n),$("transposeB",e,t,n))];case"Transpose":return[Tn.p($("x",e,t,n),$("perm",e,t,n))];case"_FusedMatMul":const[r,a]=$("fusedOps",e,t,n),s="biasadd"===r,o="prelu"===a,i=$("numArgs",e,t,n);if(s){if(o&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,l]=$("args",e,t,n);return[_t({a:$("a",e,t,n),b:$("b",e,t,n),transposeA:$("transposeA",e,t,n),transposeB:$("transposeB",e,t,n),bias:u,activation:a,preluActivationWeights:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return I.lub((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Sn.t($("x",e,t,n),$("mean",e,t,n),$("variance",e,t,n),$("offset",e,t,n),$("scale",e,t,n),$("epsilon",e,t,n))];case"LRN":return[En.G($("x",e,t,n),$("radius",e,t,n),$("bias",e,t,n),$("alpha",e,t,n),$("beta",e,t,n))];case"Softmax":return[Rn.X($("x",e,t,n))];case"LogSoftmax":return[Dn.C($("x",e,t,n))];case"SparseToDense":return[An($("sparseIndices",e,t,n),$("outputShape",e,t,n),$("sparseValues",e,t,n),$("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[_n.F($("x",e,t,n),r,a)]}case"Mean":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[On.J($("x",e,t,n),r,a)]}case"Min":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[Fn.V($("x",e,t,n),r,a)]}case"Sum":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[Bn.S($("x",e,t,n),r,a)]}case"All":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[Mn.$($("x",e,t,n),r,a)]}case"Any":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[Pn.Y($("x",e,t,n),r,a)]}case"ArgMax":{const r=$("axis",e,t,n);return[Ln.N($("x",e,t,n),r)]}case"ArgMin":{const r=$("axis",e,t,n);return[Wn.v($("x",e,t,n),r)]}case"Prod":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[pt.W($("x",e,t,n),r,a)]}case"Cumsum":{const r=$("axis",e,t,n),a=$("exclusive",e,t,n),s=$("reverse",e,t,n);return[Vn.z($("x",e,t,n),r,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return I.lub((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=$("n",e,t,n),a=$("axis",e,t,n);let s=$("tensors",e,t,n);return s=s.slice(0,r),[Un.z(s,a)]}case"GatherV2":case"Gather":{const r=$("axis",e,t,n),a=$("x",e,t,n),s=$("indices",e,t,n);return[zn.I(a,Wt.p(s,"int32"),r)]}case"ReverseV2":case"Reverse":{const r=$("axis",e,t,n),a=$("x",e,t,n);return[Hn.G(a,r)]}case"Slice":{const r=$("begin",e,t,n),a=$("size",e,t,n);return[Gn.t($("x",e,t,n),r,a)]}case"StridedSlice":{const r=$("begin",e,t,n),a=$("end",e,t,n),s=$("strides",e,t,n),o=$("beginMask",e,t,n),i=$("endMask",e,t,n),u=$("ellipsisMask",e,t,n),l=$("newAxisMask",e,t,n),c=$("shrinkAxisMask",e,t,n),p=$("x",e,t,n);return[Xn.N(p,r,a,s,o,i,u,l,c)]}case"Pack":return(0,I.lub)((()=>{const r=$("axis",e,t,n),a=$("tensors",e,t,n),s=a[0].shape,o=jn.L(a[0]).shape,i=a.map((e=>{const t=I.D5U.cO(e.shape,s);if(!t&&!I.D5U.cO(jn.L(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:Ct.X(e,s)}));return[qn.k(i,r)]}));case"Unpack":{const r=$("axis",e,t,n),a=$("tensor",e,t,n);return Kn.H(a,r)}case"Tile":{const r=$("reps",e,t,n);return[Yn.G($("x",e,t,n),r)]}case"Split":case"SplitV":{const r=$("axis",e,t,n),a=$("numOrSizeSplits",e,t,n),s=$("x",e,t,n);return Qn.V(s,a,r)}case"ScatterNd":{const r=$("indices",e,t,n),a=$("values",e,t,n),s=$("shape",e,t,n);return[Jn(r,a,s)]}case"GatherNd":{const r=$("x",e,t,n),a=$("indices",e,t,n);return[er(r,a)]}case"SparseToDense":{const r=$("sparseIndices",e,t,n),a=$("outputShape",e,t,n),s=$("sparseValues",e,t,n),o=$("defaultValue",e,t,n);return[An(r,s,a,s.dtype===o.dtype?o:Wt.p(o,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return I.lub((()=>((e,t,n)=>{switch(e.op){case"FFT":return[tr.k($("x",e,t,n))];case"IFFT":return[nr.S($("x",e,t,n))];case"RFFT":return[rr.Q($("x",e,t,n))];case"IRFFT":return[ar.w($("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Wt.p($("x",e,t,n),$("dtype",e,t,n))];case"ExpandDims":{const r=$("axis",e,t,n);return[sr.d($("x",e,t,n),r)]}case"Squeeze":{const r=$("axis",e,t,n);return[jn.L($("x",e,t,n),r)]}case"Reshape":return[Ct.X($("x",e,t,n),$("shape",e,t,n))];case"MirrorPad":return[or.V($("x",e,t,n),$("padding",e,t,n),$("mode",e,t,n))];case"PadV2":case"Pad":return[ir.v($("x",e,t,n),$("padding",e,t,n),$("constantValue",e,t,n))];case"SpaceToBatchND":{const r=$("blockShape",e,t,n),a=$("paddings",e,t,n);return[ur.f($("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=$("blockShape",e,t,n),a=$("crops",e,t,n);return[lr.E($("x",e,t,n),r,a)]}case"DepthToSpace":{const r=$("blockSize",e,t,n),a=$("dataFormat",e,t,n).toUpperCase();return[cr.n($("x",e,t,n),r,a)]}case"BroadcastTo":return[pr.U($("x",e,t,n),$("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=$("keyDType",e,t,n),s=$("valueDType",e,t,n),o=new gn(a,s);return r.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=$("tableHandle",e,t,n,r),s=$("keys",e,t,n),o=$("values",e,t,n),i=r.getHashTableById(a.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const a=$("tableHandle",e,t,n,r),s=$("keys",e,t,n),o=$("defaultValue",e,t,n),i=r.getHashTableById(a.id);return[await i.find(s,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=k(e.op);if(a&&a.customExecutor)return a.customExecutor(new ce(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return I.D5U.tI(a)?a.then((e=>[].concat(e))):[].concat(a)}class hr{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function fr(e,t,n,r){const a=new Set,s=[];let o=null,i=null;const u=new Set,l=Object.keys(e).map((e=>E(e)[0]));let c=[];null!=r&&(c=r.map((e=>E(e.name)[0])));const p=[...t];for(;p.length>0;){const e=p.pop();(xr(e)||br(e)||vr(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),p.push(e))})):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:o,syncInputs:i}}const mr=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],gr=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],yr=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function xr(e){return mr.indexOf(e.op)>=0}function br(e){return gr.indexOf(e.op)>=0}function vr(e){return yr.indexOf(e.op)>=0}class wr{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new wr(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=fr(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],o=Object.keys(a).map((e=>E(e)[0])).map((t=>e.nodes[t])),i=e.initNodes;o.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=i&&i.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[E(e)[0]])),a=t.map((e=>E(e)[0]));let s=a.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);const o=this.getCompilationKey(r,s);let i=this.compiledMap.get(o);null==i&&(i=this.compile(e,s),this.compiledMap.set(o,i));const u={},l={};return(0,I.lub)((()=>{const n=new hr(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=E(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),o={};for(let e=0;e<i.length;e++){const t=i[e];if(!r[t.name]){const e=dr(t,r,n,this._resourceManager);if(I.D5U.tI(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,o)}}return null==this.parent&&n.dispose(s),t.map((e=>C(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,o){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(o[e.id]=(o[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[S(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!a.has(e.id)){const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new hr(this.weightMap,r,a,this.functionExecutorMap),o=await this.executeWithControlFlow(e,s,t,n),i=t.map((e=>C(e,o,s))),u=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.keys(o).forEach((e=>{o[e].forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(c),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[E(e)[0]])),o=n.map((e=>E(e)[0]));let i=o.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:p}=fr(e,i,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),h=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=E(t),a=[];a[r]=e[t],h[n]=a}));const f={},m=this.getFrozenTensorIds(h),g={};for(;d.length>0;){const e=this.processStack(s,d,t,h,g,m,o,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=i.filter((e=>!xr(e)&&!C(e.name,h,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return h}processStack(e,t,n,r,a,s,o,i,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&$("isConstant",e.node,r,n)&&([c]=T(e.node.name,n)),null==r[e.node.name]){const p=dr(e.node,r,n,this._resourceManager);c||([c]=T(e.node.name,n));const d=n.currentContext;I.D5U.tI(p)?l.push(p.then((l=>(r[c]=l,n.currentContext=d,this.checkTensorForDisposal(c,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,u),l)))):(r[c]=p,this.checkTensorForDisposal(c,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[o]=T(e.name,n);!a[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!C(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!C(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=E(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));I.D5U.hu(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&I.D5U.hu(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=E(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=E(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Ir{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class Nr{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new Ir}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=I.io.MP(e,this.loadOptions);else{const t=I.io.rM(e,this.loadOptions);if(0===t.length)t.push(I.io.MP(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n={};null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=I.io.dI(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new wr(K.Instance.transformGraph(t,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer){const t=K.Instance.transformGraph(e.modelInitializer);this.initializer=new wr(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=I.io.yB(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof I.esB||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function kr(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new Nr(e,t);return await n.load(),n}function $r(e,t,n,r){return new(n||(n=Promise))((function(a,s){function o(e){try{u(r.next(e))}catch(e){s(e)}}function i(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}u((r=r.apply(e,t||[])).next())}))}function Cr(e,t){var n,r,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(s){return function(i){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,r=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!((a=(a=o.trys).length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,i])}}}function Tr(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function Sr(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function Er(e,t){void 0===t&&(t=1.5);var n=Sr(e),r=Tr(e),a=[t*r[0]/2,t*r[1]/2];return{startPoint:[n[0]-a[0],n[1]-a[1]],endPoint:[n[0]+a[0],n[1]+a[1]],palmLandmarks:e.palmLandmarks}}function Rr(e){var t=Sr(e),n=Tr(e),r=Math.max.apply(Math,n)/2;return{startPoint:[t[0]-r,t[1]-r],endPoint:[t[0]+r,t[1]+r],palmLandmarks:e.palmLandmarks}}function Dr(e,t){var n=[e.endPoint[0]-e.startPoint[0],e.endPoint[1]-e.startPoint[1]],r=[n[0]*t[0],n[1]*t[1]];return{startPoint:[e.startPoint[0]+r[0],e.startPoint[1]+r[1]],endPoint:[e.endPoint[0]+r[0],e.endPoint[1]+r[1]],palmLandmarks:e.palmLandmarks}}var Ar=function(){function e(e,t,n,r,a,s){this.model=e,this.width=t,this.height=n,this.iouThreshold=a,this.scoreThreshold=s,this.anchors=r.map((function(e){return[e.x_center,e.y_center]})),this.anchorsTensor=(0,I.odF)(this.anchors),this.inputSizeTensor=(0,I.RRF)([t,n]),this.doubleInputSizeTensor=(0,I.RRF)([2*t,2*n])}return e.prototype.normalizeBoxes=function(e){var t=this;return(0,I.lub)((function(){var n=(0,I.tPi)(e,[0,0],[-1,2]),r=(0,I.tPi)(e,[0,2],[-1,2]),a=(0,I.IHx)((0,I.hiC)(n,t.inputSizeTensor),t.anchorsTensor),s=(0,I.hiC)(r,t.doubleInputSizeTensor),o=(0,I.dC7)((0,I.luU)(a,s),t.inputSizeTensor),i=(0,I.dC7)((0,I.IHx)(a,s),t.inputSizeTensor);return(0,I.Izb)([o,i],1)}))},e.prototype.normalizeLandmarks=function(e,t){var n=this;return(0,I.lub)((function(){var r=(0,I.IHx)((0,I.hiC)(e.reshape([-1,7,2]),n.inputSizeTensor),n.anchors[t]);return(0,I.dC7)(r,n.inputSizeTensor)}))},e.prototype.getBoundingBoxes=function(e){return $r(this,void 0,void 0,(function(){var t,n,r,a,s,o,i,u,l,c,p,d,h,f,m,g=this;return Cr(this,(function(y){switch(y.label){case 0:return t=(0,I.lub)((function(){return(0,I.dC7)((0,I.luU)(e,.5),2)})),"webgl"===(0,I.N_N)()?(r=(0,I.OBj)().get("WEBGL_PACK_DEPTHWISECONV"),(0,I.OBj)().set("WEBGL_PACK_DEPTHWISECONV",!0),n=this.model.predict(t),(0,I.OBj)().set("WEBGL_PACK_DEPTHWISECONV",r)):n=this.model.predict(t),a=n.squeeze(),s=(0,I.lub)((function(){return(0,I.XD2)((0,I.tPi)(a,[0,0],[-1,1])).squeeze()})),o=(0,I.tPi)(a,[0,1],[-1,4]),i=this.normalizeBoxes(o),u=console.warn,console.warn=function(){},l=I.BHj.nonMaxSuppression(i,s,1,this.iouThreshold,this.scoreThreshold),console.warn=u,[4,l.array()];case 1:return c=y.sent(),p=[t,n,l,a,i,o,s],0===c.length?(p.forEach((function(e){return e.dispose()})),[2,null]):(d=c[0],h=(0,I.tPi)(i,[d,0],[1,-1]),f=(0,I.tPi)(a,[d,5],[1,14]),m=(0,I.lub)((function(){return g.normalizeLandmarks(f,d).reshape([-1,2])})),p.push(f),p.forEach((function(e){return e.dispose()})),[2,{boxes:h,palmLandmarks:m}])}}))}))},e.prototype.estimateHandBounds=function(e){return $r(this,void 0,void 0,(function(){var t,n,r,a,s,o,i,u,l=this;return Cr(this,(function(c){switch(c.label){case 0:return t=e.shape[1],n=e.shape[2],r=(0,I.lub)((function(){return e.resizeBilinear([l.width,l.height]).div(255)})),[4,this.getBoundingBoxes(r)];case 1:return null===(a=c.sent())?(r.dispose(),[2,null]):(s=a.boxes.arraySync(),o=s[0].slice(0,2),i=s[0].slice(2,4),u=a.palmLandmarks.arraySync(),r.dispose(),a.boxes.dispose(),a.palmLandmarks.dispose(),[2,(p={startPoint:o,endPoint:i,palmLandmarks:u},d=[n/this.width,t/this.height],{startPoint:[p.startPoint[0]*d[0],p.startPoint[1]*d[1]],endPoint:[p.endPoint[0]*d[0],p.endPoint[1]*d[1]],palmLandmarks:p.palmLandmarks.map((function(e){return[e[0]*d[0],e[1]*d[1]]}))})])}var p,d}))}))},e}(),_r={thumb:[1,2,3,4],indexFinger:[5,6,7,8],middleFinger:[9,10,11,12],ringFinger:[13,14,15,16],pinky:[17,18,19,20],palmBase:[0]},Or=function(e,t){return[[1,0,e],[0,1,t],[0,0,1]]};function Fr(e,t){for(var n=0,r=0;r<e.length;r++)n+=e[r]*t[r];return n}function Br(e,t){for(var n=[],r=0;r<e.length;r++)n.push(e[r][t]);return n}function Mr(e,t){for(var n=[],r=e.length,a=0;a<r;a++){n.push([]);for(var s=0;s<r;s++)n[a].push(Fr(e[a],Br(t,s)))}return n}function Pr(e,t){var n=Math.cos(e),r=Math.sin(e),a=[[n,-r,0],[r,n,0],[0,0,1]],s=Mr(Or(t[0],t[1]),a);return Mr(s,Or(-t[0],-t[1]))}function Lr(e,t){return[Fr(e,t[0]),Fr(e,t[1])]}var Wr=[0,-.4],Vr=[0,-.1],Ur=[0,5,9,13,17,1,2],zr=function(){function e(e,t,n,r,a,s){this.regionsOfInterest=[],this.runsWithoutHandDetector=0,this.boundingBoxDetector=e,this.meshDetector=t,this.maxContinuousChecks=a,this.detectionConfidence=s,this.meshWidth=n,this.meshHeight=r,this.maxHandsNumber=1}return e.prototype.getBoxForPalmLandmarks=function(e,t){var n=e.map((function(e){return Lr(e.concat([1]),t)}));return Er(Rr(Dr(this.calculateLandmarksBoundingBox(n),Wr)),3)},e.prototype.getBoxForHandLandmarks=function(e){for(var t=Er(Rr(Dr(this.calculateLandmarksBoundingBox(e),Vr)),1.65),n=[],r=0;r<Ur.length;r++)n.push(e[Ur[r]].slice(0,2));return t.palmLandmarks=n,t},e.prototype.transformRawCoords=function(e,t,n,r){var a,s,o,i,u=this,l=Tr(t),c=[l[0]/this.meshWidth,l[1]/this.meshHeight],p=e.map((function(e){return[c[0]*(e[0]-u.meshWidth/2),c[1]*(e[1]-u.meshHeight/2),e[2]]})),d=Pr(n,[0,0]),h=p.map((function(e){return Lr(e,d).concat([e[2]])})),f=(s=[[(a=r)[0][0],a[1][0]],[a[0][1],a[1][1]]],o=[a[0][2],a[1][2]],i=[-Fr(s[0],o),-Fr(s[1],o)],[s[0].concat(i[0]),s[1].concat(i[1]),[0,0,1]]),m=Sr(t).concat([1]),g=[Fr(m,f[0]),Fr(m,f[1])];return h.map((function(e){return[e[0]+g[0],e[1]+g[1],e[2]]}))},e.prototype.estimateHand=function(e){return $r(this,void 0,void 0,(function(){var t,n,r,a,s,o,i,u,l,c,p,d,h,f,m,g,y,x,b,v;return Cr(this,(function(w){switch(w.label){case 0:return!0!==(t=this.shouldUpdateRegionsOfInterest())?[3,2]:[4,this.boundingBoxDetector.estimateHandBounds(e)];case 1:return null===(n=w.sent())?(e.dispose(),this.regionsOfInterest=[],[2,null]):(this.updateRegionsOfInterest(n,!0),this.runsWithoutHandDetector=0,[3,3]);case 2:this.runsWithoutHandDetector++,w.label=3;case 3:return r=this.regionsOfInterest[0],a=function(e,t){var n;return(n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}(r.palmLandmarks[0],r.palmLandmarks[2]),s=Sr(r),o=[s[0]/e.shape[2],s[1]/e.shape[1]],i=I.BHj.rotateWithOffset(e,a,0,o),u=Pr(-a,s),l=!0===t?this.getBoxForPalmLandmarks(r.palmLandmarks,u):r,c=function(e,t,n){var r=t.shape[1],a=t.shape[2],s=[[e.startPoint[1]/r,e.startPoint[0]/a,e.endPoint[1]/r,e.endPoint[0]/a]];return I.BHj.cropAndResize(t,s,[0],n)}(l,i,[this.meshWidth,this.meshHeight]),p=c.div(255),c.dispose(),i.dispose(),"webgl"===(0,I.N_N)()?(h=(0,I.OBj)().get("WEBGL_PACK_DEPTHWISECONV"),(0,I.OBj)().set("WEBGL_PACK_DEPTHWISECONV",!0),d=this.meshDetector.predict(p),(0,I.OBj)().set("WEBGL_PACK_DEPTHWISECONV",h)):d=this.meshDetector.predict(p),f=d[0],m=d[1],p.dispose(),g=f.dataSync()[0],f.dispose(),g<this.detectionConfidence?(m.dispose(),this.regionsOfInterest=[],[2,null]):(y=(0,I.XLQ)(m,[-1,3]),x=y.arraySync(),m.dispose(),y.dispose(),b=this.transformRawCoords(x,l,a,u),v=this.getBoxForHandLandmarks(b),this.updateRegionsOfInterest(v,!1),[2,{landmarks:b,handInViewConfidence:g,boundingBox:{topLeft:v.startPoint,bottomRight:v.endPoint}}])}}))}))},e.prototype.calculateLandmarksBoundingBox=function(e){var t=e.map((function(e){return e[0]})),n=e.map((function(e){return e[1]}));return{startPoint:[Math.min.apply(Math,t),Math.min.apply(Math,n)],endPoint:[Math.max.apply(Math,t),Math.max.apply(Math,n)]}},e.prototype.updateRegionsOfInterest=function(e,t){if(t)this.regionsOfInterest=[e];else{var n=this.regionsOfInterest[0],r=0;if(null!=n&&null!=n.startPoint){var a=e.startPoint,s=a[0],o=a[1],i=e.endPoint,u=i[0],l=i[1],c=n.startPoint,p=c[0],d=c[1],h=n.endPoint,f=h[0],m=h[1],g=Math.max(s,p),y=Math.max(o,d),x=(Math.min(u,f)-g)*(Math.min(l,m)-y);r=x/((u-s)*(l-o)+(f-p)*(m-o)-x)}this.regionsOfInterest[0]=r>.8?n:e}},e.prototype.shouldUpdateRegionsOfInterest=function(){return this.regionsOfInterest.length!==this.maxHandsNumber||this.runsWithoutHandDetector>=this.maxContinuousChecks},e}();function Hr(){return $r(this,void 0,void 0,(function(){return Cr(this,(function(e){return[2,kr("https://tfhub.dev/mediapipe/tfjs-model/handdetector/1/default/1",{fromTFHub:!0})]}))}))}function Gr(){return $r(this,void 0,void 0,(function(){return Cr(this,(function(e){return[2,kr("https://tfhub.dev/mediapipe/tfjs-model/handskeleton/1/default/1",{fromTFHub:!0})]}))}))}function Xr(){return $r(this,void 0,void 0,(function(){return Cr(this,(function(e){return[2,I.D5U.he("https://tfhub.dev/mediapipe/tfjs-model/handskeleton/1/default/1/anchors.json?tfjs-format=file").then((function(e){return e.json()}))]}))}))}function jr(e){var t=void 0===e?{}:e,n=t.maxContinuousChecks,r=void 0===n?1/0:n,a=t.detectionConfidence,s=void 0===a?.8:a,o=t.iouThreshold,i=void 0===o?.3:o,u=t.scoreThreshold,l=void 0===u?.5:u;return $r(this,void 0,void 0,(function(){var e,t,n,a,o,u;return Cr(this,(function(c){switch(c.label){case 0:return[4,Promise.all([Xr(),Hr(),Gr()])];case 1:return e=c.sent(),t=e[0],n=e[1],a=e[2],o=new Ar(n,256,256,t,i,l),u=new zr(o,a,256,256,r,s),[2,new qr(u)]}}))}))}var qr=function(){function e(e){this.pipeline=e}return e.getAnnotations=function(){return _r},e.prototype.estimateHands=function(e,t){return void 0===t&&(t=!1),$r(this,void 0,void 0,(function(){var n,r,a,s,o,i,u,l,c;return Cr(this,(function(p){switch(p.label){case 0:return n=function(e){return e instanceof I.esB?[e.shape[0],e.shape[1]]:[e.height,e.width]}(e),r=n[1],a=(0,I.lub)((function(){return e instanceof I.esB||(e=I.Xhn.n(e)),e.toFloat().expandDims(0)})),[4,this.pipeline.estimateHand(a)];case 1:if(s=p.sent(),a.dispose(),null===s)return[2,[]];for(o=s,!0===t&&(o=function(e,t){var n=e.handInViewConfidence,r=e.landmarks,a=e.boundingBox;return{handInViewConfidence:n,landmarks:r.map((function(e){return[t-1-e[0],e[1],e[2]]})),boundingBox:{topLeft:[t-1-a.topLeft[0],a.topLeft[1]],bottomRight:[t-1-a.bottomRight[0],a.bottomRight[1]]}}}(s,r)),i={},u=0,l=Object.keys(_r);u<l.length;u++)c=l[u],i[c]=_r[c].map((function(e){return o.landmarks[e]}));return[2,[{handInViewConfidence:o.handInViewConfidence,boundingBox:o.boundingBox,landmarks:o.landmarks,annotations:i}]]}}))}))},e}()},8166:(e,t,n)=>{"use strict";n.d(t,{H:()=>a});var r=n(6853);function a(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.D5U.hu("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}},462:(e,t,n)=>{"use strict";n.r(t),n.d(t,{MathBackendCPU:()=>p,shared:()=>d,version_cpu:()=>h});var r=n(6853),a=n(6377),s=n(8166);const o=r.GDt.GP,i=r.GDt.Vl,u=r.GDt.Gg,l=r.GDt.vN,c=r.GDt.ZA;class p extends r.Zuw{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new r.JLz(this,(0,r.SRH)())}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,r.OBj)().get("IS_NODE")&&r.Wap.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const a={};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.D5U.HD(n[0])){const s=n.map((e=>r.D5U.YW(e)));a=this.write(s,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r){this.data.set(e,{values:t,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return r.Wap.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>r.D5U.v5(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return r.f3b(e.shape,e.dtype,n)}makeOutput(e,t,n){const a=this.write(e,t,n);return(0,r.SRH)().makeTensorFromDataId(a,t,n,this)}disposeData(e){if(this.data.has(e)){const{complexTensorInfos:t}=this.data.get(e);null!=t&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.data.has(t)){const e=this.data.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}async time(e){const t=r.D5U.zO();return e(),{kernelMs:r.D5U.zO()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}stridedSlice(e,t,n,a){(0,s.H)(e,"stridedSlice");const o=r.kuN.computeOutShape(t,n,a);if(o.some((e=>0===e)))return r.XeE([],o);const i=r.f3b(o,e.dtype),u=this.bufferSync(e);for(let e=0;e<i.size;e++){const n=i.indexToLoc(e),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[e]*a[e]+t[e];i.set(u.get(...r),...n)}return i.toTensor()}diag(e){const t=this.readSync(e.dataId),n=r.f3b([e.size,e.size],e.dtype),a=n.values;for(let n=0;n<t.length;n++)a[n*e.size+n]=t[n];return n.toTensor()}unstack(e,t){const n=e.shape[t],a=new Array(e.rank-1);let s=0;for(let n=0;n<e.rank;n++)n!==t&&(a[s++]=e.shape[n]);const o=new Array(e.rank).fill(0),i=e.shape.slice();i[t]=1;const u=new Array(n);for(let n=0;n<u.length;n++)o[t]=n,u[n]=r.tPi(e,o,i).reshape(a);return u}reverse(e,t){(0,s.H)(e,"reverse");const n=r.f3b(e.shape,e.dtype),a=this.bufferSync(e);for(let r=0;r<n.size;r++){const s=n.indexToLoc(r),o=s.slice();t.forEach((t=>o[t]=e.shape[t]-1-o[t])),n.set(a.get(...o),...s)}return n.toTensor()}neg(e){return(0,s.H)(e,"neg"),r.dC7(r.iD$(-1),e)}addN(e){(0,s.H)(e,"addN");const t=e.map((e=>this.readSync(e.dataId))),n=r.f3b(e[0].shape,e[0].dtype),a=n.values;for(let n=0;n<e.length;n++){const e=t[n];for(let t=0;t<a.length;t++)a[t]+=e[t]}return n.toTensor()}softmax(e,t){const n=r.D5U.EC([t],e.shape),a=(0,r.Fp7)(e,n),s=r.Wap.expandShapeToKeepDim(a.shape,n),o=r.luU(e,a.reshape(s)),i=r.Qqt(o),u=this.sum(i,n).reshape(s);return r.hiC(i,u)}pow(e,t){return(0,s.H)([e,t],"pow"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>Math.pow(e,t)))}floorDiv(e,t){return(0,s.H)([e,t],"floorDiv"),this.broadcastedBinaryOp(e,t,"int32",((e,t)=>Math.floor(e/t)))}sum(e,t){(0,s.H)(e,"sum"),r.Wap.assertAxesAreInnerMostDims("sum",t,e.rank);const[n,a]=r.Wap.computeOutAndReduceShapes(e.shape,t),o=(0,r.x8V)(e.dtype,"int32"),i=r.lls(n,o),u=r.D5U.NA(a),l=this.readSync(i.dataId),c=this.readSync(e.dataId);for(let e=0;e<l.length;++e){const t=e*u;let n=0;for(let e=0;e<u;++e)n+=c[t+e];l[e]=n}return i}prod(e,t){(0,s.H)(e,"sum");const[n,a]=r.Wap.computeOutAndReduceShapes(e.shape,t),o=(0,r.x8V)(e.dtype,"int32"),i=r.lls(n,o),u=r.D5U.NA(a),l=this.readSync(i.dataId),c=this.readSync(e.dataId);for(let e=0;e<l.length;++e){const t=e*u;let n=1;for(let e=0;e<u;++e)n*=c[t+e];l[e]=n}return i}unsortedSegmentSum(e,t,n){(0,s.H)(e,"unsortedSegmentSum");const a=[],o=e.rank-t.rank;for(let e=0;e<o;++e)t=t.expandDims(e+1);for(let s=0;s<n;++s){const n=r.iD$(s,"int32"),o=r.DgJ(n,t).asType("float32").mul(e).sum(0);a.push(o)}return r.knu(a)}argMin(e,t){(0,s.H)(e,"argMin");const n=[t];r.Wap.assertAxesAreInnerMostDims("argMin",n,e.rank);const[a,o]=r.Wap.computeOutAndReduceShapes(e.shape,n),i=r.lls(a,"int32"),u=r.D5U.NA(o),l=this.readSync(i.dataId),c=this.readSync(e.dataId);for(let e=0;e<l.length;++e){const t=e*u;let n=c[t],r=0;for(let e=0;e<u;++e){const a=c[t+e];a<n&&(n=a,r=e)}l[e]=r}return i}argMax(e,t){(0,s.H)(e,"argMax");const n=[t];r.Wap.assertAxesAreInnerMostDims("argMax",n,e.rank);const[a,o]=r.Wap.computeOutAndReduceShapes(e.shape,n),i=r.lls(a,"int32"),u=r.D5U.NA(o),l=this.readSync(i.dataId),c=this.readSync(e.dataId);for(let e=0;e<l.length;++e){const t=e*u;let n=c[t],r=0;for(let e=0;e<u;++e){const a=c[t+e];a>n&&(n=a,r=e)}l[e]=r}return i}cumsum(e,t,n,a){if((0,s.H)(e,"cumsum"),t!==e.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${e.rank-1} but got axis=${t}`);const o=(0,r.x8V)(e.dtype,"int32"),i=r.lls(e.shape,o),u=this.readSync(i.dataId),l=this.readSync(e.dataId),c=e.shape[e.rank-1],p=a?(e,t)=>e+c-t-1:(e,t)=>e+t;for(let e=0;e<l.length;e+=c)for(let t=0;t<c;t++){const r=p(e,t);if(0===t)u[r]=n?0:l[r];else{const a=p(e,t-1);u[r]=n?l[a]+u[a]:l[r]+u[a]}}return i}equal(e,t){return(0,s.H)([e,t],"equal"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e===t?1:0))}notEqual(e,t){return(0,s.H)([e,t],"notEqual"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e!==t?1:0))}less(e,t){return(0,s.H)([e,t],"less"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e<t?1:0))}lessEqual(e,t){return(0,s.H)([e,t],"lessEqual"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e<=t?1:0))}greater(e,t){return(0,s.H)([e,t],"greater"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e>t?1:0))}greaterEqual(e,t){return(0,s.H)([e,t],"greaterEqual"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e>=t?1:0))}logicalAnd(e,t){return(0,s.H)([e,t],"logicalAnd"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e&&t))}logicalOr(e,t){return(0,s.H)([e,t],"logicalOr"),this.broadcastedBinaryOp(e,t,"bool",((e,t)=>e||t))}select(e,t,n){(0,s.H)([e,t,n],"select");const a=this.readSync(e.dataId),o=this.readSync(t.dataId),i=this.readSync(n.dataId),u=r.lls(t.shape,(0,r.x8V)(t.dtype,n.dtype)),l=this.readSync(u.dataId);let c=0;const p=0===e.rank||e.rank>1||1===t.rank?1:r.D5U.NA(t.shape.slice(1));for(let e=0;e<a.length;e++)for(let t=0;t<p;t++)1===a[e]?l[c++]=o[e]:l[c++]=i[e];return u}where(e){(0,s.H)([e],"where");const t=this.readSync(e.dataId);return c(e.shape,t)}topk(e,t,n){(0,s.H)(e,"topk");const r=this.readSync(e.dataId);return l(r,e.shape,e.dtype,t,n)}min(e,t){(0,s.H)(e,"min"),r.Wap.assertAxesAreInnerMostDims("min",t,e.rank);const[n,a]=r.Wap.computeOutAndReduceShapes(e.shape,t),o=r.lls(n,e.dtype),i=r.D5U.NA(a),u=this.readSync(o.dataId),l=this.readSync(e.dataId);for(let e=0;e<u.length;++e){const t=e*i;let n=l[t];for(let e=0;e<i;++e){const r=l[t+e];r<n&&(n=r)}u[e]=n}return o}minimum(e,t){return(0,s.H)([e,t],"minimum"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>Math.min(e,t)))}mod(e,t){return(0,s.H)([e,t],"mod"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}))}maximum(e,t){return(0,s.H)([e,t],"maximum"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>Math.max(e,t)))}all(e,t){(0,s.H)(e,"all"),r.Wap.assertAxesAreInnerMostDims("all",t,e.rank);const[n,a]=r.Wap.computeOutAndReduceShapes(e.shape,t),o=r.lls(n,e.dtype),i=r.D5U.NA(a),u=this.readSync(o.dataId),l=this.readSync(e.dataId);for(let e=0;e<u.length;++e){const t=e*i;let n=l[t];for(let e=0;e<i;++e){const r=l[t+e];n=n&&r}u[e]=n}return o}any(e,t){(0,s.H)(e,"any"),r.Wap.assertAxesAreInnerMostDims("any",t,e.rank);const[n,a]=r.Wap.computeOutAndReduceShapes(e.shape,t),o=r.lls(n,e.dtype),i=r.D5U.NA(a),u=this.readSync(o.dataId),l=this.readSync(e.dataId);for(let e=0;e<u.length;++e){const t=e*i;let n=l[t];for(let e=0;e<i;++e){const r=l[t+e];n=n||r}u[e]=n}return o}squaredDifference(e,t){return(0,s.H)([e,t],"squaredDifference"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>{const n=e-t;return n*n}))}eluDer(e,t){(0,s.H)([e,t],"eluDer");const n=new Float32Array(t.size),r=this.readSync(t.dataId),a=this.readSync(e.dataId);for(let e=0;e<r.length;++e){const t=r[e];n[e]=t>=1?a[e]:a[e]*(t+1)}return this.makeOutput(n,t.shape,"float32")}atan2(e,t){return(0,s.H)([e,t],"atan2"),this.broadcastedBinaryOp(e,t,e.dtype,((e,t)=>Math.atan2(e,t)))}tile(e,t){return(0,s.H)(e,"tile"),u(this.bufferSync(e),t)}gather(e,t,n){(0,s.H)([e,t],"gather");const a=e.shape.slice(),o=this.readSync(t.dataId);a[n]=o.length;const i=r.f3b(a,e.dtype),u=this.bufferSync(e);for(let e=0;e<i.size;++e){const t=i.indexToLoc(e),r=t.slice();r[n]=o[t[n]];const a=u.locToIndex(r);i.values[e]=u.values[a]}return i.toTensor()}batchToSpaceND(e,t,n){(0,s.H)([e],"batchToSpaceND");const a=t.reduce(((e,t)=>e*t)),o=r.Wap.getReshaped(e.shape,t,a),i=r.Wap.getPermuted(o.length,t.length),u=r.Wap.getReshapedPermuted(e.shape,t,a),l=r.Wap.getSliceBeginCoords(n,t.length),c=r.Wap.getSliceSize(u,n,t.length);return r.p4s(e.reshape(o),i).reshape(u).slice(l,c)}pool3d(e,t,n){(0,s.H)(e,"pool3d");const a=t.strideDepth,o=t.strideHeight,i=t.strideWidth,u=t.dilationDepth,l=t.dilationHeight,c=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,f=t.padInfo.front,m=t.padInfo.top,g=t.padInfo.left,y="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=this.readSync(e.dataId),b=r.f3b(t.outShape,e.dtype),v=b.values,w=t.outShape[1]*t.outShape[2]*t.outShape[3]*t.outShape[4],I=t.outShape[2]*t.outShape[3]*t.outShape[4],N=t.outShape[3]*t.outShape[4],k=t.outShape[4];for(let r=0;r<t.batchSize;++r){const s=r*w,b=r*e.strides[0];for(let r=0;r<t.inChannels;++r)for(let w=0;w<t.outDepth;++w){const $=w*a-f;let C=$;for(;C<0;)C+=u;const T=Math.min(t.inDepth,p+$),S=s+w*I;for(let a=0;a<t.outHeight;++a){const s=a*o-m;let p=s;for(;p<0;)p+=l;const f=Math.min(t.inHeight,d+s),w=S+a*N;for(let a=0;a<t.outWidth;++a){const s=a*i-g;let o=s;for(;o<0;)o+=c;const d=Math.min(t.inWidth,h+s),m=w+a*k;let I=y,N=0,$=0;for(let t=C;t<T;t+=u){const a=b+t*e.strides[1];for(let t=p;t<f;t+=l){const s=a+t*e.strides[2];for(let t=o;t<d;t+=c){const a=x[s+t*e.strides[3]+r];if("max"===n&&a>I?I=a:"avg"===n&&(N+=a,$++),isNaN(I))break}if(isNaN(I))break}if(isNaN(I))break}v[m+r]="avg"===n?N/$:I}}}}return b.toTensor()}avgPool3d(e,t){return(0,s.H)(e,"avgPool3d"),this.pool3d(e,t,"avg").toFloat()}avgPool3dBackprop(e,t,n){(0,s.H)([e,t],"avgPool3dBackprop");const a=n.strideDepth,o=n.strideHeight,i=n.strideWidth,u=n.filterDepth,l=n.filterHeight,c=n.filterWidth,p=n.dilationDepth,d=n.dilationHeight,h=n.dilationWidth,f=n.effectiveFilterDepth,m=n.effectiveFilterHeight,g=n.effectiveFilterWidth,y=f-1-n.padInfo.front,x=g-1-n.padInfo.left,b=m-1-n.padInfo.top,v=r.f3b(t.shape,"float32"),w=1/(u*l*c),I=this.bufferSync(e);for(let e=0;e<n.batchSize;++e)for(let t=0;t<n.inChannels;++t)for(let r=0;r<n.inDepth;++r)for(let s=0;s<n.inHeight;++s)for(let u=0;u<n.inWidth;++u){const l=r-y,c=s-b,N=u-x;let k=0;for(let r=0;r<f;r+=p){const s=(l+r)/a;if(!(s<0||s>=n.outDepth||Math.floor(s)!==s))for(let r=0;r<m;r+=d){const a=(c+r)/o;if(!(a<0||a>=n.outHeight||Math.floor(a)!==a))for(let r=0;r<g;r+=h){const o=(N+r)/i;o<0||o>=n.outWidth||Math.floor(o)!==o||(k+=I.get(e,s,a,o,t))}}}v.set(k*w,e,r,s,u,t)}return v.toTensor()}maxPool3d(e,t){return(0,s.H)(e,"maxPool3d"),this.pool3d(e,t,"max").toFloat()}maxPool3dPositions(e,t){const n=r.f3b(t.outShape,"int32"),a=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,p=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left,g=this.bufferSync(e);for(let e=0;e<t.batchSize;++e)for(let r=0;r<t.inChannels;++r)for(let y=0;y<t.outDepth;++y){const x=y*a-h;let b=x;for(;b<0;)b+=i;const v=Math.min(t.inDepth,c+x);for(let a=0;a<t.outHeight;++a){const c=a*s-f;let h=c;for(;h<0;)h+=u;const w=Math.min(t.inHeight,p+c);for(let s=0;s<t.outWidth;++s){const f=s*o-m;let I=f;for(;I<0;)I+=l;const N=Math.min(t.inWidth,d+f);let k=Number.NEGATIVE_INFINITY,$=-1;for(let t=b;t<v;t+=i){const n=t-x;for(let a=h;a<w;a+=u){const s=a-c;for(let o=I;o<N;o+=l){const i=o-f,u=g.get(e,t,a,o,r);u>=k&&(k=u,$=n*p*d+s*p+i)}}}n.set($,e,y,a,s,r)}}}return n.toTensor()}maxPool3dBackprop(e,t,n,a){(0,s.H)([t,n],"maxPool3dBackprop");const o=this.maxPool3dPositions(t,a),i=a.strideDepth,u=a.strideHeight,l=a.strideWidth,c=a.dilationDepth,p=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterDepth,f=a.effectiveFilterHeight,m=a.effectiveFilterWidth,g=h-1-a.padInfo.front,y=m-1-a.padInfo.left,x=f-1-a.padInfo.top,b=r.f3b(t.shape,"float32"),v=this.bufferSync(o),w=this.bufferSync(e);for(let e=0;e<a.batchSize;++e)for(let t=0;t<a.inChannels;++t)for(let n=0;n<a.inDepth;++n)for(let r=0;r<a.inHeight;++r)for(let s=0;s<a.inWidth;++s){const o=n-g,I=r-x,N=s-y;let k=0;for(let n=0;n<h;n+=c){const r=(o+n)/i;if(!(r<0||r>=a.outDepth||Math.floor(r)!==r))for(let s=0;s<f;s+=p){const o=(I+s)/u;if(!(o<0||o>=a.outHeight||Math.floor(o)!==o))for(let i=0;i<m;i+=d){const u=(N+i)/l;if(u<0||u>=a.outWidth||Math.floor(u)!==u)continue;const c=h*f*m-1-v.get(e,r,o,u,t)===n*f*m+s*m+i?1:0;0!==c&&(k+=w.get(e,r,o,u,t)*c)}}}b.set(k,e,n,r,s,t)}return b.toTensor()}resizeBilinear(e,t,n,a){(0,s.H)(e,"resizeBilinear");const[o,i,u,l]=e.shape,c=this.readSync(e.dataId),p=new Float32Array(r.D5U.NA([o,t,n,l])),d=[a&&t>1?i-1:i,a&&n>1?u-1:u],h=[a&&t>1?t-1:t,a&&n>1?n-1:n];let f=0;const m=d[0]/h[0],g=d[1]/h[1];for(let r=0;r<o;r++)for(let a=0;a<t;a++){const t=m*a,s=Math.floor(t),o=t-s,d=Math.min(i-1,Math.ceil(t)),h=r*e.strides[0]+s*e.strides[1],y=r*e.strides[0]+d*e.strides[1];for(let t=0;t<n;t++){const n=g*t,r=Math.floor(n),a=n-r,s=Math.min(u-1,Math.ceil(n)),i=h+r*e.strides[2],d=y+r*e.strides[2],m=h+s*e.strides[2],x=y+s*e.strides[2];for(let e=0;e<l;e++){const t=c[i+e],n=c[d+e],r=t+(c[m+e]-t)*a,s=r+(n+(c[x+e]-n)*a-r)*o;p[f++]=s}}}return r.XeE(p,[o,t,n,l])}resizeBilinearBackprop(e,t,n){(0,s.H)([e,t],"resizeBilinearBackprop");const[a,o,i,u]=t.shape,[,l,c]=e.shape,p=new Float32Array(a*o*i*u),d=[n&&l>1?o-1:o,n&&c>1?i-1:i],h=[n&&l>1?l-1:l,n&&c>1?c-1:c],f=d[0]/h[0],m=d[1]/h[1],g=this.readSync(e.dataId);let y=0;for(let e=0;e<a;e++){const n=e*t.strides[0];for(let e=0;e<l;e++){const r=e*f,a=Math.floor(r),s=Math.min(Math.ceil(r),o-1),l=n+a*t.strides[1],d=n+s*t.strides[1],h=r-a,x=1-h;for(let e=0;e<c;e++){const n=e*m,r=Math.floor(n),a=Math.min(Math.ceil(n),i-1),s=n-r,o=1-s,c=l+r*t.strides[2],f=l+a*t.strides[2],b=d+r*t.strides[2],v=d+a*t.strides[2],w=x*o,I=x*s,N=h*o,k=h*s;for(let e=0;e<u;e++){const t=g[y++];p[c+e]+=t*w,p[f+e]+=t*I,p[b+e]+=t*N,p[v+e]+=t*k}}}}return r.yXz(p,[a,i,o,u],t.dtype)}resizeNearestNeighbor(e,t,n,a){(0,s.H)(e,"resizeNearestNeighbor");const[o,i,u,l]=e.shape,c=this.readSync(e.dataId),p=new Float32Array(o*t*n*l),d=[a&&t>1?i-1:i,a&&n>1?u-1:u],h=[a&&t>1?t-1:t,a&&n>1?n-1:n],f=d[0]/h[0],m=d[1]/h[1];let g=0;for(let r=0;r<o;r++){const s=r*e.strides[0];for(let r=0;r<t;r++){const t=f*r,o=s+Math.min(i-1,a?Math.round(t):Math.floor(t))*e.strides[1];for(let t=0;t<n;t++){const n=m*t,r=o+Math.min(u-1,a?Math.round(n):Math.floor(n))*e.strides[2];for(let e=0;e<l;e++){const t=c[r+e];p[g++]=t}}}}return r.XeE(p,[o,t,n,l],e.dtype)}resizeNearestNeighborBackprop(e,t,n){(0,s.H)([e,t],"resizeNearestNeighborBackprop");const[a,o,i,u]=t.shape,[,l,c]=e.shape,p=new Float32Array(a*o*i*u),d=this.readSync(e.dataId),h=[n&&l>1?o-1:o,n&&c>1?i-1:i],f=[n&&l>1?l-1:l,n&&c>1?c-1:c],m=h[0]/f[0],g=h[1]/f[1],y=1/m,x=1/g,b=2*Math.ceil(y)+2,v=2*Math.ceil(x)+2;for(let r=0;r<a;r++){const a=r*t.strides[0];for(let r=0;r<o;r++){const s=a+r*t.strides[1],h=Math.floor(r*y),f=Math.floor(h-b/2);for(let h=0;h<i;h++){const y=s+h*t.strides[2],w=Math.floor(h*x),I=Math.floor(w-v/2);for(let t=0;t<u;t++){let s=0;for(let u=0;u<b;u++){const p=u+f;if(p<0||p>=l)continue;const y=a+p*e.strides[1],x=p*m;if(r===Math.min(o-1,n?Math.round(x):Math.floor(x)))for(let r=0;r<v;r++){const a=r+I;if(a<0||a>=c)continue;const o=y+a*e.strides[2],u=a*g;h===Math.min(i-1,n?Math.round(u):Math.floor(u))&&(s+=d[o+t])}}p[y+t]=s}}}}return r.yXz(p,t.shape,t.dtype)}localResponseNormalization4D(e,t,n,a,o){(0,s.H)(e,"localResponseNormalization4D");const i=e.shape[3],u=i-1,l=this.readSync(e.dataId),c=e.size,p=new Float32Array(c);function d(e){const n=e%i;let r=e-n+Math.max(0,n-t);const a=e-n+Math.min(n+t,u);let s=0;for(;r<=a;r++){const e=l[r];s+=e*e}return s}for(let e=0;e<c;e++){const t=d(e),r=l[e]*Math.pow(n+a*t,-o);p[e]=r}return r.yXz(p,e.shape)}LRNGrad(e,t,n,a,o,i,u){(0,s.H)(e,"LRNGrad");const l=e.shape[3],c=this.readSync(e.dataId),p=this.readSync(t.dataId),d=this.readSync(n.dataId),h=new Float32Array(e.size),f=e.size;for(let e=0;e<f;e++){const t=e%l,n=e-t+Math.max(0,t-a),r=e-t+Math.min(l,t+a+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(p[e],2);s=i*s+o;for(let t=n;t<r;t++){let n=-2*i*u*p[t]*d[e]/s;e===t&&(n+=Math.pow(s,-u)),n*=c[e],h[t]+=n}}return r.yXz(h,e.shape)}multinomial(e,t,n,o){(0,s.H)(e,"multinomial");const i=t?e:r.XAC(e),u=i.shape[0],l=i.shape[1],c=r.lls([u,n],"int32"),p=this.readSync(c.dataId),d=this.readSync(i.dataId);for(let e=0;e<u;++e){const t=e*l,r=new Float32Array(l-1);r[0]=d[t];for(let e=1;e<r.length;++e)r[e]=r[e-1]+d[t+e];const s=a.alea(o.toString()),i=e*n;for(let e=0;e<n;++e){const t=s();p[i+e]=r.length;for(let n=0;n<r.length;n++)if(t<r[n]){p[i+e]=n;break}}}return c}oneHot(e,t,n,a){(0,s.H)(e,"oneHot");const o=new Float32Array(e.size*t);o.fill(a);const i=this.readSync(e.dataId);for(let r=0;r<e.size;++r)i[r]>=0&&i[r]<t&&(o[r*t+i[r]]=n);return r.odF(o,[e.size,t],"int32")}nonMaxSuppression(e,t,n,r,a){(0,s.H)(e,"nonMaxSuppression");const i=this.readSync(e.dataId),u=this.readSync(t.dataId);return o(i,u,n,r,a)}depthToSpace(e,t,n){r.D5U.hu("NHWC"===n,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${n}`)),r.D5U.hu(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`));const a=e.shape[0],s=e.shape[1],o=e.shape[2],i=e.shape[3],u=s*t,l=o*t,c=i/(t*t),p=this.readSync(e.dataId),d=new Float32Array(a*u*l*c);let h=0;for(let e=0;e<a;++e)for(let n=0;n<u;++n){const r=Math.floor(n/t),a=n%t;for(let n=0;n<l;++n){const u=Math.floor(n/t),l=(a*t+n%t)*c;for(let t=0;t<c;++t){const n=t+l+i*(u+o*(r+s*e));d[h++]=p[n]}}}return r.yXz(d,[a,u,l,c])}broadcastedBinaryOp(e,t,n,a){const s=r.Wap.assertAndGetBroadcastShape(e.shape,t.shape),o=r.f3b(s,n),i=this.readSync(e.dataId),u=this.readSync(t.dataId),l=r.Wap.getBroadcastDims(e.shape,s),c=r.Wap.getBroadcastDims(t.shape,s),p=o.values;if(l.length+c.length===0)for(let e=0;e<p.length;++e)p[e]=a(i[e%i.length],u[e%u.length]);else{const n=this.bufferSync(e),r=this.bufferSync(t);for(let s=0;s<p.length;++s){const d=o.indexToLoc(s),h=d.slice(-e.rank);l.forEach((e=>h[e]=0));const f=n.locToIndex(h),m=d.slice(-t.rank);c.forEach((e=>m[e]=0));const g=r.locToIndex(m);p[s]=a(i[f],u[g])}}return o.toTensor()}split(e,t,n){return i(e,t,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(e,t,n,a,s,o){const[i,u,l,c]=e.shape,p=t.shape[0],[d,h]=a,f=r.f3b([p,d,h,c],"float32"),m=this.readSync(t.dataId),g=this.readSync(n.dataId),y=this.readSync(e.dataId),x=e.strides,b=f.strides;for(let e=0;e<p;e++){const t=4*e,n=m[t],r=m[t+1],a=m[t+2],p=m[t+3],v=g[e];if(v>=i)continue;const w=d>1?(a-n)*(u-1)/(d-1):0,I=h>1?(p-r)*(l-1)/(h-1):0;for(let t=0;t<d;t++){const i=d>1?n*(u-1)+t*w:.5*(n+a)*(u-1);if(i<0||i>u-1)for(let n=0;n<h;n++)for(let r=0;r<c;r++){const a=r+n*b[2]+t*b[1]+e*b[0];f.values[a]=o}else if("bilinear"===s){const n=Math.floor(i),a=Math.ceil(i),s=i-n;for(let i=0;i<h;i++){const u=h>1?r*(l-1)+i*I:.5*(r+p)*(l-1);if(u<0||u>l-1){for(let n=0;n<c;n++){const r=n+i*b[2]+t*b[1]+e*b[0];f.values[r]=o}continue}const d=Math.floor(u),m=Math.ceil(u),g=u-d;for(let r=0;r<c;r++){let o=r+d*x[2]+n*x[1]+v*x[0];const u=y[o];o=r+m*x[2]+n*x[1]+v*x[0];const l=y[o];o=r+d*x[2]+a*x[1]+v*x[0];const c=y[o];o=r+m*x[2]+a*x[1]+v*x[0];const p=u+(l-u)*g,h=c+(y[o]-c)*g;o=r+i*b[2]+t*b[1]+e*b[0],f.values[o]=p+(h-p)*s}}}else for(let n=0;n<h;++n){const a=h>1?r*(l-1)+n*I:.5*(r+p)*(l-1);if(a<0||a>l-1){for(let r=0;r<c;r++){const a=r+n*b[2]+t*b[1]+e*b[0];f.values[a]=o}continue}const s=Math.round(a),u=Math.round(i);for(let r=0;r<c;r++){const a=r+s*x[2]+u*x[1]+v*x[0],o=r+n*b[2]+t*b[1]+e*b[0];f.values[o]=y[a]}}}}return f.toTensor()}sparseToDense(e,t,n,a){const{sliceRank:s,numUpdates:o,sliceSize:i,strides:u,outputSize:l}=r.Wap.calculateShapes(t,e,n);return this.scatter(e,t,n,l,i,o,s,u,a,!1)}gatherND(e,t){const n=t.shape,a=n[n.length-1],[s,o,i,u]=r.Wap.prepareAndValidate(e,t);if(0===o)return r.XeE([],s,e.dtype);const l=new r.YDk([o,i],e.dtype),c=this.readSync(t.dataId),p=this.readSync(e.dataId);for(let t=0;t<o;t++){const n=[];let r=0;for(let e=0;e<a;e++){const s=c[t*a+e];r+=s*u[e],n.push(s)}if(r<0||r>=e.size/i)throw new Error(`Invalid indices: ${n} does not index into ${e.shape}`);for(let e=0;e<i;e++)l.values[t*i+e]=p[r*i+e]}return l.toTensor().reshape(s)}scatterND(e,t,n){const{sliceRank:a,numUpdates:s,sliceSize:o,strides:i,outputSize:u}=r.Wap.calculateShapes(t,e,n),l=r.iD$(0);return this.scatter(e,t,n,u,o,s,a,i,l,!0)}onesLike(e){if("string"===e.dtype)throw new Error("onesLike is not supported for string tensors");return r.hlL(e.shape,1,e.dtype)}zerosLike(e){const t=r.D5U.rQ(e.dtype,r.D5U.NA(e.shape));return this.makeOutput(t,e.shape,e.dtype)}linspace(e,t,n){return r.Wap.linspaceImpl(e,t,n)}scatter(e,t,n,a,s,o,i,u,l,c){const p=[a/s,s],d=this.readSync(e.dataId),h=this.readSync(t.dataId);if(0===a)return r.XeE([],n,t.dtype);const f=new r.YDk(p,t.dtype);f.values.fill(this.readSync(l.dataId)[0]);for(let e=0;e<o;e++){const r=[];let o=0;for(let t=0;t<i;t++){const n=d[e*i+t];r.push(n),o+=n*u[t]}if(o<0||o>=a/s)throw new Error(`Invalid indices: ${r} does not index into ${n}`);for(let n=0;n<s;n++)c?f.values[o*s+n]+=h[e*s+n]:f.values[o*s+n]=0===t.rank?h[0]:h[e*s+n]}return f.toTensor().reshape(n)}}var d=n(5226);const h="2.7.0";(0,r.jqO)("cpu",(()=>new p),1);var f=n(6738);const m=(0,f.A)(r.SX0,(e=>e>=0?e:Math.exp(e)-1)),g={kernelName:r.SX0,backendName:"cpu",kernelFunc:m};var y=n(1775),x=n(3533);const b=(0,x.b)(((e,t)=>e<0?t*e:e));function v(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;(0,s.H)([r,a],"prelu");const o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[u,l]=b(r.shape,a.shape,o,i,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const w={kernelName:r.o0g,backendName:"cpu",kernelFunc:v},I=(0,f.A)(r.qkr,(e=>Math.max(0,e))),N={kernelName:r.qkr,backendName:"cpu",kernelFunc:I},k=(0,f.A)(r.SbG,(e=>Math.min(Math.max(0,e),6))),$={kernelName:r.SbG,backendName:"cpu",kernelFunc:k};function C(e,t,n,r){if("linear"===n)return(0,y.y)({inputs:{x:t},backend:e});if("relu"===n)return I({inputs:{x:t},backend:e});if("elu"===n)return m({inputs:{x:t},backend:e});if("relu6"===n)return k({inputs:{x:t},backend:e});if("prelu"===n)return v({inputs:{x:t,alpha:r},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}var T=n(2779);function S(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:o}=a,i=r.D5U.NA(s.shape),u=r.D5U.JZ(o,i),l=r.D5U.NA(u);r.D5U.hu(i===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const c=n.data.get(s.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=u,t.shape=u}return{dataId:s.dataId,shape:u,dtype:s.dtype}}const E={kernelName:r.HZH,backendName:"cpu",kernelFunc:S};function R(e){const{inputs:t,backend:n,attrs:a}=e,{a:o,b:i}=t,{transposeA:u,transposeB:l}=a;(0,s.H)([o,i],"matMul");const c=o.shape.length,p=i.shape.length,d=u?o.shape[c-2]:o.shape[c-1],h=l?i.shape[p-1]:i.shape[p-2],f=u?o.shape[c-1]:o.shape[c-2],m=l?i.shape[p-2]:i.shape[p-1],g=o.shape.slice(0,-2),y=i.shape.slice(0,-2),x=r.D5U.NA(g),b=r.D5U.NA(y),v=x===b||1===x||1===b;r.D5U.hu(c>=2&&p>=2&&v,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`));const w=(x>b?o.shape.slice(0,-2):i.shape.slice(0,-2)).concat([f,m]);r.D5U.hu(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${o.shape} and ${i.shape} and transposeA=${u} and transposeB=${l} must match.`));const I=l?[b,m,h]:[b,h,m],N=S({inputs:{x:o},backend:n,attrs:{shape:u?[x,d,f]:[x,f,d]}}),k=S({inputs:{x:i},backend:n,attrs:{shape:I}}),$=u?N.shape[1]:N.shape[2],C=u?N.shape[2]:N.shape[1],T=l?k.shape[1]:k.shape[2],E=Math.max(x,b),R=n.data.get(N.dataId).values,D=n.data.get(k.dataId).values,A=r.D5U.e3(N.shape),_=r.D5U.e3(k.shape),[O,F,B]=u?[A[0],1,A[1]]:[A[0],A[1],1],[M,P,L]=l?[1,_[1],_[0]]:[_[1],1,_[0]],W=C*T,V=(0,r.f3b)([E,C,T],N.dtype),U=V.values,z=n.blockSize;for(let e=0;e<E;e++)for(let t=0;t<C;t+=z)for(let n=0;n<T;n+=z)for(let r=0;r<$;r+=z){const a=Math.min(t+z,C),s=Math.min(n+z,T),o=Math.min(r+z,$);for(let i=t;i<a;i++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<o;a++){const r=Math.min(e,x-1)*O,s=Math.min(e,b-1)*L;n+=R[r+i*F+a*B]*D[a*M+t*P+s]}U[e*W+(i*T+t)]+=n}}return n.disposeIntermediateTensorInfo(N),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(w,V.dtype,V.values)}const D={kernelName:r.XLW,backendName:"cpu",kernelFunc:R},A={kernelName:r.usg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:c}=r;let p,d,h;const f=[];p=R({inputs:{a,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),o&&(d=(0,T.IH)({inputs:{a:p,b:o},backend:n}),f.push(p),p=d),c&&(h=C(n,p,c,i),f.push(p),p=h);for(const e of f)n.disposeIntermediateTensorInfo(e);return p}};var _=n(224);const O=(0,f.A)(r.VGw,(e=>Math.acos(e))),F={kernelName:r.VGw,backendName:"cpu",kernelFunc:O},B=(0,f.A)(r.SpW,(e=>Math.acosh(e))),M={kernelName:r.SpW,backendName:"cpu",kernelFunc:B},P=(0,f.A)(r.M2y,(e=>Math.asin(e))),L={kernelName:r.M2y,backendName:"cpu",kernelFunc:P},W=(0,f.A)(r.qw7,(e=>Math.asinh(e))),V={kernelName:r.qw7,backendName:"cpu",kernelFunc:W},U=(0,f.A)(r.jMg,(e=>Math.atan(e))),z={kernelName:r.jMg,backendName:"cpu",kernelFunc:U},H=(0,f.A)(r.Oyi,(e=>Math.atanh(e))),G={kernelName:r.Oyi,backendName:"cpu",kernelFunc:H};function X(e,t,n,a,s,o){const i=s.strideHeight,u=s.strideWidth,l=s.dilationHeight,c=s.dilationWidth,p=s.effectiveFilterHeight,d=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,r.f3b)(s.outShape,n),y=g.values,x=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],v=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*x,r=t*a[0];for(let t=0;t<s.inChannels;++t)for(let g=0;g<s.outHeight;++g){const x=g*i-h,w=Math.max(0,x),I=Math.min(s.inHeight,p+x),N=n+g*b;for(let n=0;n<s.outWidth;++n){const i=n*u-f,p=Math.max(0,i),h=Math.min(s.inWidth,d+i);let g=m,x=0,b=0;for(let n=w;n<I;n+=l){const s=r+n*a[1];for(let n=p;n<h;n+=c){const r=e[s+n*a[2]+t];"max"===o&&r>g?g=r:"avg"===o&&(x+=r,b++)}if(isNaN(g))break}y[N+n*v+t]="avg"===o?x/b:g}}}return g}function j(e,t,n,a,s=!1,o=!1){const i=(0,r.f3b)(a.outShape,"int32"),u=a.strideHeight,l=a.strideWidth,c=a.dilationHeight,p=a.dilationWidth,d=a.effectiveFilterHeight,h=a.effectiveFilterWidth,f=a.padInfo.top,m=a.padInfo.left,g=(0,r.f3b)(t,n,e);for(let e=0;e<a.batchSize;++e)for(let t=0;t<a.inChannels;++t)for(let n=0;n<a.outHeight;++n){const r=n*u-f;let y=r;for(;y<0;)y+=c;const x=Math.min(a.inHeight,d+r);for(let u=0;u<a.outWidth;++u){const d=u*l-m;let f=d;for(;f<0;)f+=p;const b=Math.min(a.inWidth,h+d);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<x;n+=c){const i=n-r;for(let r=f;r<b;r+=p){const u=r-d,l=g.get(e,n,r,t);l>v&&(v=l,w=s?o?((e*a.inHeight+n)*a.inWidth+r)*a.inChannels+t:(n*a.inWidth+r)*a.inChannels+t:i*h+u)}}i.set(w,e,n,u,t)}}return i}const q={kernelName:r.JhU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t;(0,s.H)(o,"avgPool");const{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=a;r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(u,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`));const p=r.Wap.computePool2DInfo(o.shape,i,u,1,l,c);let d;if(1===p.filterWidth&&1===p.filterHeight&&r.D5U.cO(p.inShape,p.outShape))d=(0,y.y)({inputs:{x:o},backend:n});else{const e=n.data.get(o.dataId).values,t=r.D5U.e3(o.shape),a=X(e,o.shape,o.dtype,t,p,"avg");d=n.makeTensorInfo(p.outShape,o.dtype,a.values)}return d}},K={kernelName:r.xts,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:o,input:i}=t,u=i;(0,s.H)([o,i],"avgPoolBackprop");const{filterSize:l,strides:c,pad:p}=a,d=r.Wap.computePool2DInfo(u.shape,l,c,1,p),h=d.strideHeight,f=d.strideWidth,m=d.filterHeight,g=d.filterWidth,y=d.dilationHeight,x=d.dilationWidth,b=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,I=b-1-d.padInfo.top,N=(0,r.f3b)(u.shape,"float32"),k=1/(m*g),$=n.data.get(o.dataId).values,C=(0,r.f3b)(o.shape,"float32",$);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const a=n-I,s=r-w;let o=0;for(let n=0;n<b;n+=y){const r=(a+n)/h;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let n=0;n<v;n+=x){const a=(s+n)/f;a<0||a>=d.outWidth||Math.floor(a)!==a||(o+=C.get(e,r,a,t))}}N.set(o*k,e,n,r,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},Y={kernelName:r.sHE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,scale:i,offset:u,mean:l,variance:c}=t;r.D5U.hu(l.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.D5U.hu(null==u||l.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.D5U.hu(null==i||l.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),(0,s.H)([o,l,c,i,u],"batchNorm");let{varianceEpsilon:p}=a;null==p&&(p=.001);const d=n.data.get(o.dataId).values,h=n.data.get(l.dataId).values,f=n.data.get(c.dataId).values,m=i?n.data.get(i.dataId).values:new Float32Array([1]),g=u?n.data.get(u.dataId).values:new Float32Array([0]),y=new Float32Array(d.length),x=g.length,b=m.length,v=f.length,w=h.length;let I=0,N=0,k=0,$=0;for(let e=0;e<d.length;++e)y[e]=g[I++]+(d[e]-h[N++])*m[k++]/Math.sqrt(f[$++]+p),I>=x&&(I=0),N>=w&&(N=0),k>=b&&(k=0),$>=v&&($=0);return n.makeTensorInfo(o.shape,o.dtype,y)}};var Q=n(9258),Z=n(4769);const J=(0,f.A)(r.xnO,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),ee={kernelName:r.xnO,backendName:"cpu",kernelFunc:J};var te=n(6961);function ne(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const re={kernelName:r.J_u,backendName:"cpu",kernelFunc:ne};var ae=n(2186);function se(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,o=r.D5U.EC(s,t[0].shape)[0];let i=r.Wap.computeOutShape(t.map((e=>e.shape)),o);if(0===r.D5U.NA(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter((e=>r.D5U.NA(e.shape)>0));if(1===u.length)return u[0];const l=u.map((e=>e.shape));if(r.Wap.assertParamsConsistent(l,o),"complex64"===u[0].dtype){const e=u.map((e=>(0,ae.k)({inputs:{input:e},backend:n}))),t=u.map((e=>ne({inputs:{input:e},backend:n}))),r=se({inputs:e,backend:n,attrs:{axis:o}}),a=se({inputs:t,backend:n,attrs:{axis:o}}),s=(0,te.P)({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const c=u.map((e=>{const t=r.D5U.NA(e.shape.slice(o));return S({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}));i=r.Wap.computeOutShape(c.map((e=>e.shape)),1);const p=r.D5U.WP(u[0].dtype,r.D5U.NA(i));if(1===c[0].shape[0]){let e=0;c.forEach((t=>{const a=n.data.get(t.dataId).values,s=r.D5U.NA(t.shape);p.set(a,e),e+=s}))}else{let e=0;c.forEach((t=>{const r=n.data.get(t.dataId).values;let a=0;for(let n=0;n<t.shape[0];++n){const s=n*i[1]+e;for(let e=0;e<t.shape[1];++e)p[s+e]=r[a++]}e+=t.shape[1]}))}const d=r.Wap.computeOutShape(u.map((e=>e.shape)),o),h=n.makeTensorInfo(d,t[0].dtype,p);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}const oe={kernelName:r.Eh3,backendName:"cpu",kernelFunc:se};function ie(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,filter:i}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d}=a;(0,s.H)([o,i],"conv2d");const h=r.Wap.convertConv2DDataFormat(c),f=r.Wap.computeConv2DInfo(o.shape,i.shape,u,p,l,d,!1,h),m=f.filterHeight,g=f.filterWidth,y=f.dilationHeight,x=f.dilationWidth,b=f.padInfo.left,v=f.padInfo.top,w="channelsLast"===f.dataFormat,I=new r.YDk(f.outShape,o.dtype),N=r.D5U.e3(o.shape),k=r.D5U.e3(i.shape),$=N[0],C=w?N[1]:N[2],T=w?N[2]:1,S=w?1:N[1],E=I.strides[0],R=w?I.strides[1]:I.strides[2],D=w?I.strides[2]:1,A=w?1:I.strides[1],_=n.data.get(o.dataId).values,O=n.data.get(i.dataId).values,F=I.values;for(let e=0;e<f.batchSize;++e){const t=e*$,n=e*E;for(let e=0;e<f.outHeight;++e){const r=n+e*R,a=e*f.strideHeight-v;for(let e=0;e<m;++e){const n=a+e*y;if(n<0||n>=f.inHeight)continue;const s=e*k[0],o=t+n*C;for(let e=0;e<f.outWidth;++e){const t=r+e*D,n=e*f.strideWidth-b;for(let e=0;e<g;++e){const r=n+e*x;if(r<0||r>=f.inWidth)continue;const a=o+r*T;let i=s+e*k[1];for(let e=0;e<f.inChannels;++e){const n=_[a+e*S];for(let e=0;e<f.outChannels;++e)F[t+e*A]+=n*O[i+e];i+=f.outChannels}}}}}}return n.makeTensorInfo(I.shape,I.dtype,F)}const ue={kernelName:r.mhS,backendName:"cpu",kernelFunc:ie},le={kernelName:r.wUP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,dy:i}=t,{strides:u,pad:l,dataFormat:c,dimRoundingMode:p,filterShape:d}=a;(0,s.H)([o,i],"conv2dBackpropFilter");const h=r.Wap.convertConv2DDataFormat(c),f=r.Wap.computeConv2DInfo(o.shape,d,u,1,l,p,!1,h),{strideHeight:m,strideWidth:g,filterHeight:y,filterWidth:x}=f,b="channelsLast"===f.dataFormat,v=new r.YDk(f.filterShape,"float32"),w=f.padInfo.left,I=f.padInfo.top,N=n.data.get(o.dataId).values,k=n.data.get(i.dataId).values,$=new r.YDk(o.shape,o.dtype,N),C=new r.YDk(i.shape,i.dtype,k);for(let e=0;e<y;++e){const t=Math.max(0,Math.ceil((I-e)/m)),n=Math.min(f.outHeight,(f.inHeight+I-e)/m);for(let r=0;r<x;++r){const a=Math.max(0,Math.ceil((w-r)/g)),s=Math.min(f.outWidth,(f.inWidth+w-r)/g);for(let o=0;o<f.inChannels;++o)for(let i=0;i<f.outChannels;++i){let u=0;for(let l=0;l<f.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*m-I;for(let e=a;e<s;++e){const n=r+e*g-w;u+=b?$.get(l,t,n,o)*C.get(l,c,e,i):$.get(l,o,t,n)*C.get(l,i,c,e)}}v.set(u,e,r,o,i)}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},ce={kernelName:r.wm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:o,filter:i}=t,{inputShape:u,strides:l,pad:c,dataFormat:p,dimRoundingMode:d}=a;(0,s.H)([o,i],"conv2dBackpropInput");const h=r.D5U.e3(i.shape),f=r.D5U.e3(o.shape);let m=r.Wap.convertConv2DDataFormat(p);const g=r.Wap.computeConv2DInfo(u,i.shape,l,1,c,d,!1,m),y=new r.YDk(g.inShape,"float32"),x=y.values,b=n.data.get(o.dataId).values,v=n.data.get(i.dataId).values,[w,I,N]=h,{batchSize:k,filterHeight:$,filterWidth:C,inChannels:T,inHeight:S,inWidth:E,outChannels:R,outHeight:D,outWidth:A,strideHeight:_,strideWidth:O}=g;m=g.dataFormat;const F=$-1-g.padInfo.top,B=C-1-g.padInfo.left,M="channelsLast"===m,P=y.strides[0],L=M?y.strides[1]:y.strides[2],W=M?y.strides[2]:1,V=M?1:y.strides[1],U=f[0],z=M?f[1]:f[2],H=M?f[2]:1,G=M?1:f[1];for(let e=0;e<k;++e)for(let t=0;t<T;++t)for(let n=0;n<S;++n){const r=n-F,a=Math.max(0,Math.ceil(r/_)),s=Math.min(D,($+r)/_);for(let o=0;o<E;++o){const i=o-B,u=Math.max(0,Math.ceil(i/O)),l=Math.min(A,(C+i)/O);let c=0;for(let n=a;n<s;++n){const a=n*_-r;for(let r=u;r<l;++r){const s=U*e+z*n+H*r,o=w*($-1-a)+I*(C-1-(r*O-i))+N*t;for(let e=0;e<R;++e)c+=b[s+G*e]*v[o+e]}}x[P*e+L*n+W*o+V*t]=c}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},pe={kernelName:r.x12,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,filter:i}=t,{strides:u,pad:l,dilations:c}=a;(0,s.H)([o,i],"conv3d");const p=r.Wap.computeConv3DInfo(o.shape,i.shape,u,c,l),{filterDepth:d,filterHeight:h,filterWidth:f,dilationDepth:m,dilationHeight:g,dilationWidth:y,padInfo:x}=p,b=x.front,v=x.left,w=x.top,I=new r.YDk(p.outShape,o.dtype),N=n.data.get(o.dataId).values,k=n.data.get(i.dataId).values,$=I.values,C=r.D5U.e3(o.shape),T=r.D5U.e3(i.shape);for(let e=0;e<p.batchSize;++e){const t=e*C[0],n=e*I.strides[0];for(let e=0;e<p.outDepth;++e){const r=n+e*I.strides[1],a=e*p.strideDepth-b;for(let e=0;e<d;++e){const n=a+e*m;if(n<0||n>=p.inDepth)continue;const s=e*T[0],o=t+n*C[1];for(let e=0;e<p.outHeight;++e){const t=r+e*I.strides[2],n=e*p.strideHeight-w;for(let e=0;e<h;++e){const r=n+e*g;if(r<0||r>=p.inHeight)continue;const a=s+e*T[1],i=o+r*C[2];for(let e=0;e<p.outWidth;++e){const n=t+e*p.outChannels,r=e*p.strideWidth-v;for(let e=0;e<f;++e){const t=r+e*y;if(t<0||t>=p.inWidth)continue;const s=a+e*T[2],o=i+t*p.inChannels;let u=s;for(let e=0;e<p.inChannels;++e){const t=N[o+e];for(let e=0;e<p.outChannels;++e)$[n+e]+=t*k[u+e];u+=p.outChannels}}}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},de={kernelName:r.o2y,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,dy:i}=t,{strides:u,pad:l,filterShape:c}=a;(0,s.H)([o,i],"conv3dBackpropFilterV2");const p=r.D5U.e3(o.shape),d=r.D5U.e3(i.shape),h=r.Wap.computeConv3DInfo(o.shape,c,u,1,l),f=h.strideDepth,m=h.strideHeight,g=h.strideWidth,y=h.filterDepth,x=h.filterHeight,b=h.filterWidth,v=new r.YDk(h.filterShape,"float32"),w=v.values,[I,N,k,$]=v.strides,C=n.data.get(i.dataId).values,[T,S,E,R]=d,D=n.data.get(o.dataId).values,[A,_,O,F]=p,B=h.padInfo.front,M=h.padInfo.left,P=h.padInfo.top;for(let e=0;e<y;++e){const t=Math.max(0,Math.ceil((B-e)/f)),n=Math.min(h.outDepth,(h.inDepth+B-e)/f),r=e*I;for(let a=0;a<x;++a){const s=Math.max(0,Math.ceil((P-a)/m)),o=Math.min(h.outHeight,(h.inHeight+P-a)/m),i=a*N+r;for(let r=0;r<b;++r){const u=Math.max(0,Math.ceil((M-r)/g)),l=Math.min(h.outWidth,(h.inWidth+M-r)/g),c=r*k+i;for(let i=0;i<h.inChannels;++i){const p=i*$+c;for(let c=0;c<h.outChannels;++c){let d=0;for(let p=0;p<h.batchSize;++p){const h=p*A,y=p*T;for(let p=t;p<n;++p){const t=(e+p*f-B)*_+h,n=p*S+y;for(let e=s;e<o;++e){const s=(a+e*m-P)*O+t,o=e*E+n;for(let e=u;e<l;++e){const t=e*R+o;d+=D[(r+e*g-M)*F+s+i]*C[t+c]}}}}w[p+c]=d}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},he={kernelName:r.ik2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:o,filter:i}=t,{pad:u,strides:l,inputShape:c}=a;(0,s.H)([o],"conv3dBackpropInputV2");const p=r.D5U.e3(o.shape),d=r.D5U.e3(i.shape),h=r.Wap.computeConv3DInfo(c,i.shape,l,1,u),f=new r.YDk(h.inShape,"float32"),m=f.values,[g,y,x,b]=f.strides,v=n.data.get(o.dataId).values,[w,I,N,k]=p,$=n.data.get(i.dataId).values,[C,T,S,E]=d,{batchSize:R,filterDepth:D,filterHeight:A,filterWidth:_,inChannels:O,inDepth:F,inHeight:B,inWidth:M,outChannels:P,outDepth:L,outHeight:W,outWidth:V,strideDepth:U,strideHeight:z,strideWidth:H}=h,G=D-1-h.padInfo.front,X=A-1-h.padInfo.top,j=_-1-h.padInfo.left;for(let e=0;e<R;++e)for(let t=0;t<O;++t)for(let n=0;n<F;++n){const r=n-G,a=Math.max(0,Math.ceil(r/U)),s=Math.min(L,(D+r)/U);for(let o=0;o<B;++o){const i=o-X,u=Math.max(0,Math.ceil(i/z)),l=Math.min(W,(A+i)/z);for(let c=0;c<M;++c){const p=c-j,d=Math.max(0,Math.ceil(p/H)),h=Math.min(V,(_+p)/H);let f=0;for(let n=a;n<s;++n){const a=n*U-r;for(let r=u;r<l;++r){const s=r*z-i;for(let o=d;o<h;++o){const i=w*e+I*n+N*r+k*o,u=C*(D-1-a)+T*(A-1-s)+S*(_-1-(o*H-p))+E*t;for(let e=0;e<P;++e)f+=v[i+e]*$[u+e]}}}m[g*e+y*n+x*o+b*c+t]=f}}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},fe=(0,f.A)(r.mc4,(e=>Math.cos(e))),me={kernelName:r.mc4,backendName:"cpu",kernelFunc:fe},ge=(0,f.A)(r.TR1,(e=>Math.cosh(e))),ye={kernelName:r.TR1,backendName:"cpu",kernelFunc:ge};function xe(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,filter:i}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:p}=a;(0,s.H)([o,i],"depthwiseConv2DNative");const d=r.D5U.e3(o.shape),h=r.D5U.e3(i.shape);let f=c;null==f&&(f=[1,1]),r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(u,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`));const m=r.Wap.computeConv2DInfo(o.shape,i.shape,u,f,l,p,!0),{filterHeight:g,filterWidth:y,dilationHeight:x,dilationWidth:b,padInfo:v}=m,w=v.left,I=v.top,N=m.outChannels/m.inChannels,k=new r.YDk(m.outShape,o.dtype),$=n.data.get(o.dataId).values,C=n.data.get(i.dataId).values,T=k.values;for(let e=0;e<m.batchSize;++e){const t=e*d[0],n=e*k.strides[0];for(let e=0;e<m.outHeight;++e){const r=n+e*k.strides[1],a=e*m.strideHeight-w;for(let e=0;e<g;++e){const n=a+e*x;if(n<0||n>=m.inHeight)continue;const s=e*h[0],o=t+n*d[1];for(let e=0;e<m.outWidth;++e){const t=r+e*k.strides[2],n=e*m.strideWidth-I;for(let e=0;e<y;++e){const r=n+e*b;if(r<0||r>=m.inWidth)continue;const a=s+e*h[1],i=o+r*m.inChannels;let u=t,l=a;for(let e=0;e<m.inChannels;++e){const t=$[i+e];for(let e=0;e<N;++e)T[u+e]+=t*C[l+e];u+=N,l+=N}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const be={kernelName:r.cie,backendName:"cpu",kernelFunc:xe},ve={kernelName:r.sL$,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,dy:i}=t,{strides:u,dilations:l,pad:c,dimRoundingMode:p,filterShape:d}=a;(0,s.H)([o,i],"depthwiseConv2dNativeBackpropFilter");const h=r.Wap.computeConv2DInfo(o.shape,d,u,l,c,p,!0),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=h,x=new r.YDk(h.filterShape,"float32"),b=h.padInfo.left,v=h.padInfo.top,w=h.outChannels/h.inChannels,I=n.data.get(o.dataId).values,N=new r.YDk(o.shape,o.dtype,I),k=n.data.get(i.dataId).values,$=new r.YDk(i.shape,i.dtype,k);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((v-e)/f)),n=Math.min(h.outHeight,(h.inHeight+v-e)/f);for(let r=0;r<y;++r){const a=Math.max(0,Math.ceil((b-r)/m)),s=Math.min(h.outWidth,(h.inWidth+b-r)/m);for(let o=0;o<h.outChannels;++o){const i=Math.trunc(o/w),u=o%w;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*f-v;for(let e=a;e<s;++e){const n=r+e*m-b;l+=N.get(u,t,n,i)*$.get(u,c,e,o)}}x.set(l,e,r,i,u)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},we={kernelName:r.y7R,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:o,filter:i}=t,{strides:u,dilations:l,pad:c,dimRoundingMode:p,inputShape:d}=a;(0,s.H)([o,i],"depthwiseConv2DNativeBackpropInput");const h=r.D5U.e3(o.shape),f=r.D5U.e3(i.shape),m=r.Wap.computeConv2DInfo(d,i.shape,u,l,c,p,!0),g=new r.YDk(m.inShape,"float32"),y=g.values,[x,b,v]=g.strides,w=n.data.get(o.dataId).values,[I,N,k]=h,$=n.data.get(i.dataId).values,[C,T,S]=f,{batchSize:E,filterHeight:R,filterWidth:D,inChannels:A,inHeight:_,inWidth:O,outChannels:F,outHeight:B,outWidth:M,strideHeight:P,strideWidth:L}=m,W=R-1-m.padInfo.top,V=D-1-m.padInfo.left,U=F/A;for(let e=0;e<E;++e)for(let t=0;t<A;++t)for(let n=0;n<_;++n){const r=n-W,a=Math.max(0,Math.ceil(r/P)),s=Math.min(B,(R+r)/P);for(let o=0;o<O;++o){const i=o-V,u=Math.max(0,Math.ceil(i/L)),l=Math.min(M,(D+i)/L);let c=0;for(let n=a;n<s;++n){const a=n*P-r;for(let r=u;r<l;++r){const s=I*e+N*n+k*r,o=C*(R-1-a)+T*(D-1-(r*L-i))+S*t;for(let e=0;e<U;++e)c+=w[s+(t*U+e)]*$[o+e]}}y[x*e+b*n+v*o+t]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Ie={kernelName:r.p4S,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s}=e,{strides:o,pad:i,dilations:u}=n,l=t,c=l.data.get(a.dataId).values,p=a.shape.length,d=l.data.get(s.dataId).values,h=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:x,outWidth:b,padInfo:v,strideHeight:w,strideWidth:I,filterHeight:N,filterWidth:k,dilationHeight:$,dilationWidth:C,outShape:T}=r.Wap.computeDilation2DInfo(a.shape,s.shape,o,i,"NHWC",u),S=r.D5U.NA(T),E=T.length,R=r.D5U.rQ(a.dtype,S);for(let e=0;e<f;++e)for(let t=0;t<x;++t){const n=t*w-v.top;for(let o=0;o<b;++o){const i=o*I-v.left;for(let u=0;u<y;++u){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<N;++t){const o=n+t*$;if(o>=0&&o<m)for(let n=0;n<k;++n){const f=i+n*C;if(f>=0&&f<g){const i=r.D5U.qy([e,o,f,u],p,r.D5U.e3(a.shape)),m=r.D5U.qy([t,n,u],h,r.D5U.e3(s.shape)),g=c[i]+d[m];g>l&&(l=g)}}}R[r.D5U.qy([e,t,o,u],E,r.D5U.e3(T))]=l}}}return{dataId:l.write(r.D5U.Os(R,a.dtype),T,a.dtype),shape:T,dtype:a.dtype}}},Ne={kernelName:r.Vn9,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:o}=e,{strides:i,pad:u,dilations:l}=n,c=t,p=r.D5U.GX(a.shape,c.data.get(a.dataId).values),d=r.D5U.GX(s.shape,c.data.get(s.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:b,strideHeight:v,strideWidth:w,filterHeight:I,filterWidth:N,dilationHeight:k,dilationWidth:$,outShape:C}=r.Wap.computeDilation2DInfo(a.shape,s.shape,i,u,"NHWC",l);r.D5U.hu(o.rank===C.length,(()=>`Error in ${r.Vn9}, dy must have the same rank as output ${C.length}, but got ${o.rank}`));const T=r.D5U.GX(C,c.data.get(o.dataId).values),S=r.D5U.l6(s.shape,s.dtype);for(let e=0;e<h;++e)for(let t=0;t<y;++t){const n=t*v-b.top;for(let r=0;r<x;++r){const a=r*w-b.left;for(let s=0;s<g;++s){let o=Number.MIN_SAFE_INTEGER,i=0,u=0;for(let t=0;t<I;++t){const r=n+t*k;if(r>=0&&r<f)for(let n=0;n<N;++n){const l=a+n*$;if(l>=0&&l<m){const a=p[e][r][l][s]+d[t][n][s];a>o&&(o=a,i=t,u=n)}}}S[i][u][s]+=T[e][t][r][s]}}}return{dataId:c.write(r.D5U.Os(S,a.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},ke={kernelName:r.ekb,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:s,dy:o}=e,{strides:i,pad:u,dilations:l}=n,c=t,p=r.D5U.GX(a.shape,c.data.get(a.dataId).values),d=r.D5U.GX(s.shape,c.data.get(s.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:b,strideHeight:v,strideWidth:w,filterHeight:I,filterWidth:N,dilationHeight:k,dilationWidth:$,outShape:C}=r.Wap.computeDilation2DInfo(a.shape,s.shape,i,u,"NHWC",l);r.D5U.hu(o.rank===C.length,(()=>`Error in ${r.ekb}, dy must have the same rank as output ${C.length}, but got ${o.rank}`));const T=r.D5U.GX(C,c.data.get(o.dataId).values),S=r.D5U.l6(a.shape,a.dtype);for(let e=0;e<h;++e)for(let t=0;t<y;++t){const n=t*v-b.top;for(let r=0;r<x;++r){const a=r*w-b.left;for(let s=0;s<g;++s){let o=Number.MIN_SAFE_INTEGER,i=n<0?0:n,u=a<0?0:a;for(let t=0;t<I;++t){const r=n+t*k;if(r>=0&&r<f)for(let n=0;n<N;++n){const l=a+n*$;if(l>=0&&l<m){const a=p[e][r][l][s]+d[t][n][s];a>o&&(o=a,i=r,u=l)}}}S[e][i][u][s]+=T[e][t][r][s]}}}return{dataId:c.write(r.D5U.Os(S,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};var $e=n(546);const Ce=(0,x.b)(((e,t)=>e/t)),Te=(0,$e.j)(r.ZCY,Ce),Se={kernelName:r.ZCY,backendName:"cpu",kernelFunc:Te},Ee=r.Wap.ERF_P,Re=r.Wap.ERF_A1,De=r.Wap.ERF_A2,Ae=r.Wap.ERF_A3,_e=r.Wap.ERF_A4,Oe=r.Wap.ERF_A5,Fe=(0,f.A)(r.Omj,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Ee*n);return t*(1-((((Oe*r+_e)*r+Ae)*r+De)*r+Re)*r*Math.exp(-n*n))})),Be={kernelName:r.Omj,backendName:"cpu",kernelFunc:Fe};var Me=n(1211),Pe=n(969),Le=n(1917),We=n(2578),Ve=n(1649);function Ue(e,t,n){const a=e.shape,s=a[0],o=a[1],i=n.data.get(e.dataId),u=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,c=[s,o],p=r.D5U.NA(c),d=r.D5U.WP("float32",p),h=r.D5U.WP("float32",p);for(let e=0;e<s;e++){const a=(0,We.tP)({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,o]}}),s=(0,We.tP)({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,o]}}),i=(0,te.P)({inputs:{real:a,imag:s},backend:n}),{real:c,imag:p}=ze(i,t,n),f=r.Wap.mergeRealAndImagArrays(c,p);for(let t=0;t<o;t++){const n=r.Wap.getComplexWithIndex(f,t);d[e*o+t]=n.real,h[e*o+t]=n.imag}n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const f=n.makeTensorInfo(c,"float32",d),m=n.makeTensorInfo(c,"float32",h),g=(0,te.P)({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function ze(e,t,n){const a=r.D5U.NA(e.shape),s=n.data.get(e.dataId),o=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((u=a)&u-1)){const s=He(o,i,a,t,n),u=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(u,"float32",s.real),t=n.makeTensorInfo(u,"float32",s.imag),o=n.makeTensorInfo([],"float32",r.D5U.hr(a,"float32")),i=(0,y.y)({inputs:{x:o},backend:n}),l=Se.kernelFunc({inputs:{a:e,b:o},backend:n}),c=Se.kernelFunc({inputs:{a:t,b:i},backend:n}),p=n.data.get(l.dataId).values,d=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),{real:p,imag:d}}return s}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let s=0;s<t;s++){let o=0,i=0;for(let a=0;a<t;a++){const u=r.Wap.exponent(s*a,t,n),l=r.Wap.getComplexWithIndex(e,a);o+=l.real*u.real-l.imag*u.imag,i+=l.real*u.imag+l.imag*u.real}n&&(o/=t,i/=t),r.Wap.assignToTypedArray(a,o,i,s)}return a}(r.Wap.mergeRealAndImagArrays(o,i),a,t);return r.Wap.splitRealAndImagArrays(e)}var u}function He(e,t,n,a,s){if(1===n)return{real:e,imag:t};const o=r.Wap.mergeRealAndImagArrays(e,t),i=n/2,u=r.Wap.complexWithEvenIndex(o),l=u.real,c=u.imag,p=[l.length],d=s.makeTensorInfo(p,"float32",l),h=s.makeTensorInfo(p,"float32",c),f=(0,te.P)({inputs:{real:d,imag:h},backend:s}),m=r.Wap.complexWithOddIndex(o),g=m.real,y=m.imag,x=[g.length],b=s.makeTensorInfo(x,"float32",g),v=s.makeTensorInfo(x,"float32",y),w=(0,te.P)({inputs:{real:b,imag:v},backend:s}),I=He(l,c,i,a,s),N=I.real,k=I.imag,$=[N.length],C=s.makeTensorInfo($,"float32",N),S=s.makeTensorInfo($,"float32",k),E=(0,te.P)({inputs:{real:C,imag:S},backend:s}),R=He(g,y,i,a,s),D=R.real,A=R.imag,_=[D.length],O=s.makeTensorInfo(_,"float32",D),F=s.makeTensorInfo(_,"float32",A),B=(0,te.P)({inputs:{real:O,imag:F},backend:s}),M=r.Wap.exponents(n,a),P=[M.real.length],L=s.makeTensorInfo(P,"float32",M.real),W=s.makeTensorInfo(P,"float32",M.imag),V=(0,te.P)({inputs:{real:L,imag:W},backend:s}),U=(0,Le.Jp)({inputs:{a:V,b:B},backend:s}),z=(0,T.IH)({inputs:{a:E,b:U},backend:s}),H=(0,Ve.lu)({inputs:{a:E,b:U},backend:s}),G=(0,ae.k)({inputs:{input:z},backend:s}),X=(0,ae.k)({inputs:{input:H},backend:s}),j=ne({inputs:{input:z},backend:s}),q=ne({inputs:{input:H},backend:s}),K=se({inputs:[G,X],backend:s,attrs:{axis:0}}),Y=se({inputs:[j,q],backend:s,attrs:{axis:0}}),Q=s.data.get(K.dataId).values,Z=s.data.get(Y.dataId).values;return s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(Y),{real:Q,imag:Z}}const Ge={kernelName:r.vwp,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r.D5U.NA(a.shape),o=a.shape[a.shape.length-1],i=S({inputs:{x:a},backend:n,attrs:{shape:[s/o,o]}}),u=Ue(i,!1,n),l=S({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}},Xe={kernelName:r.deh,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{shape:a,value:s,dtype:o}=n,i=o||r.D5U.D2(s),u=r.D5U.rQ(i,r.D5U.NA(a));return function(e,t,n){e.fill(t)}(u,s),t.makeTensorInfo(a,i,u)}},je={kernelName:r.Uyb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,s=n,o=r.D5U.WP(a.dtype,r.D5U.NA(a.shape)),[i,u,l,c]=a.shape,p=s.data.get(a.dataId).values;for(let e=0;e<i;e++){const t=e*l*u*c;for(let e=0;e<u;e++){const n=e*(l*c);for(let r=0;r<l;r++){const a=r*c;for(let s=0;s<c;s++){const u=[i,e,r,s][2],d=Math.round(l-u),h=t+n+a+s;let f=p[h];d>=0&&d<l&&(f=p[t+n+d*c+s]),o[h]=f}}}}return{dataId:s.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};var qe=n(6574);const Ke={kernelName:r._V0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h}=r;let f=ie({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d}});if(o){const e=f;f=(0,T.IH)({inputs:{a:f,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=f;f=C(n,f,h,i),n.disposeIntermediateTensorInfo(e)}return f}},Ye={kernelName:r.luS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h}=r;let f=xe({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d}});if(o){const e=f;f=(0,T.IH)({inputs:{a:f,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=f;f=C(n,f,h,i),n.disposeIntermediateTensorInfo(e)}return f}},Qe={kernelName:r.Qg5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r.D5U.NA(a.shape),o=a.shape[a.shape.length-1],i=S({inputs:{x:a},backend:n,attrs:{shape:[s/o,o]}}),u=Ue(i,!0,n),l=S({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}},Ze=(0,f.A)(r.avt,(e=>Number.isFinite(e)?1:0),"bool"),Je={kernelName:r.avt,backendName:"cpu",kernelFunc:Ze},et=(0,f.A)(r.iWB,(e=>Math.abs(e)===1/0?1:0),"bool"),tt={kernelName:r.iWB,backendName:"cpu",kernelFunc:et},nt=(0,f.A)(r.r7n,(e=>Number.isNaN(e)?1:0),"bool"),rt={kernelName:r.r7n,backendName:"cpu",kernelFunc:nt};var at=n(5223);const st=(0,f.A)(r.kU,(e=>Math.log1p(e))),ot={kernelName:r.kU,backendName:"cpu",kernelFunc:st},it=(0,f.A)(r.VfG,(e=>e?0:1),"bool"),ut={kernelName:r.VfG,backendName:"cpu",kernelFunc:it};var lt=n(5126),ct=n(7107);const pt={kernelName:r.YoZ,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{reductionIndices:o,keepDims:i}=t,u=n;let l=a.shape;const c=l.length,p=r.D5U.EC(o,l);let d=p;const h=r.Wap.getAxesPermutation(d,c);let f=u.data.get(a.dataId).values;if(null!=h){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=l[h[t]];f=(0,ct.H)(f,l,a.dtype,h,e),d=r.Wap.getInnerMostAxes(d.length,c),l=e}(0,s.H)(a,"max"),r.Wap.assertAxesAreInnerMostDims("max",d,c);const[m,g]=r.Wap.computeOutAndReduceShapes(l,d),y=r.D5U.NA(g),x=(0,lt.B)(f,y,m,a.dtype),b=u.write(x,m,a.dtype);let v=m;return i&&(v=r.Wap.expandShapeToKeepDim(m,p)),{dataId:b,shape:v,dtype:a.dtype}}},dt={kernelName:r.mTV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t;(0,s.H)(o,"maxPool");const{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=a;r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(u,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`));const p=r.Wap.computePool2DInfo(o.shape,i,u,1,l,c);let d;if(1===p.filterWidth&&1===p.filterHeight&&r.D5U.cO(p.inShape,p.outShape))d=(0,y.y)({inputs:{x:o},backend:n});else{const e=n.data.get(o.dataId).values,t=r.D5U.e3(o.shape),a=X(e,o.shape,o.dtype,t,p,"max");d=n.makeTensorInfo(p.outShape,o.dtype,a.values)}return d}},ht={kernelName:r.GvW,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:o,input:i,output:u}=t,l=i;(0,s.H)([i,u],"maxPoolBackprop");const{filterSize:c,strides:p,pad:d,dimRoundingMode:h}=a,f=r.Wap.computePool2DInfo(l.shape,c,p,1,d,h),m=n.data.get(l.dataId).values,g=(0,r.f3b)(f.outShape,l.dtype,j(m,l.shape,l.dtype,f).values),y=f.strideHeight,x=f.strideWidth,b=f.dilationHeight,v=f.dilationWidth,w=f.effectiveFilterHeight,I=f.effectiveFilterWidth,N=I-1-f.padInfo.left,k=w-1-f.padInfo.top,$=(0,r.f3b)(l.shape,"float32"),C=n.data.get(o.dataId).values,T=(0,r.f3b)(o.shape,"float32",C);for(let e=0;e<f.batchSize;++e)for(let t=0;t<f.inChannels;++t)for(let n=0;n<f.inHeight;++n)for(let r=0;r<f.inWidth;++r){const a=n-k,s=r-N;let o=0;for(let n=0;n<w;n+=b){const r=(a+n)/y;if(!(r<0||r>=f.outHeight||Math.floor(r)!==r))for(let a=0;a<I;a+=v){const i=(s+a)/x;if(i<0||i>=f.outWidth||Math.floor(i)!==i)continue;const u=w*I-1-g.get(e,r,i,t)===n*I+a?1:0;0!==u&&(o+=T.get(e,r,i,t)*u)}}$.set(o,e,n,r,t)}return n.makeTensorInfo($.shape,$.dtype,$.values)}},ft={kernelName:r.vFR,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:o,strides:i,pad:u,includeBatchInIndex:l}=t,c=n;(0,s.H)(a,"MaxPoolWithArgmax");const p=c.data.get(a.dataId).values,d=r.Wap.computePool2DInfo(a.shape,o,i,[1,1],u),[h,f]=function(e,t,n,a,s){const o=X(e,0,n,r.D5U.e3(t),s,"max"),i=j(e,t,n,s,!0,a);return[o.values,i.values]}(p,a.shape,a.dtype,l,d),m=c.write(h,d.outShape,a.dtype),g=c.write(f,d.outShape,a.dtype);return[{dataId:m,shape:d.outShape,dtype:a.dtype},{dataId:g,shape:d.outShape,dtype:"int32"}]}},mt={kernelName:r.jQs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{paddings:i,mode:u}=a;(0,s.H)(o,"mirrorPad");const l=i.map(((e,t)=>e[0]+o.shape[t]+e[1])),c=i.map((e=>e[0])),p=i.map(((e,t)=>e[0]+o.shape[t])),d="reflect"===u?0:1,h=n.data.get(o.dataId).values,f=o.shape.length,m=r.D5U.e3(o.shape),g=r.D5U.NA(l),y=l.length,x=r.D5U.e3(l),b=r.D5U.WP(o.dtype,g);for(let e=0;e<g;e++){let t=r.D5U.NE(e,y,x);for(let e=0;e<y;e++)t[e]<c[e]?t[e]=2*c[e]-t[e]-d:t[e]>=p[e]&&(t[e]=2*(p[e]-1)-t[e]+d);t=t.map(((e,t)=>e-c[t]));const n=r.D5U.qy(t,f,m);b[e]=h[n]}return{dataId:n.write(b,l,o.dtype),shape:l,dtype:o.dtype}}},gt=r.GDt.qP,yt={kernelName:r.cye,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{boxes:r,scores:a}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=n,c=t;(0,s.H)(r,"NonMaxSuppressionPadded");const p=c.data.get(r.dataId).values,d=c.data.get(a.dataId).values,{selectedIndices:h,validOutputs:f}=gt(p,d,o,i,u,l);return[h,f]}},xt=r.GDt.pA,bt={kernelName:r.W0H,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{boxes:r,scores:a}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n,c=t;(0,s.H)(r,"NonMaxSuppressionWithScore");const p=c.data.get(r.dataId).values,d=c.data.get(a.dataId).values,h=o,f=i,m=u,g=l,{selectedIndices:y,selectedScores:x}=xt(p,d,h,f,m,g);return[y,x]}};var vt=n(8584);const wt={kernelName:r.lyA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{paddings:i,constantValue:u}=a;(0,s.H)(o,"pad");const l=i.map(((e,t)=>e[0]+o.shape[t]+e[1])),c=i.map((e=>e[0])),p=n.data.get(o.dataId).values,d=r.D5U.NA(o.shape),h=o.shape.length,f=r.D5U.e3(o.shape),m=r.D5U.NA(l),g=l.length,y=r.D5U.e3(l),x=r.D5U.WP(o.dtype,m);0!==u&&x.fill(u);for(let e=0;e<d;e++){const t=r.D5U.NE(e,h,f).map(((e,t)=>e+c[t]));x[r.D5U.qy(t,g,y)]=p[e]}return{dataId:n.write(x,l,o.dtype),shape:l,dtype:o.dtype}}},It=(0,f.A)(r.$HU,(e=>1/e)),Nt={kernelName:r.$HU,backendName:"cpu",kernelFunc:It},kt={kernelName:r.b9H,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:s,fillValue:o,center:i}=t,u=n,l=r.D5U.WP(a.dtype,r.D5U.NA(a.shape)),[c,p,d,h]=a.shape,[f,m]=r.Wap.getImageCenter(i,p,d),g=Math.sin(s),y=Math.cos(s),x=u.data.get(a.dataId).values;for(let e=0;e<c;e++){const t=e*d*p*h;for(let e=0;e<p;e++){const n=e*(d*h);for(let r=0;r<d;r++){const a=r*h;for(let s=0;s<h;s++){const i=[c,e,r,s],u=i[2],b=i[1];let v=(u-f)*y-(b-m)*g,w=(u-f)*g+(b-m)*y;v=Math.round(v+f),w=Math.round(w+m);let I=o;"number"!=typeof o&&(I=3===s?255:o[s]),v>=0&&v<d&&w>=0&&w<p&&(I=x[t+w*(d*h)+v*h+s]),l[t+n+a+s]=I}}}}return{dataId:u.write(l,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},$t=(0,f.A)(r.e07,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),Ct={kernelName:r.e07,backendName:"cpu",kernelFunc:$t};var Tt=n(7742);const St=r.Wap.SELU_SCALEALPHA,Et=r.Wap.SELU_SCALE,Rt=(0,f.A)(r.oFR,(e=>e>=0?Et*e:St*(Math.exp(e)-1))),Dt={kernelName:r.oFR,backendName:"cpu",kernelFunc:Rt},At=(0,f.A)(r.a5O,(e=>1/(1+Math.exp(-e)))),_t={kernelName:r.a5O,backendName:"cpu",kernelFunc:At},Ot=(0,f.A)(r.i5y,(e=>e<0?-1:e>0?1:0)),Ft={kernelName:r.i5y,backendName:"cpu",kernelFunc:Ot},Bt=(0,f.A)(r.RQH,(e=>Math.sin(e))),Mt={kernelName:r.RQH,backendName:"cpu",kernelFunc:Bt},Pt=(0,f.A)(r.wYB,(e=>Math.sinh(e))),Lt={kernelName:r.wYB,backendName:"cpu",kernelFunc:Pt},Wt=Math.log(1.1920928955078125e-7)+2,Vt=(0,f.A)(r.MRv,(e=>{const t=e>-Wt,n=e<Wt,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),Ut={kernelName:r.MRv,backendName:"cpu",kernelFunc:Vt};function zt(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:o}=n;(0,s.H)(a,"transpose");const i=a.shape.length,u=new Array(i);for(let e=0;e<u.length;e++)u[e]=a.shape[o[e]];const l=r.data.get(a.dataId).values,c=(0,ct.H)(l,a.shape,a.dtype,o,u);return{dataId:r.write(c,u,a.dtype),shape:u,dtype:a.dtype}}const Ht={kernelName:r.G3Y,backendName:"cpu",kernelFunc:zt},Gt={kernelName:r.TQc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{blockShape:i,paddings:u}=a;(0,s.H)([o],"spaceToBatchND");const l=r.D5U.NA(i),c=[[0,0]];c.push(...u);for(let e=1+i.length;e<o.shape.length;++e)c.push([0,0]);const p=wt.kernelFunc({inputs:{x:o},backend:n,attrs:{paddings:c,constantValue:0}}),d=r.Wap.getReshaped(p.shape,i,l,!1),h=r.Wap.getPermuted(d.length,i.length,!1),f=r.Wap.getReshapedPermuted(p.shape,i,l,!1),m=S({inputs:{x:p},backend:n,attrs:{shape:d}}),g=zt({inputs:{x:m},backend:n,attrs:{perm:h}}),y=S({inputs:{x:g},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}},Xt=(0,f.A)(r.FKq,(e=>Math.sqrt(e))),jt={kernelName:r.FKq,backendName:"cpu",kernelFunc:Xt},qt={kernelName:r.bK0,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;(0,s.H)(n,"square");const a=r.data.get(n.dataId).values,o=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];o[e]=t*t}return{dataId:r.write(o,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Kt=n(212);const Yt=(0,f.A)(r.h8e,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Qt={kernelName:r.h8e,backendName:"cpu",kernelFunc:Yt},Zt=(0,f.A)(r.sEM,(e=>Math.tan(e))),Jt={kernelName:r.sEM,backendName:"cpu",kernelFunc:Zt},en=(0,f.A)(r.MIZ,(e=>Math.tanh(e))),tn={kernelName:r.MIZ,backendName:"cpu",kernelFunc:en};var nn=n(5638);const rn={kernelName:r.kpP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:o}=t;(0,s.H)(o,"unique");const i=r.data.get(o.dataId).values,{outputValues:u,outputShape:l,indices:c}=(0,nn.S)(i,a,o.shape,o.dtype);return[r.makeTensorInfo(l,o.dtype,u),r.makeTensorInfo([c.length],"int32",c)]}},an=[A,_.fC,F,M,T.j4,L,V,z,G,q,K,D,Y,Q.M,Z.y2,ee,te.z,oe,le,ce,ue,de,he,pe,me,ye,be,ve,we,Ie,ke,Ne,Se,g,Be,Me.SX,Pe.Vu,Ge,Xe,je,qe.Ao,Ke,Ye,y.I,Qe,re,Je,tt,rt,at.xM,ot,ut,dt,ht,ft,pt,mt,Le.f$,yt,bt,vt.nP,wt,w,ae.O,Nt,N,$,E,kt,Ct,Tt.FY,Dt,_t,Ft,Mt,Lt,We.C6,Ut,Gt,jt,qt,Kt.MS,Qt,Ve.GR,Jt,tn,Ht,rn];for(const e of an)(0,r.wCN)(e)},224:(e,t,n)=>{"use strict";n.d(t,{bk:()=>a,fC:()=>s});var r=n(6853);function a(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const s={kernelName:r.SYM,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;let s=new Float32Array(r.D5U.NA(t.shape));if("complex64"!==t.dtype)s=a(n.data.get(t.dataId).values);else{const e=n.data.get(t.dataId),r=e.complexTensorInfos.real,a=e.complexTensorInfos.imag,o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=i[e];s[e]=Math.hypot(t,n)}}return n.makeOutput(s,t.shape,"float32")}}},2779:(e,t,n)=>{"use strict";n.d(t,{EH:()=>o,IH:()=>u,j4:()=>l});var r=n(6853),a=n(3533),s=n(546);const o=(0,a.b)(((e,t)=>e+t)),i=(0,s.H)(((e,t,n,r)=>({real:e+n,imag:t+r}))),u=(0,s.j)(r.mm_,o,i),l={kernelName:r.mm_,backendName:"cpu",kernelFunc:u}},9258:(e,t,n)=>{"use strict";n.d(t,{p:()=>u,M:()=>l});var r=n(6853),a=n(3533),s=n(6961),o=n(1775),i=n(2186);function u(e){const{inputs:t,backend:n,attrs:l}=e,{x:c}=t,{dtype:p}=l;if("complex64"===p){if("complex64"===c.dtype)return(0,o.y)({inputs:{x:c},backend:n});const e=r.lls(c.shape),t=u({inputs:{x:c},backend:n,attrs:{dtype:"float32"}}),a=(0,s.P)({inputs:{real:t,imag:e},backend:n});return e.dispose(),n.disposeIntermediateTensorInfo(t),a}if("complex64"===c.dtype){const e=(0,i.k)({inputs:{input:c},backend:n}),t=u({inputs:{x:e},backend:n,attrs:{dtype:p}});return n.disposeIntermediateTensorInfo(e),t}if(!r.D5U.QB(c.dtype,p)){const e=(0,o.y)({inputs:{x:c},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:p}}if("int32"===p){const e=n.data.get(c.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(c.shape,"int32",t)}if("bool"===p){const e=n.data.get(c.dataId).values,t=r.D5U.Os([0],c.dtype),[s,o]=(0,a.b)(((e,t)=>e!==t?1:0))(c.shape,[],e,t,"bool");return n.makeTensorInfo(o,"bool",s)}throw new Error(`Error in Cast: failed to cast ${c.dtype} to ${p}`)}const l={kernelName:r.RFZ,backendName:"cpu",kernelFunc:u}},4769:(e,t,n)=>{"use strict";n.d(t,{__:()=>o,y2:()=>u});var r=n(6853),a=n(8029),s=n(6738);const o=(0,a.a)((e=>Math.ceil(e))),i=(0,s.O)(r.gJX,o),u={kernelName:r.gJX,backendName:"cpu",kernelFunc:i}},6961:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",o)},i}n.d(t,{P:()=>r,z:()=>a});const a={kernelName:n(6853).Zz9,backendName:"cpu",kernelFunc:r}},1211:(e,t,n)=>{"use strict";n.d(t,{Ro:()=>o,SX:()=>u});var r=n(6853),a=n(8029),s=n(6738);const o=(0,a.a)((e=>Math.exp(e))),i=(0,s.O)(r.NEP,o),u={kernelName:r.NEP,backendName:"cpu",kernelFunc:i}},969:(e,t,n)=>{"use strict";n.d(t,{OF:()=>o,Vu:()=>u});var r=n(6853),a=n(8029),s=n(6738);const o=(0,a.a)((e=>Math.expm1(e))),i=(0,s.O)(r.Y0y,o),u={kernelName:r.Y0y,backendName:"cpu",kernelFunc:i}},6574:(e,t,n)=>{"use strict";n.d(t,{r6:()=>o,Ao:()=>u});var r=n(6853),a=n(8029),s=n(6738);const o=(0,a.a)((e=>Math.floor(e))),i=(0,s.O)(r.OR,o),u={kernelName:r.OR,backendName:"cpu",kernelFunc:i}},1775:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}n.d(t,{y:()=>r,I:()=>a});const a={kernelName:n(6853).iJz,backendName:"cpu",kernelFunc:r}},5223:(e,t,n)=>{"use strict";n.d(t,{vX:()=>o,xM:()=>u});var r=n(6853),a=n(8029),s=n(6738);const o=(0,a.a)((e=>Math.log(e))),i=(0,s.O)(r.ZbH,o),u={kernelName:r.ZbH,backendName:"cpu",kernelFunc:i}},5126:(e,t,n)=>{"use strict";n.d(t,{B:()=>a});var r=n(6853);function a(e,t,n,a){const s=r.D5U.WP(a,r.D5U.NA(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>a&&(a=t)}s[n]=a}return s}},1917:(e,t,n)=>{"use strict";n.d(t,{$3:()=>o,Jp:()=>u,f$:()=>l});var r=n(6853),a=n(3533),s=n(546);const o=(0,a.b)(((e,t)=>e*t)),i=(0,s.H)(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),u=(0,s.j)(r.wYn,o,i),l={kernelName:r.wYn,backendName:"cpu",kernelFunc:u}},8584:(e,t,n)=>{"use strict";n.d(t,{Gj:()=>o,nP:()=>u});var r=n(6853),a=n(3533),s=n(546);const o=(0,a.b)(((e,t)=>e!==t?1:0)),i=(0,s.j)(r.yQU,o,null,"bool"),u={kernelName:r.yQU,backendName:"cpu",kernelFunc:i}},2186:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}n.d(t,{k:()=>r,O:()=>a});const a={kernelName:n(6853).xJR,backendName:"cpu",kernelFunc:r}},7742:(e,t,n)=>{"use strict";n.d(t,{zd:()=>o,FY:()=>u});var r=n(6853),a=n(8029),s=n(6738);const o=(0,a.a)((e=>1/Math.sqrt(e))),i=(0,s.O)(r.bV0,o),u={kernelName:r.bV0,backendName:"cpu",kernelFunc:i}},2578:(e,t,n)=>{"use strict";n.d(t,{rT:()=>s,tP:()=>o,C6:()=>i});var r=n(6853),a=n(8166);function s(e,t,n,a,s){const o=r.kuN.isSliceContinous(a,t,n),i=r.D5U.NA(n),u=r.D5U.e3(a);if(o){const n=r.kuN.computeFlatOffset(t,u);return e.subarray(n,n+i)}const l=r.D5U.WP(s,i);for(let s=0;s<i;++s){const o=n.length,i=r.D5U.e3(n),c=r.D5U.NE(s,o,i).map(((e,n)=>e+t[n])),p=r.D5U.qy(c,a.length,u);l[s]=e[p]}return l}function o(e){const{inputs:t,backend:n,attrs:o}=e,{x:i}=t,{begin:u,size:l}=o;(0,a.H)(i,"slice");const[c,p]=r.kuN.parseSliceParams(i,u,l);r.kuN.assertParamsValid(i,c,p);const d=s(n.data.get(i.dataId).values,c,p,i.shape,i.dtype);return n.makeTensorInfo(p,i.dtype,d)}const i={kernelName:r.p2w,backendName:"cpu",kernelFunc:o}},212:(e,t,n)=>{"use strict";n.d(t,{Hz:()=>o,MS:()=>u});var r=n(6853),a=n(3533),s=n(546);const o=(0,a.b)(((e,t)=>{const n=e-t;return n*n})),i=(0,s.j)(r._tC,o),u={kernelName:r._tC,backendName:"cpu",kernelFunc:i}},1649:(e,t,n)=>{"use strict";n.d(t,{VY:()=>o,lu:()=>u,GR:()=>l});var r=n(6853),a=n(3533),s=n(546);const o=(0,a.b)(((e,t)=>e-t)),i=(0,s.H)(((e,t,n,r)=>({real:e-n,imag:t-r}))),u=(0,s.j)(r.Tr8,o,i),l={kernelName:r.Tr8,backendName:"cpu",kernelFunc:u}},7107:(e,t,n)=>{"use strict";n.d(t,{H:()=>a});var r=n(6853);function a(e,t,n,a,s){const o=t.length,i=r.D5U.NA(t),u=r.D5U.e3(t),l=r.D5U.e3(s),c=r.D5U.WP(n,r.D5U.NA(s));for(let t=0;t<i;++t){const n=r.D5U.NE(t,o,u),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[a[e]];c[r.D5U.qy(s,o,l)]=e[t]}return c}},5638:(e,t,n)=>{"use strict";n.d(t,{S:()=>a});var r=n(6853);function a(e,t,n,a){const s=r.D5U.EC(t,n)[0],o=[1,n[0],1];for(let e=0;e<s;e++)o[0]*=n[e];o[1]=n[s];for(let e=s+1;e<n.length;e++)o[2]*=n[e];const i={},u=new Int32Array(n[s]),l=new r.YDk(o,a,e),c=[],p=1===o[0]&&1===o[2];for(let t=0;t<n[s];t++){let n;if(p)n=e[t].toString();else{const e=[];for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])u[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,u[t]=e,c.push(t)}}const d=o.slice();d[1]=Object.keys(i).length;const h=new r.YDk(d,a);c.forEach(((e,t)=>{for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)h.set(l.get(n,e,r),n,t,r)}));const f=n.slice();return f[s]=d[1],{outputValues:h.values,outputShape:f,indices:u}}},5226:(e,t,n)=>{"use strict";n.r(t),n.d(t,{simpleAbsImpl:()=>r.bk,addImpl:()=>a.EH,ceilImpl:()=>s.__,expImpl:()=>o.Ro,expm1Impl:()=>i.OF,floorImpl:()=>u.r6,logImpl:()=>l.vX,maxImpl:()=>c.B,multiplyImpl:()=>p.$3,notEqualImpl:()=>d.Gj,rsqrtImpl:()=>h.zd,sliceImpl:()=>f.rT,squaredDifferenceImpl:()=>m.Hz,subImpl:()=>g.VY,transposeImpl:()=>y.H,uniqueImpl:()=>x.S});var r=n(224),a=n(2779),s=n(4769),o=n(1211),i=n(969),u=n(6574),l=n(5223),c=n(5126),p=n(1917),d=n(8584),h=n(7742),f=n(2578),m=n(212),g=n(1649),y=n(7107),x=n(5638)},3533:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var r=n(6853);function a(e){return(t,n,a,s,o)=>{const i=r.Wap.assertAndGetBroadcastShape(t,n),u=i.length,l=r.D5U.e3(i),c=r.D5U.NA(i),p=r.D5U.WP(o,c),d=t.length,h=n.length,f=r.D5U.e3(t),m=r.D5U.e3(n),g=r.Wap.getBroadcastDims(t,i),y=r.Wap.getBroadcastDims(n,i);if(g.length+y.length===0)for(let t=0;t<p.length;++t)p[t]=e(a[t%a.length],s[t%s.length]);else for(let t=0;t<p.length;++t){const n=r.D5U.NE(t,u,l),o=n.slice(-d);g.forEach((e=>o[e]=0));const i=r.D5U.qy(o,d,f),c=n.slice(-h);y.forEach((e=>c[e]=0));const x=r.D5U.qy(c,h,m);p[t]=e(a[i],s[x])}return[p,i]}}},546:(e,t,n)=>{"use strict";n.d(t,{j:()=>i,H:()=>u});var r=n(6853),a=n(8166),s=n(9258),o=n(6961);function i(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:o,b:i}=n,u=s;(0,a.H)([o,i],e);const l=u.data.get(o.dataId).values,c=u.data.get(i.dataId).values,p=r||o.dtype,[d,h]=t(o.shape,i.shape,l,c,p);return u.makeTensorInfo(h,p,d)}:({inputs:e,backend:a})=>{const{a:i,b:u}=e,l=a;if("complex64"===i.dtype||"complex64"===u.dtype){const e=(0,s.p)({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,c=l.data.get(r.dataId).values,p=l.data.get(a.dataId).values,d=(0,s.p)({inputs:{x:u},backend:l,attrs:{dtype:"complex64"}}),h=l.data.get(d.dataId),f=h.complexTensorInfos.real,m=h.complexTensorInfos.imag,g=l.data.get(f.dataId).values,y=l.data.get(m.dataId).values,[x,b,v]=n(i.shape,u.shape,c,p,g,y),w=l.makeTensorInfo(v,"float32",x),I=l.makeTensorInfo(v,"float32",b),N=(0,o.P)({inputs:{real:w,imag:I},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(d),l.disposeIntermediateTensorInfo(w),l.disposeIntermediateTensorInfo(I),N}{const e=l.data.get(i.dataId).values,n=l.data.get(u.dataId).values,a=r||i.dtype,[s,o]=t(i.shape,u.shape,e,n,a);return l.makeTensorInfo(o,a,s)}}}function u(e){return(t,n,a,s,o,i)=>{const u=r.Wap.assertAndGetBroadcastShape(t,n),l=r.D5U.NA(u),c=u.length,p=r.D5U.e3(u),d=r.D5U.WP("float32",l),h=r.D5U.WP("float32",l),f=r.Wap.getBroadcastDims(t,u),m=r.Wap.getBroadcastDims(n,u),g=r.Wap.mergeRealAndImagArrays(a,s),y=r.Wap.mergeRealAndImagArrays(o,i),x=t.length,b=r.D5U.e3(t),v=n.length,w=r.D5U.e3(n);if(f.length+m.length===0)for(let t=0;t<d.length;t++){const n=t%g.length,r=t%y.length,a=e(g[2*n],g[2*n+1],y[2*r],y[2*r+1]);d[t]=a.real,h[t]=a.imag}else for(let t=0;t<d.length;t++){const n=r.D5U.NE(t,c,p),a=n.slice(-x);f.forEach((e=>a[e]=0));const s=r.D5U.qy(a,x,b),o=n.slice(-v);m.forEach((e=>o[e]=0));const i=r.D5U.qy(o,v,w),u=e(g[2*s],g[2*s+1],y[2*i],y[2*i+1]);d[t]=u.real,h[t]=u.imag}return[d,h,u]}}},8029:(e,t,n)=>{"use strict";n.d(t,{a:()=>a});var r=n(6853);function a(e){return(t,n,a)=>{const s=r.D5U.WP(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],a);return s}}},6738:(e,t,n)=>{"use strict";n.d(t,{A:()=>s,O:()=>o});var r=n(6853),a=n(8166);function s(e,t,n){return({inputs:s,attrs:o,backend:i})=>{const{x:u}=s;if((0,a.H)(u,e),"string"===u.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const l=i,c=l.data.get(u.dataId).values,p=r.D5U.NA(u.shape),d=n||u.dtype,h=r.D5U.rQ(d,p);for(let e=0;e<p;++e)h[e]=t(c[e],o);return l.makeTensorInfo(u.shape,d,h)}}function o(e,t,n){return({inputs:r,attrs:s,backend:o})=>{const{x:i}=r;if((0,a.H)(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=o,l=u.data.get(i.dataId).values,c=n||i.dtype,p=t(l,c,s);return u.makeTensorInfo(i.shape,c,p)}}},6859:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GPGPUContext:()=>Jt,MathBackendWebGL:()=>ur,forceHalfFloat:()=>cr,gpgpu_util:()=>a,setWebGLContext:()=>u,version_webgl:()=>lr,webgl:()=>pr,webgl_util:()=>r});var r={};n.r(r),n.d(r,{assertNotComplex:()=>pe,bindCanvasToFramebuffer:()=>L,bindColorTextureToFramebuffer:()=>W,bindTextureToProgramUniformSampler:()=>P,bindTextureUnit:()=>O,bindVertexBufferToProgramAttribute:()=>_,callAndCheck:()=>y,canBeRepresented:()=>x,createFragmentShader:()=>I,createFramebuffer:()=>A,createProgram:()=>k,createStaticIndexBuffer:()=>S,createStaticVertexBuffer:()=>T,createTexture:()=>R,createVertexShader:()=>w,getBatchDim:()=>X,getExtensionOrThrow:()=>v,getFramebufferErrorMessage:()=>z,getMaxTexturesInShader:()=>re,getNumChannels:()=>E,getProgramUniformLocation:()=>M,getProgramUniformLocationOrThrow:()=>B,getRowsCols:()=>j,getShapeAs3D:()=>q,getTextureShapeFromLogicalShape:()=>K,getWebGLDisjointQueryTimerVersion:()=>ae,getWebGLErrorMessage:()=>b,getWebGLMaxTextureSize:()=>ee,hasExtension:()=>se,isCapableOfRenderingToFloatTexture:()=>ie,isDownloadFloatTextureEnabled:()=>ue,isReshapeFree:()=>Q,isWebGLFenceEnabled:()=>ce,isWebGLVersionEnabled:()=>oe,linkProgram:()=>$,resetMaxTextureSize:()=>te,resetMaxTexturesInShader:()=>ne,unbindColorTextureFromFramebuffer:()=>V,unbindTextureUnit:()=>F,validateFramebuffer:()=>U,validateProgram:()=>C,validateTextureSize:()=>D});var a={};n.r(a),n.d(a,{bindVertexProgramAttributeStreams:()=>Gt,createBufferFromOutputTexture:()=>qt,createFloat16MatrixTexture:()=>Pt,createFloat16PackedMatrixTexture:()=>Ht,createFloat32MatrixTexture:()=>Bt,createIndexBuffer:()=>_t,createPackedMatrixTexture:()=>Ut,createUnsignedBytesMatrixTexture:()=>Wt,createVertexBuffer:()=>At,createVertexShader:()=>Dt,downloadByteEncodedFloatMatrixFromOutputTexture:()=>Yt,downloadFloat32MatrixFromBuffer:()=>Kt,downloadMatrixFromPackedOutputTexture:()=>Zt,downloadPackedMatrixFromBuffer:()=>Qt,getInternalFormatForFloat16MatrixTexture:()=>Mt,getInternalFormatForFloat16PackedMatrixTexture:()=>zt,getInternalFormatForFloat32MatrixTexture:()=>Ft,getInternalFormatForPackedMatrixTexture:()=>Vt,getInternalFormatForUnsignedBytesMatrixTexture:()=>Lt,uploadDenseMatrixToTexture:()=>Xt,uploadPixelDataToTexture:()=>jt});var s=n(6853);const o={},i={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function u(e,t){o[e]=t}function l(e){if(!(e in o)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete o[e]}),!1),1===e?t.getContext("webgl",i)||t.getContext("experimental-webgl",i):t.getContext("webgl2",i)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;o[e]=t}const t=o[e];return t.isContextLost()?(delete o[e],l(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),o[e])}var c,p,d;function h(e,t){return[t,e]}function f(e){const t=s.D5U.NA(e),n=Math.ceil(t/4);return s.D5U.YP(n)}function m(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function g(e,t){const n=e;let r,a,o,i,u,l,c,p,d,h;return 2===(0,s.OBj)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,o=n.RGBA16F,i=n.RGBA32F,u=n.RED,c=4,p=1,d=n.HALF_FLOAT,h=n.FLOAT):(r=e.RGBA,a=e.RGBA,o=e.RGBA,i=n.RGBA,u=e.RGBA,c=4,p=4,d=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT),l=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:u,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:p,textureTypeHalfFloat:d,textureTypeFloat:h}}function y(e,t){const n=t();return(0,s.OBj)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+b(e,t))}(e),n}function x(e){return!!((0,s.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function b(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function v(e,t){return H(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function w(e,t){const n=H(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(y(e,(()=>e.shaderSource(n,t))),y(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function I(e,t){const n=H(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(y(e,(()=>e.shaderSource(n,t))),y(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=N.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),o=a.length.toString().length+2,i=a.map(((e,t)=>s.D5U.oj((t+1).toString(),o)+e));let u=0;for(let e=0;e<i.length;e++)u=Math.max(i[e].length,u);const l=i.slice(0,r-1),c=i.slice(r-1,r),p=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${s.D5U.oj(c[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(c||(c={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(p||(p={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(d||(d={}));const N=/ERROR: [0-9]+:([0-9]+):/g;function k(e){return H(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function $(e,t){if(y(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function C(e,t){if(y(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function T(e,t){const n=H(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),y(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function S(e,t){const n=H(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return y(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),y(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function E(){return 2===(0,s.OBj)().getNumber("WEBGL_VERSION")?1:4}function R(e){return H(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function D(e,t){const n=(0,s.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function A(e){return H(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function _(e,t,n,r,a,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),y(e,(()=>e.vertexAttribPointer(i,a,e.FLOAT,!1,s,o))),y(e,(()=>e.enableVertexAttribArray(i))),!0)}function O(e,t,n){G(e,n),y(e,(()=>e.activeTexture(e.TEXTURE0+n))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function F(e,t){G(e,t),y(e,(()=>e.activeTexture(e.TEXTURE0+t))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function B(e,t,n){return H(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function M(e,t,n){return e.getUniformLocation(t,n)}function P(e,t,n,r){y(e,(()=>O(e,t,r))),y(e,(()=>e.uniform1i(n,r)))}function L(e){y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),y(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),y(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function W(e,t,n){y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),y(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function V(e,t){y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),y(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function U(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+z(e,t))}function z(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function H(e,t,n){const r=y(e,(()=>t()));if(null==r)throw new Error(n);return r}function G(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function X(e,t=2){return s.D5U.NA(e.slice(0,e.length-t))}function j(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function q(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[X(e),...j(e)]),t}function K(e,t=!1){let n=(0,s.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?s.D5U.nY(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=s.D5U.bp(e);e=t.newShape}let r=s.D5U.NA(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=X(e);let n=2,a=2;return e.length&&([n,a]=j(e)),r=t*(n/2)*(a/2),s.D5U.YP(r).map((e=>2*e))}return s.D5U.YP(r)}function Y(e){return e%2==0}function Q(e,t){if(e=e.slice(-2),t=t.slice(-2),s.D5U.cO(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(Y(n)&&Y(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Y(e[0])&&Y(t[0])}let Z,J;function ee(e){if(null==Z){const t=l(e);Z=t.getParameter(t.MAX_TEXTURE_SIZE)}return Z}function te(){Z=null}function ne(){J=null}function re(e){if(null==J){const t=l(e);J=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,J)}function ae(e){if(0===e)return 0;let t;const n=l(e);return t=se(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:se(n,"EXT_disjoint_timer_query")?1:0,t}function se(e,t){return null!=e.getExtension(t)}function oe(e){try{if(null!=l(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function ie(e){if(0===e)return!1;const t=l(e);if(1===e){if(!se(t,"OES_texture_float"))return!1}else if(!se(t,"EXT_color_buffer_float"))return!1;return le(t)}function ue(e){if(0===e)return!1;const t=l(e);if(1!==e){if(se(t,"EXT_color_buffer_float"))return le(t);const e="EXT_color_buffer_half_float";if(se(t,e)){const n=t.getExtension(e);return function(e,t){const n=g(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!se(t,"OES_texture_float")&&(!!se(t,"WEBGL_color_buffer_float")&&le(t))}function le(e){const t=g(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function ce(e){return 2===e&&null!=l(e).fenceSync}function pe(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&s.D5U.hu("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const de=(0,s.OBj)();de.registerFlag("HAS_WEBGL",(()=>de.getNumber("WEBGL_VERSION")>0)),de.registerFlag("WEBGL_VERSION",(()=>oe(2)?2:oe(1)?1:0)),de.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),de.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===de.get("WEBGL_VERSION"))),de.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),de.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),de.registerFlag("WEBGL_PACK",(()=>de.getBool("HAS_WEBGL"))),de.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_CLIP",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),de.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_REDUCE",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_LAZILY_UNPACK",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_CONV_IM2COL",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>ee(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>re(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=de.getNumber("WEBGL_VERSION");return 0===e?0:ae(e)})),de.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>de.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!s.C2$.t())),de.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>ie(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!de.getBool("WEBGL_FORCE_F16_TEXTURES")&&de.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),de.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>ue(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>ce(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>de.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),de.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}));var he=n(5226);const{simpleAbsImpl:fe,addImpl:me,ceilImpl:ge,expImpl:ye,expm1Impl:xe,floorImpl:be,logImpl:ve,maxImpl:we,multiplyImpl:Ie,rsqrtImpl:Ne,sliceImpl:ke,subImpl:$e,transposeImpl:Ce,uniqueImpl:Te}=he;class Se{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Ee{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}class Re{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function De(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Ae(e,t){return 1===t?[e]:De(e,t)}function _e(){let e,t,n,r,a,o,i,u,l,c;return 2===(0,s.OBj)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",o="outputColor",i="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",o="gl_FragColor",i="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:o,defineOutput:i,defineSpecialNaN:u,defineSpecialInf:l,defineRound:c}}function Oe(e,t,n="index"){const r=s.D5U.e3(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function Fe(e){const t=s.D5U.e3(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}const Be="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Me}=s.Wap;function Pe(e,t,n,r){const a=[];e.forEach((e=>{const t=s.D5U.NA(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`))}));const o=a.join("\n"),i=e.map((e=>function(e,t,n=!1){let r="";r+=n?We(e):Le(e);const a=e.shapeInfo.logicalShape,o=t.logicalShape;return a.length<=o.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",o=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,u=Me(e.shapeInfo.logicalShape,t.logicalShape),l=je(i),c=i-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":i<2&&u.length>=1?"coords = 0;":u.map((e=>`coords.${d[e+c]} = 0;`)).join("\n");let h="";h=i<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+c]}`)).join(", ");let f="return outputValue;";const m=1===s.D5U.NA(e.shapeInfo.logicalShape),g=1===s.D5U.NA(t.logicalShape);if(1!==o||m||g){if(m&&!g)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=o-2,t=o-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      vec4 outputValue = get${r}(${h});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",o=t.texShape,i=e.shapeInfo.texShape,u=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&u===l&&null==e.shapeInfo.flatOffset&&s.D5U.cO(i,o))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=je(l),p=Me(e.shapeInfo.logicalShape,t.logicalShape),d=l-u;let h;const f=["x","y","z","w","u","v"];h=0===u?"":l<2&&p.length>=1?"coords = 0;":p.map((e=>`coords.${f[e+d]} = 0;`)).join("\n");let m="";return m=l<2&&u>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+d]}`)).join(", "),`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${h}\n      return get${r}(${m});\n    }\n  `}(e,t)),r}(e,t,r))).join("\n"),u=t.texShape,l=_e(),c=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let p,d,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Ve}\n    ${Ue}\n    ${ze}\n  `}(l);return t.isPacked?(p=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(s.D5U.cO(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let s=a,o="",i="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],o=`\n      int b${t} = index / ${s};\n      index -= b${t} * ${s};\n    `+o,i=`b${t}, `+i;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${i});\n    }\n  `}(e,t)}}(t.logicalShape,u),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(p=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return s.D5U.cO(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=Oe(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=Oe(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=Oe(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=Oe(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}var n}(t.logicalShape,u),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),r&&(h+=He),[h,c,d,o,p,i,n].join("\n")}function Le(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[s,o]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${o}, ${Ge(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${Xe(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const o=Ge(t);return 1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${o});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&s.D5U.cO(t,a)){const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:o,keptDims:i}=s.D5U.bp(t),u=o;if(u.length<t.length){const t=["row","col"];return`\n      ${Le(qe(e,u))}\n      float ${r}(int row, int col) {\n        return ${r}(${Ke(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${Xe(e)}\n      }\n    `;const l=a[0],c=a[1],p=Ge(n);return 1===c?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],o=t[2],{newShape:i,keptDims:u}=s.D5U.bp(t),l=i;if(l.length<t.length){const t=["row","col","depth"];return`\n        ${Le(qe(e,l))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Ke(t,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${o}, 1)));\n        ${Xe(e)}\n      }\n    `;const c=e.shapeInfo.texShape,p=c[0],d=c[1],h=e.shapeInfo.flatOffset;if(d===a&&null==h)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${p}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(d===o&&null==h)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${o} + depth + ${Ge(n)};\n        vec2 uv = uvFromFlat(${p}, ${d}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],o=t[2]*a,i=t[1]*o,{newShape:u,keptDims:l}=s.D5U.bp(t);if(u.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${Le(qe(e,u))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Ke(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${o}, ${a}, 1)));\n        ${Xe(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1];if(h===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${h}, index + ${Ge(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],o=t[3]*a,i=t[2]*o,u=t[1]*i,{newShape:l,keptDims:c}=s.D5U.bp(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Le(qe(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Ke(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${i}, ${o}, ${a})) +\n          depth3;\n        ${Xe(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],f=d[1];if(f===u&&null==p)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${o}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==p)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${i} + depth * ${o} +\n          depth2 * ${a} + depth3 + ${Ge(n)};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:o}=s.D5U.bp(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Le(qe(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Ke(t,o)});\n      }\n    `}const i=t[5],u=t[4]*i,l=t[3]*u,c=t[2]*l,p=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${p}, ${c}, ${l}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Xe(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,f=h[0],m=h[1];if(m===p&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${l}, ${u}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===i&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${p} + col * ${c} + depth * ${l} +\n          depth2 * ${u} + depth3 * ${i} + depth4 + ${Ge(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function We(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${_e().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=_e();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,o=a[0],i=a[1],u=_e();if(null!=a&&s.D5U.cO(t,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);\n\n        return ${u.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0]){const n=[1,2],a=["b","row","col"];return`\n        ${We(qe(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Ke(a,n)});\n        }\n      `}const o=s[0],i=s[1],u=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${o}, ${i}, ${u*Math.ceil(t[1]/2)}, ${u}, b, row, col);\n      return ${_e().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],i=o[0],u=o[1],l=Math.ceil(t[n-1]/2);let c=l*Math.ceil(t[n-2]/2),p="int b, int row, int col",d=`b * ${c} + (row / 2) * ${l} + (col / 2)`;for(let e=2;e<n-1;e++)p=`int b${e}, `+p,c*=t[n-e-1],d=`b${e} * ${c} + `+d;return`\n    vec4 ${a}(${p}) {\n      int index = ${d};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${i});\n      return ${_e().texture2D}(${r}, uv);\n    }\n  `}(e)}}const Ve="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ue="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ze="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",He="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Ge(e){return`offset${e}`}function Xe(e){const t=e.name,n=s.D5U.NA(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function je(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function qe(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Ke(e,t){return t.map((t=>e[t])).join(", ")}class Ye{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,s.D5U.hu(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],o=Math.ceil(a/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,l=je(u),c=Ae("coords",u);let p,d;if(1===o){d=u+1;const e=je(d);p=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[u-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[u-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[u-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[u-2]};`}else d=u,p=`\n        ${l} sourceLocR = coords;\n        ++${c[u-1]};\n        ${l} sourceLocG = coords;\n        ++${c[u-2]};\n        ${l} sourceLocA = coords;\n        --${c[u-1]};\n        ${l} sourceLocB = coords;\n        --${c[u-2]};`;const h=["x","y","z","w","u","v"].slice(0,d),f="."+h[d-1],m=h.map((e=>"int "+e)),g=Ae("sourceLocR",d-1).concat("inIdx.r"),y=Ae("sourceLocG",d-1).concat("inIdx.g"),x=Ae("sourceLocB",d-1).concat("inIdx.b"),b=Ae("sourceLocA",d-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,I=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,N=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${N}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${c[u-1]} < ${i[u-1]-1};\n        bool hasNextRow = ${c[u-2]} < ${i[u-2]-1};\n        ${p}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${I};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${I};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class Qe{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=i-1-e.padInfo.top,c=u-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ze{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=c-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Je="return (a < 0.) ? b * a : a;";class et{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=s.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const tt="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class nt{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s.Wap.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;let o="";if(r)if(0===a||1===s.D5U.NA(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(o=`\n          ${je(a)} coords = getOutputCoords();\n        `,1===a)o+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Ae("coords",a);o+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${o}\n\n        setOutput(result);\n      }\n    `}}class rt{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class at{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class st{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class ot{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class it{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ut{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lt{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ct{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pt{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class dt{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,s=e.padInfo.left,o=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),h=e.inChannels%4,f="channelsLast"===e.dataFormat,m=f?1:2,g=f?2:3,y=f?3:1;let x="",b="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${a}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===h}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===h}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===h}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${b}\n        setOutput(result);\n      }\n    `}}class ht{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,p=e.filterHeight,d=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${o});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ft{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,s=e.inWidth,o=e.padInfo.top,i=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,p=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,f=e.outChannels/e.inChannels;let m="",g="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${u}, ${l});\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${s}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}class mt{constructor(e,t=!1,n=null,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const a=e.inHeight,o=e.inWidth,i=e.padInfo.top,u=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,p=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,f=e.filterWidth,m=f;let g="int xR; int xC; int xCOffset;";for(let e=0;e<h;e++)for(let t=0;t<f;t++)g+=`\n          vec4 xTexelR${e}C${2*t} = vec4(0.);\n          vec4 wR${e}C${t} = vec4(0.);\n          vec4 xR${e}C${t} = vec4(0.);`;for(let e=0;e<h;e++)for(let t=0;t<m;t++){const n=2*t;if(g+=`\n          xR = xRCorner + ${e*p};\n          xC = xCCorner + ${n*d};\n        `,1===c){if(n<f&&(g+=u%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${o}) {\n                    xTexelR${e}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${o}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${o}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${e}C${n} = vec4(previous.zw, xTexelR${e}C${n}.xy);\n                } else {\n                  xR${e}C${n} = vec4(0, 0, xTexelR${e}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${o}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xR${e}C${n} = xTexelR${e}C${n};\n              `,n+1<f)){const t=u%2==0?s.D5U.nY(d):d;d%2==0&&u%2==1||d%2!=0&&u%2!=1?(g+=`\n                  xCOffset = xC + ${u%2} + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,d>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${a} &&\n                      xCOffset >= 0 && xCOffset < ${o}) {\n                      xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${e}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${e}C${n+1} = xTexelR${e}C${n+2};\n                `}}else n<f&&(g+=`\n              if(xR >= 0 && xR < ${a}) {\n            `,u%2==1?(g+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${o}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n              `,n+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${o}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${e}C${n+1} = vec4(xTexelR${e}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${o}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.xy, xTexelR${e}C${n+2}.xy);\n              `,n+1<f&&(g+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n                `)),g+="}");n<f&&(g+=`\n            vec4 wTexelR${e}C${n} = getW(${e}, ${n}, d1, q);\n            wR${e}C${n} = vec4(wTexelR${e}C${n}.xz, wTexelR${e}C${n}.xz);\n          `,n+1<f&&(g+=`\n              vec4 wTexelR${e}C${n+1} = getW(${e}, ${n+1}, d1, q);\n              wR${e}C${n+1} =\n                vec4(wTexelR${e}C${n+1}.xz, wTexelR${e}C${n+1}.xz);`))}for(let e=0;e<h;e++)for(let t=0;t<f;t++)g+=`dotProd += xR${e}C${t} * wR${e}C${t};`;let y="",x="";n&&(y=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${i}, ${u});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${b}\n        ${x}\n        setOutput(result);\n      }\n    `}}class gt{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,u]=e,[l]=t,[c,p]=n;this.outputShape=[l,c,p,u];const d="bilinear"===r?1:0,[h,f]=[o-1+".0",i-1+".0"],[m,g,y]=c>1?[""+(o-1)/(c-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[x,b,v]=p>1?[""+(i-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${b};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class yt{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${xt(r,"coords")})`,s=e[e.length-1];let o="",i="";t?(o=n?"end != "+(s-1):"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${s}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${je(r)} coords = getOutputCoords();\n        int end = ${bt(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${o}) {\n          int idx = ${i};\n          ${bt(r,"coords")} = idx;\n          val += getX(${xt(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function xt(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function bt(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}class vt{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=c.DENSE;const t=f(e),n=_e();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Oe(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class wt{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=c.DENSE;const t=f(e),n=_e();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Oe(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class It{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class Nt{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class kt{constructor(e){this.variableNames=["A"],this.outTexUsage=p.DOWNLOAD;const t=_e();this.outputShape=e,this.userCode=`\n      ${Be}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class $t{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=p.DOWNLOAD;const t=_e();this.outputShape=e,this.userCode=`\n      ${Be}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class Ct{constructor(e,t,n=!1){this.variableNames=["A"];const r=_e(),[a,s]=t;this.outputShape=e;let o="result";n&&(o="floor(result * 255. + 0.5)"),this.userCode=`\n      ${Fe(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${o}, 0., 0., 0.);\n      }\n    `}}class Tt{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=_e(),[a,s]=t;this.outputShape=e;let o="",i="result";n&&(i="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const i=2*t+n;o+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${i}] = values[0];\n              } else if(offset == 1) {\n                result[${i}] = values[1];\n              } else if(offset == 2) {\n                result[${i}] = values[2];\n              } else {\n                result[${i}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${Fe(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${o}\n\n        ${r.output} = ${i};\n      }\n    `}}class St{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}class Et{constructor(e,t,n){this.variableNames=["A","indices"];const r=e.slice();r[n]=t,this.outputShape=r,this.rank=r.length;const a=je(this.rank),s=function(e,t){const n=e.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let n=0;n<e.length;n++)n===t?a.push(`int(getIndices(${r[n]}))`):a.push(`${r[n]}`);return a.join()}(e,n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}class Rt{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=je(t.length),a=je(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function Dt(e){const t=_e();return w(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function At(e){return T(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function _t(e){return S(e,new Uint16Array([0,1,2,2,1,3]))}function Ot(e,t,n,r,a,s){D(t,n);const o=R(e),i=e.TEXTURE_2D;return y(e,(()=>e.bindTexture(i,o))),y(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),y(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),y(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),y(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),y(e,(()=>e.texImage2D(i,0,r,t,n,0,a,s,null))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),o}function Ft(e){return e.internalFormatFloat}function Bt(e,t,n,r){const[a,s]=h(t,n);return Ot(e,a,s,Ft(r),r.textureFormatFloat,e.FLOAT)}function Mt(e){return e.internalFormatHalfFloat}function Pt(e,t,n,r){const[a,s]=h(t,n);return Ot(e,a,s,Mt(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Lt(e){return e.downloadTextureFormat}function Wt(e,t,n,r){const[a,s]=h(t,n);return Ot(e,a,s,Lt(r),e.RGBA,e.UNSIGNED_BYTE)}function Vt(e){return e.internalFormatPackedFloat}function Ut(e,t,n,r){const[a,s]=m(t,n);return Ot(e,a,s,Vt(r),e.RGBA,e.FLOAT)}function zt(e){return e.internalFormatPackedHalfFloat}function Ht(e,t,n,r){const[a,s]=m(t,n);return Ot(e,a,s,zt(r),e.RGBA,r.textureTypeHalfFloat)}function Gt(e,t,n){return y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),_(e,t,"clipSpacePos",n,3,20,0)&&_(e,t,"uv",n,2,20,12)}function Xt(e,t,n,r,a,s){let o,i,u;y(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(o=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,u=e.RGBA):(o=new Float32Array(n*r*4),i=e.FLOAT,u=s.internalFormatPackedFloat),o.set(a),y(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,i,o))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function jt(e,t,n){y(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?y(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):y(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function qt(e,t,n,r){const a=e.createBuffer();y(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return y(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),y(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),y(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function Kt(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function Yt(e,t,n,r){const[a,s]=h(t,n),o=new Uint8Array(t*n*4);return y(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}function Qt(e,t,n,r,a,s,o,i){const u=e,l=new Float32Array(function(e,t){const[n,r]=m(e,t);return n*r*4}(s,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function Zt(e,t,n){const r=new Float32Array(t*n*4);return y(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}class Jt{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,s.OBj)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,u(t,e)):this.gl=l(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===(0,s.OBj)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=v(this.gl,e),se(this.gl,t))this.textureHalfFloatExtension=v(this.gl,t);else if((0,s.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),se(this.gl,r))this.colorBufferHalfFloatExtension=v(this.gl,r);else if((0,s.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",se(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!se(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=At(this.gl),this.indexBuffer=_t(this.gl),this.framebuffer=A(this.gl),this.textureConfig=g(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,s.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;y(e,(()=>e.finish())),y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),y(e,(()=>e.deleteFramebuffer(this.framebuffer))),y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),y(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),y(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Bt(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),Pt(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),Wt(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),jt(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),Xt(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Ht(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),Ut(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(V(this.gl,this.framebuffer),this.outputTexture=null),y(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>Yt(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return Qt(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Kt(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=qt(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,s.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>Zt(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=I(t,e),r=Dt(t),a=k(t);return y(t,(()=>t.attachShader(a,r))),y(t,(()=>t.attachShader(a,n))),$(t,a),this.debug&&C(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=Gt(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&y(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&C(this.gl,this.program),y(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?B(this.gl,e,t):M(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),y(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),P(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=m(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&C(this.gl,this.program),U(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),y(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),y(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=v(this.gl,2===(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await s.D5U.WD((()=>this.disposed||this.isQueryAvailable(e,(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||s.D5U.WD((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),W(this.gl,e,this.framebuffer),this.debug&&U(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(W(this.gl,this.outputTexture,this.framebuffer),this.debug&&U(this.gl)):V(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;W(r,e,this.framebuffer),this.debug&&U(r),this.outputTexture=e,y(r,(()=>r.viewport(0,0,t,n))),y(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),y(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function en(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],o=a.shape;if(!s.D5U.cO(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,u=a.isUniform?null:a.texData.texShape;if(!s.D5U.cO(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)}))}class tn{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:o,padInfo:i,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:p}=n,{left:d,top:h}=i,f=a*r,m=_e(),g="channelsLast"===p,y=g?0:1,x=g?1:2;let b="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)b+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${o} - ${h};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${s}. - ${d}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[x]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${b}\n\n        ${m.output} = result;\n      }\n    `}}class nn{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class rn{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class an{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}class sn{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=a-1-e.padInfo.top,i=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class on{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=i-1-e.padInfo.front,p=u-1-e.padInfo.top,d=l-1-e.padInfo.left,h=i*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${p}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class un{constructor(e,t,n,r=!1,a=!1,s=!1,o=null,i=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?e[1]:e[2],l=Math.ceil(u/2),c=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";o&&(f=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,m="result = activation(result);");const g=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights");let y="rc.x",x="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${f}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${h[0]});\n          result += (${d[1]} * ${h[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class ln{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}class cn{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class pn{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Ae("rc",t),r=je(t),a=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),o=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${o}));\n          }\n        }\n      `}}}class dn{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=je(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class hn{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=je(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Ae("rc",r),u=Ae("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${l}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let e=0,t=1===r?2:4;e<t;e++)h+=`\n        ${p[e]}\n        if (${d}) {\n          result[${e}] = float(${n});\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}class fn{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${d}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const b=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${d}, ${h});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${b}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${b};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class mn{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let b="0.0";if(x||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(s/4),I=s%4,N=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${N}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${2===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${3===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${N}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}class gn{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===t?(o="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(o="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${u});\n      }\n    `}}class yn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${Oe(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${Fe(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class xn{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t.shape;const[,r,a]=t.shape,[,s,o]=e.shape,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],p=1/l,d=1/c,h=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class bn{constructor(e,t,n,r){this.variableNames=["A"],this.outputShape=[];const[a,s,o,i]=e;this.outputShape=[a,t,n,i];const u=[r&&t>1?s-1:s,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class vn{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,s,o,i]=e;this.outputShape=[a,t,n,i];const u=[r&&t>1?s-1:s,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]},\n          ${u[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${i-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class wn{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t.shape;const[,r,a]=t.shape,[,s,o]=e.shape,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],p=1/l,d=1/c,h=2*Math.ceil(p)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class In{constructor(e,t,n,r){this.variableNames=["A"],this.outputShape=[];const[a,s,o,i]=e;this.outputShape=[a,t,n,i];const u=[r&&t>1?s-1:s,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],c=r?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/l[0]},\n          ${u[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Nn{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=je(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class kn{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Ae("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=je(n);function i(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return i(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class $n{constructor(e,t,n,r,a,s,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=je(a.length),u=je(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let p="";1===r?p="i":2===r&&(p="i, coords[1]");const d=`getUpdates(${p})`,h=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${h};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class Cn{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,o=s*Math.ceil(a/n);this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Tn{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let r=0;r<t.length;r++)o.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=o.join()}const s=je(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}class Sn{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=je(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return En.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${En[t]} = start[${t}] + coords.${En[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const En=["x","y","z","w","u","v"];class Rn{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=je(this.rank),n=Ae("coords",this.rank),r=Ae("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,o=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}class Dn{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=je(n.length),s=je(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}class An{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=On(t,n),a=Fn(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=_n(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let o;return r===d.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===d.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===d.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===d.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===d.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=On(n,r),o=Fn(t,a,r);o in this.freeTextures||(this.freeTextures[o]=[]);const i=_n(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=(0,s.OBj)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[o],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function _n(e,t,n,r,a){const s=function(e,t){switch(e){case d.PACKED_2X2_FLOAT32:return Vt(t);case d.PACKED_2X2_FLOAT16:return zt(t);case d.UNPACKED_FLOAT32:return Ft(t);case d.UNPACKED_FLOAT16:return Mt(t);case d.PACKED_4X1_UNSIGNED_BYTE:return Lt(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let o;if(a){const[t,n]=m(e[0],e[1]);o=t*n}else{const[t,n]=h(e[0],e[1]);o=t*n}return o*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,s)}function On(e,t){if(e===p.UPLOAD)return d.PACKED_2X2_FLOAT32;if(e===p.RENDER||null==e)return function(e){return(0,s.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?d.PACKED_2X2_FLOAT32:d.UNPACKED_FLOAT32:e?d.PACKED_2X2_FLOAT16:d.UNPACKED_FLOAT16}(t);if(e===p.DOWNLOAD||e===p.PIXELS)return d.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Fn(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class Bn{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=je(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}class Mn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Pn="return abs(x);",Ln="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",Wn="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Vn="return (x >= 0.0) ? x : (exp(x) - 1.0);",Un=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${s.Wap.SELU_SCALEALPHA};\n  float scale = ${s.Wap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,zn="return -x;",Hn="return ceil(x);",Gn="return floor(x);",Xn="return exp(x);",jn="return exp(x) - 1.0;",qn=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${s.Wap.ERF_P};\n  float a1 = ${s.Wap.ERF_A1};\n  float a2 = ${s.Wap.ERF_A2};\n  float a3 = ${s.Wap.ERF_A3};\n  float a4 = ${s.Wap.ERF_A4};\n  float a5 = ${s.Wap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,Kn="return x;",Yn="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Qn="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Zn="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class Jn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class er{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=Ae("rc",t),r=je(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const{segment_util:tr}=s.Wap,nr=s.GDt.Vl,rr=s.GDt.Gg,ar=s.GDt.vN,sr=s.GDt.ZA,or={};function ir(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?Yn:Ln;if("elu"===e)return t?Zn:Vn;if("relu6"===e)return t?Qn:Wn;if("prelu"===e)return t?tt:Je;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class ur extends s.Zuw{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!(0,s.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=l((0,s.OBj)().getNumber("WEBGL_VERSION"));this.binaryCache=((t=(0,s.OBj)().getNumber("WEBGL_VERSION"))in or||(or[t]={}),or[t]),this.gpgpu=new Jt(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new An(this.gpgpu),this.numMBBeforeWarning=null==(0,s.OBj)().global.screen?1024:(0,s.OBj)().global.screen.height*(0,s.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new s.JLz(this,(0,s.SRH)())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if(((0,s.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,s.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:p.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r){if((0,s.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:p.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:o,shape:i,isPacked:u}=t;if(null!=o){let t;t=u?new Jn(i,Kn):new Mn(i,Kn);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let c,p;if(l&&(c=s.D5U.zO()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);p=s.Wap.mergeRealAndImagArrays(e,t)}else p=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=s.D5U.zO()-c),this.convertAndCacheOnCPU(e,p)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:o,complexTensorInfos:i,isPacked:u}=t;if(null!=a){let t;t=u?new Jn(r,Kn):new Mn(r,Kn);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:o}],o),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!(0,s.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,s.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,c,p=null;if("complex64"!==o&&(0,s.OBj)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);p=this.gpgpu.createBufferFromTexture(t.texture,...f(r))}if(this.pendingRead.set(e,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];c=s.Wap.mergeRealAndImagArrays(t,n)}else if(null==p)c=this.getValuesFromTexture(e);else{const e=s.D5U.NA(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(p,e)}null!=l&&this.disposeIntermediateTensorInfo(l);const d=this.convertAndCacheOnCPU(e,c),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),d}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!x(n)){if((0,s.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=s.D5U.NA(t);if((0,s.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...f(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const o=(0,s.OBj)().getBool("WEBGL_PACK")&&!0===r,i=o?q(t):t,u=o?new $t(i):new kt(i),l=this.runWebGLProgram(u,[{shape:i,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),p}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=s.D5U.xH(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),o=s.D5U.xH(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if((0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=s.D5U.Sm(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:o[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:s.D5U.zO(),endMs:null}}endTimer(e){return(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=s.D5U.zO(),e)}async getQueryTime(e){if((0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0)return void this.texData.get(e).refCount--;this.releaseGPUData(e);const{complexTensorInfos:t}=this.texData.get(e);null!=t&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return(0,s.OBj)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=(0,s.SRH)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every((e=>null==this.texData.get(e.dataId).texture&&s.D5U.NA(e.shape)<t))}getGPGPUContext(){return this.gpgpu}slice(e,t,n){if(this.shouldExecuteOnCPU([e])){const r=ke(this.texData.get(e.dataId).values,t,n,e.shape,e.dtype);return this.makeOutput(n,e.dtype,r)}if(0===s.D5U.NA(n))return(0,s.XeE)([],n,e.dtype);const{isPacked:r}=this.texData.get(e.dataId),a=s.kuN.isSliceContinous(e.shape,t,n);if(r||!a){const r=(0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Rn(n):new Sn(n),a=r.getCustomSetupFunc(t);return this.compileAndRun(r,[e],null,a)}return this.uploadToGPU(e.dataId),this.shallowSlice(e,t,n)}shallowSlice(e,t,n){const r=this.texData.get(e.dataId),a=this.makeOutput(n,e.dtype),o=this.texData.get(a.dataId);Object.assign(o,r),o.shape=n,o.dtype=e.dtype;let i=s.kuN.computeFlatOffset(t,e.strides);r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};const u=this.dataRefCount.get(o.slice.origDataId)||1;return this.dataRefCount.set(o.slice.origDataId,u+1),a}stridedSlice(e,t,n,r){const a=this.tryRunOnCpuOrThrow([e],(()=>this.cpuBackend.stridedSlice(e,t,n,r)));if(a)return a;const o=s.kuN.computeOutShape(t,n,r);if(o.some((e=>0===e)))return(0,s.XeE)([],o);const i=new Dn(t,r,o);return this.compileAndRun(i,[e])}reverse(e,t){const n=(0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kn(e.shape,t):new Nn(e.shape,t);return this.compileAndRun(n,[e])}neg(e){const t=this.tryRunOnCpuOrThrow([e],(()=>this.cpuBackend.neg(e)));if(t)return t;if((0,s.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,zn,e.dtype);const n=new Mn(e.shape,zn);return this.compileAndRun(n,[e])}batchMatMul(e,t,n,r){const a=n?e.shape[2]:e.shape[1],o=r?t.shape[1]:t.shape[2],i=n?e.shape[1]:e.shape[2],u=Math.max(e.shape[0],t.shape[0]);if((1===a||1===o)&&i>1e3){n&&(e=(0,s.p4s)(e,[0,2,1])),r&&(t=(0,s.p4s)(t,[0,2,1]));const a=1===o?e:e.as3D(u,i,1),l=1===o?2:1,c=1===o?t.as3D(u,1,i):t;return s.dC7(a,c).sum(l,!0)}const l=(0,s.x8V)(e.dtype,t.dtype),c=new un(e.shape,t.shape,[u,a,o],n,r);return this.compileAndRun(c,[e,t],l)}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:r,bias:a,activation:o,preluActivationWeights:i}){const u=n?e.shape[2]:e.shape[1],l=r?t.shape[1]:t.shape[2],c=Math.max(e.shape[0],t.shape[0]),p=(0,s.x8V)(e.dtype,t.dtype),d=null!=a,h=null!=i,f=o?ir(o,!0):null,m=new un(e.shape,t.shape,[c,u,l],n,r,d,f,h),g=[e,t];return a&&g.push(a),i&&g.push(i),this.compileAndRun(m,g,p)}localResponseNormalization4D(e,t,n,r,a){const o=(0,s.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new an(e.shape,t,n,r,a):new nn(e.shape,t,n,r,a);return this.compileAndRun(o,[e])}LRNGrad(e,t,n,r,a,s,o){const i=new rn(t.shape,r,a,s,o);return this.compileAndRun(i,[t,n,e])}tile(e,t){if("string"===e.dtype){const n=this.readSync(e.dataId).map((e=>s.D5U.v5(e))),r=(0,s.f3b)(e.shape,e.dtype,n);return rr(r,t)}const n=new Bn(e.shape,t);return this.compileAndRun(n,[e])}pad(e,t,n){const r=(0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hn(e.shape,t,n):new dn(e.shape,t,n);return this.compileAndRun(r,[e])}gather(e,t,n){const r=this.tryRunOnCpuOrThrow([e,t],(()=>this.cpuBackend.gather(e,t,n)));if(r)return r;const a=new Et(e.shape,t.size,n);return this.compileAndRun(a,[e,t])}batchToSpaceND(e,t,n){s.D5U.hu(e.rank<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const r=t.reduce(((e,t)=>e*t)),a=s.Wap.getReshaped(e.shape,t,r),o=s.Wap.getPermuted(a.length,t.length),i=s.Wap.getReshapedPermuted(e.shape,t,r),u=s.Wap.getSliceBeginCoords(n,t.length),l=s.Wap.getSliceSize(i,n,t.length);return(0,s.p4s)(e.reshape(a),o).reshape(i).slice(u,l)}spaceToBatchND(e,t,n){s.D5U.hu(e.rank<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const r=t.reduce(((e,t)=>e*t)),a=[[0,0]];a.push(...n);for(let n=1+t.length;n<e.shape.length;++n)a.push([0,0]);const o=e.pad(a),i=s.Wap.getReshaped(o.shape,t,r,!1),u=s.Wap.getPermuted(i.length,t.length,!1),l=s.Wap.getReshapedPermuted(o.shape,t,r,!1),c=(0,s.p4s)(o.reshape(i),u);return(0,s.XLQ)(c,l)}reduce(e,t,n){const r=e.shape[0],a=e.shape[1],o=s.Wap.computeOptimalWindowSize(a),i=Math.ceil(a/o),u=new gn({windowSize:o,inSize:a,batchSize:r,outSize:i},t),l=this.compileAndRun(u,[e],n);return 1===l.shape[1]?l:this.reduce(l,t,n)}argReduce(e,t,n=null){let r=e.shape[0],a=e.shape[1];null!=n&&(r=n.shape[0],a=n.shape[1]);const o=s.Wap.computeOptimalWindowSize(a),i={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},u=new Re(i,t,null==n),l=[e];null!=n&&l.push(n);const c=this.compileAndRun(u,l,"int32");return 1===c.shape[1]?c:this.argReduce(e,t,c)}argReducePacked(e,t,n=null){const r=null!=n?n.shape:e.shape,a=r[r.length-1],o=s.Wap.computeOptimalWindowSize(a),i=new Ye(r,o,t,null==n),u=null==n?[e]:[e,n],l=this.compileAndRun(i,u,"int32");return l.rank===e.rank?this.argReducePacked(e,t,l):l}sum(e,t){s.Wap.assertAxesAreInnerMostDims("sum",t,e.rank);const[n,r]=s.Wap.computeOutAndReduceShapes(e.shape,t),a=s.D5U.NA(r),o=e.as2D(-1,a),i=s.z4k(e.dtype);return this.reduce(o,"sum",i).reshape(n)}prod(e,t){const n=this.tryRunOnCpuOrThrow([e],(()=>this.cpuBackend.prod(e,t)));if(n)return n;const[r,a]=s.Wap.computeOutAndReduceShapes(e.shape,t),o=s.D5U.NA(a),i=e.as2D(-1,o),u=s.z4k(e.dtype);return this.reduce(i,"prod",u).reshape(r)}unsortedSegmentSum(e,t,n){let r=0;const a=s.Wap.getAxesPermutation([r],e.rank);let o=e;null!=a&&(o=(0,s.p4s)(e,a),r=s.Wap.getInnerMostAxes(1,e.rank)[0]);const i=tr.computeOutShape(o.shape,r,n),u=s.D5U.NA([o.shape[r]]),l=o.as2D(-1,u),c=s.z4k(e.dtype);let p=this.segOpCompute(l,"unsortedSegmentSum",t,c,n).reshape(i);return null!=a&&(p=(0,s.p4s)(p,s.Wap.getUndoAxesPermutation(a))),p}segOpCompute(e,t,n,r,a){const o=e.shape[0],i=e.shape[1],u=tr.segOpComputeOptimalWindowSize(i,a),l=new Cn({windowSize:u,inSize:i,batchSize:o,numSegments:a},t),c=this.compileAndRun(l,[e,n],r);return c.shape[1]===a?c:(n=(0,s.w6H)(0,a).tile([i/u]),this.segOpCompute(c,t,n,r,a))}argMinMaxReduce(e,t,n){const r=[t];if(s.Wap.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,e.rank),!(0,s.OBj)().getBool("WEBGL_PACK_REDUCE")||e.rank<=2){const[t,a]=s.Wap.computeOutAndReduceShapes(e.shape,r),o=s.D5U.NA(a),i=e.as2D(-1,o);return this.argReduce(i,n).reshape(t)}return this.argReducePacked(e,n)}argMin(e,t){return this.argMinMaxReduce(e,t,"min")}argMax(e,t){return this.argMinMaxReduce(e,t,"max")}cumsum(e,t,n,r){if(t!==e.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${e.rank-1} but got axis=${t}`);const a=e.shape[t];let s=e;for(let t=0;t<=Math.ceil(Math.log2(a))-1;t++){const n=new yt(e.shape,!1,r),a=n.getCustomSetupFunc(t),o=s;s=this.compileAndRun(n,[s],s.dtype,a),o.dispose()}if(n){const t=new yt(e.shape,n,r),a=s;s=this.compileAndRun(t,[s]),a.dispose()}return s}equal(e,t){if((0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(equal(a, b));\n","bool");const n=new et("return float(a == b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")}less(e,t){const n=this.tryRunOnCpuOrThrow([e,t],(()=>this.cpuBackend.less(e,t)));if(n)return n;if((0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(lessThan(a, b));\n","bool");const r=new et("return float(a < b);",e.shape,t.shape);return this.compileAndRun(r,[e,t],"bool")}lessEqual(e,t){if((0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new et("return float(a <= b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")}greater(e,t){const n=this.tryRunOnCpuOrThrow([e,t],(()=>this.cpuBackend.greater(e,t)));if(n)return n;if((0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(greaterThan(a, b));\n","bool");const r=new et("return float(a > b);",e.shape,t.shape);return this.compileAndRun(r,[e,t],"bool")}greaterEqual(e,t){if((0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new et("return float(a >= b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")}logicalNot(e){const t=new Mn(e.shape,"return float(!(x >= 1.0));");return this.compileAndRun(t,[e])}logicalAnd(e,t){if((0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new et("return float(a >= 1.0 && b >= 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")}logicalOr(e,t){if((0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new et("return float(a >= 1.0 || b >= 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")}select(e,t,n){const r=new Tn(e.rank,t.shape,t.rank);return this.compileAndRun(r,[e,t,n],(0,s.x8V)(t.dtype,n.dtype))}where(e){s.Wap.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return sr(e.shape,t)}topk(e,t,n){const r=e.dataSync();return ar(r,e.shape,e.dtype,t,n)}min(e,t){s.Wap.assertAxesAreInnerMostDims("min",t,e.rank);const[n,r]=s.Wap.computeOutAndReduceShapes(e.shape,t),a=s.D5U.NA(r),o=e.as2D(-1,a);return this.reduce(o,"min",o.dtype).reshape(n)}minimum(e,t){const n=this.tryRunOnCpuOrThrow([e,t],(()=>this.cpuBackend.minimum(e,t)));if(n)return n;const r=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nt("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new et("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",e.shape,t.shape);return this.compileAndRun(r,[e,t])}mod(e,t){const n=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nt("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new et("if (b == 0.0) return NAN;\n  return mod(a, b);",e.shape,t.shape);return this.compileAndRun(n,[e,t])}maximum(e,t){const n=this.tryRunOnCpuOrThrow([e,t],(()=>this.cpuBackend.maximum(e,t)));if(n)return n;const r=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nt("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new et("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",e.shape,t.shape);return this.compileAndRun(r,[e,t])}all(e,t){s.Wap.assertAxesAreInnerMostDims("all",t,e.rank);const[n,r]=s.Wap.computeOutAndReduceShapes(e.shape,t),a=s.D5U.NA(r),o=e.as2D(-1,a);return this.reduce(o,"all",o.dtype).reshape(n)}any(e,t){s.Wap.assertAxesAreInnerMostDims("any",t,e.rank);const[n,r]=s.Wap.computeOutAndReduceShapes(e.shape,t),a=s.D5U.NA(r),o=e.as2D(-1,a);return this.reduce(o,"any",o.dtype).reshape(n)}floorDiv(e,t){const n="int32";if((0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",n);const r=new et("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",e.shape,t.shape);return this.compileAndRun(r,[e,t],n)}packedUnaryOp(e,t,n){const r=new Jn(e.shape,t);return this.compileAndRun(r,[e],n)}packedBinaryOp(e,t,n,r,a=!1){const s=new nt(n,e.shape,t.shape,a);return this.compileAndRun(s,[e,t],r)}makeComplexComponentTensorInfo(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}addN(e){if(1===e.length)return e[0];if(e.length>(0,s.OBj)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(e.length/2),n=this.addN(e.slice(0,t)),r=this.addN(e.slice(t));return this.addN([n,r])}const t=e.map((e=>e.dtype)).reduce(((e,t)=>(0,s.x8V)(e,t))),n=e.map((e=>e.shape)),r=(0,s.OBj)().getBool("WEBGL_PACK")?new Ee(e[0].shape,n):new Se(e[0].shape,n);return this.compileAndRun(r,e,t)}pow(e,t){const n=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nt("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new et("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",e.shape,t.shape),r=(0,s.x8V)(e.dtype,t.dtype);return this.compileAndRun(n,[e,t],r)}ceil(e){if(this.shouldExecuteOnCPU([e])){const t=ge(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}if((0,s.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Hn,e.dtype);const t=new Mn(e.shape,Hn);return this.compileAndRun(t,[e])}floor(e){if(this.shouldExecuteOnCPU([e])){const t=be(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}if((0,s.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Gn,e.dtype);const t=new Mn(e.shape,Gn);return this.compileAndRun(t,[e])}sign(e){const t=new Mn(e.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(t,[e])}isNaN(e){const t=new Mn(e.shape,"return float(isnan(x));");return this.compileAndRun(t,[e],"bool")}isInf(e){const t=new Mn(e.shape,"return float(isinf(x));");return this.compileAndRun(t,[e],"bool")}isFinite(e){const t=new Mn(e.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(t,[e],"bool")}round(e){const t=new Mn(e.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(t,[e])}exp(e){if(this.shouldExecuteOnCPU([e])){const t=ye(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}if((0,s.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Xn,e.dtype);const t=new Mn(e.shape,Xn);return this.compileAndRun(t,[e])}expm1(e){if(this.shouldExecuteOnCPU([e])){const t=xe(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}if((0,s.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,jn,e.dtype);const t=new Mn(e.shape,jn);return this.compileAndRun(t,[e])}softmax(e,t){const n=s.D5U.EC([t],e.shape),r=(0,s.Fp7)(e,n),a=s.Wap.expandShapeToKeepDim(r.shape,n),o=s.luU(e,r.reshape(a)),i=this.exp(o),u=this.sum(i,n).reshape(a);return(0,s.hiC)(i,u)}log(e){if(this.shouldExecuteOnCPU([e])){const t=ve(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}if((0,s.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",e.dtype);const t=new Mn(e.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(t,[e])}log1p(e){const t=new Mn(e.shape,"return log(1.0 + x);");return this.compileAndRun(t,[e])}sqrt(e){const t=new Mn(e.shape,"return sqrt(x);");return this.compileAndRun(t,[e])}rsqrt(e){if(this.shouldExecuteOnCPU([e])){const t=Ne(this.texData.get(e.dataId).values,e.dtype);return this.makeOutput(e.shape,e.dtype,t)}const t=new Mn(e.shape,"return inversesqrt(x);");return this.compileAndRun(t,[e])}reciprocal(e){const t=new Mn(e.shape,"return 1.0 / x;");return this.compileAndRun(t,[e])}relu(e){let t;return t=(0,s.OBj)().getBool("WEBGL_PACK")?new Jn(e.shape,Yn):new Mn(e.shape,Ln),this.compileAndRun(t,[e])}relu6(e){let t;return t=(0,s.OBj)().getBool("WEBGL_PACK")?new Jn(e.shape,Qn):new Mn(e.shape,Wn),this.compileAndRun(t,[e])}prelu(e,t){const n=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nt(tt,e.shape,t.shape):new et(Je,e.shape,t.shape);return this.compileAndRun(n,[e,t])}elu(e){if((0,s.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Zn,e.dtype);const t=new Mn(e.shape,Vn);return this.compileAndRun(t,[e])}eluDer(e,t){const n=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nt("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",e.shape,t.shape):new et("return (b >= 1.0) ? a : a * (b + 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t])}selu(e){const t=new Mn(e.shape,Un);return this.compileAndRun(t,[e])}clip(e,t,n){let r;r=(0,s.OBj)().getBool("WEBGL_PACK_CLIP")?new at(e.shape):new rt(e.shape);const a=r.getCustomSetupFunc(t,n);return this.compileAndRun(r,[e],null,a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=fe(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,s.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Pn,e.dtype);const t=new Mn(e.shape,Pn);return this.compileAndRun(t,[e])}complexAbs(e){const t=this.texData.get(e.dataId),n=new st(e.shape),r=[this.makeComplexComponentTensorInfo(e,t.complexTensorInfos.real),this.makeComplexComponentTensorInfo(e,t.complexTensorInfos.imag)];return this.compileAndRun(n,r)}sigmoid(e){const t=new Mn(e.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(t,[e])}softplus(e){const t=new Mn(e.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(t,[e])}asin(e){const t=new Mn(e.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(t,[e])}acos(e){const t=new Mn(e.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(t,[e])}atan(e){const t=new Mn(e.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(t,[e])}sinh(e){const t=new Mn(e.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(t,[e])}cosh(e){const t=new Mn(e.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(t,[e])}tanh(e){const t=new Mn(e.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(t,[e])}asinh(e){const t=new Mn(e.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(t,[e])}acosh(e){const t=new Mn(e.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(t,[e])}atanh(e){const t=new Mn(e.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(t,[e])}erf(e){const t=new Mn(e.shape,qn);return this.compileAndRun(t,[e])}step(e,t){const n=new Mn(e.shape,function(e=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${e});\n  `}(t));return this.compileAndRun(n,[e])}conv2dByMatMul(e,t,n,r,a,o){const i=e.shape,u=this.texData.get(e.dataId),l=n.inChannels,c=i[0]*i[1]*i[2],p=n.outChannels,d="channelsLast"===n.dataFormat,h=(1===c||1===p)&&l>1e3,f=i[2]%2!=0&&!!u.isPacked;if(h||!(0,s.OBj)().getBool("WEBGL_LAZILY_UNPACK")||!(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!f){const u=d?i[0]*i[1]*i[2]:i[0]*i[2]*i[3],l=(0,s.XLQ)(e,[1,u,n.inChannels]),c=(0,s.XLQ)(t,[1,n.inChannels,n.outChannels]),p=this.fusedBatchMatMul({a:l,b:c,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:o});return(0,s.XLQ)(p,n.outShape)}const m=d?i[0]*i[1]*(i[2]+1):i[0]*i[2]*(i[3]+1),g={dataId:e.dataId,shape:[1,m,n.inChannels],dtype:e.dtype},y=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,s.D5U.hu(Q(u.shape,g.shape),(()=>`packed reshape ${u.shape} to ${g.shape} isn't free`));const x=(0,s.XLQ)(t,[1,n.inChannels,n.outChannels]),b=this.fusedBatchMatMul({a:g,b:x,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:o}),v=this.texData.get(b.dataId);return s.D5U.hu(v.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=y,v.shape=n.outShape,(0,s.SRH)().makeTensorFromDataId(b.dataId,n.outShape,b.dtype)}conv2dWithIm2Row(e,t,n,r,a,s){const{filterWidth:o,filterHeight:i,inChannels:u,outWidth:l,outHeight:c,dataFormat:p}=n,d="channelsLast"===p,h=o*i*u,f=c*l,m=[h,f],g=e.squeeze([0]),y=t.reshape([1,h,-1]),x=new tn(m,g.shape,n),b=this.compileAndRun(x,[g]).reshape([1,m[0],m[1]]),v=null!=r,w=null!=s,I=a?ir(a,!0):null,N=new un(b.shape,y.shape,[1,f,n.outChannels],!0,!1,v,I,w),k=[b,y];r&&k.push(r),w&&k.push(s);const $=this.compileAndRun(N,k);return d?$.reshape([1,c,l,n.outChannels]):$.reshape([1,n.outChannels,c,l])}fusedConv2d({input:e,filter:t,convInfo:n,bias:r,activation:a,preluActivationWeights:o}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(e,t,n,r,a,o);if((0,s.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===e.shape[0])return this.conv2dWithIm2Row(e,t,n,r,a,o);const i=null!=r,u=null!=o,l=a?ir(a,!1):null,c=new dt(n,i,l,u),p=[e,t];return r&&p.push(r),o&&p.push(o),this.compileAndRun(c,p)}conv2d(e,t,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(e,t,n);if((0,s.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===e.shape[0])return this.conv2dWithIm2Row(e,t,n);const r=new dt(n);return this.compileAndRun(r,[e,t])}conv2dDerInput(e,t,n){const r=new it(n);return this.compileAndRun(r,[e,t])}conv2dDerFilter(e,t,n){const r=new ot(n);return this.compileAndRun(r,[e,t])}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:r,activation:a,preluActivationWeights:o}){const i=(0,s.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,u=a?ir(a,i):null,l=[e,t],c=null!=r,p=null!=o;let d;return c&&l.push(r),p&&l.push(o),i?(d=new mt(n,c,u,p),this.compileAndRun(d,l)):(d=new ft(n,c,u,p),this.compileAndRun(d,l))}depthwiseConv2D(e,t,n){let r;return(0,s.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new mt(n),this.compileAndRun(r,[e,t])):(r=new ft(n),this.compileAndRun(r,[e,t]))}depthwiseConv2DDerInput(e,t,n){const r=new pt(n);return this.compileAndRun(r,[e,t])}depthwiseConv2DDerFilter(e,t,n){const r=new ct(n);return this.compileAndRun(r,[e,t])}conv3d(e,t,n){const r=new ht(n);return this.compileAndRun(r,[e,t])}conv3dDerInput(e,t,n){const r=new lt(n);return this.compileAndRun(r,[e,t])}conv3dDerFilter(e,t,n){const r=new ut(n);return this.compileAndRun(r,[e,t])}unstack(e,t){const n=e.shape[t],r=new Array(e.rank-1);let a=0;for(let n=0;n<e.rank;n++)n!==t&&(r[a++]=e.shape[n]);const s=new Array(e.rank).fill(0),o=e.shape.slice();o[t]=1;const i=new Array(n);for(let n=0;n<i.length;n++)s[t]=n,i[n]=this.slice(e,s,o).reshape(r);return i}avgPool3d(e,t){const n=new mn(t,"avg",!1);return this.compileAndRun(n,[e],"float32")}avgPool3dBackprop(e,t,n){const r=new Ze(n);return this.compileAndRun(r,[e],t.dtype)}maxPool3d(e,t){const n=new mn(t,"max",!1);return this.compileAndRun(n,[e],"float32")}maxPool3dBackprop(e,t,n,r){const a=new mn(r,"max",!0),s=this.compileAndRun(a,[t]),o=new on(r),i=this.compileAndRun(o,[e,s],t.dtype);return s.dispose(),i}resizeBilinear(e,t,n,r){const a=(0,s.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new vn(e.shape,t,n,r):new bn(e.shape,t,n,r);return this.compileAndRun(a,[e],"float32")}resizeBilinearBackprop(e,t,n){const r=new xn(e,t,n);return this.compileAndRun(r,[e])}resizeNearestNeighbor(e,t,n,r){const a=new In(e.shape,t,n,r);return this.compileAndRun(a,[e])}resizeNearestNeighborBackprop(e,t,n){const r=new wn(e,t,n);return this.compileAndRun(r,[e])}multinomial(e,t,n,r){const a=t?e:(0,s.XAC)(e),o=a.shape[0],i=a.shape[1],u=new ln(o,i,n),l=u.getCustomSetupFunc(r);return this.compileAndRun(u,[a],"int32",l)}oneHot(e,t,n,r){const a=new cn(e.size,t,n,r);return this.compileAndRun(a,[e])}diag(e){const t=new Nt(e.size);return this.compileAndRun(t,[e])}cropAndResize(e,t,n,r,a,s){const o=new gt(e.shape,t.shape,r,a,s);return this.compileAndRun(o,[e,t,n],"float32")}depthToSpace(e,t,n){s.D5U.hu(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`));const r=e.shape[0],a="NHWC"===n?e.shape[1]:e.shape[2],o="NHWC"===n?e.shape[2]:e.shape[3],i="NHWC"===n?e.shape[3]:e.shape[1],u=a*t,l=o*t,c=i/(t*t),p=new It("NHWC"===n?[r,u,l,c]:[r,c,u,l],t,n);return this.compileAndRun(p,[e])}split(e,t,n){return nr(e,t,n)}scatterND(e,t,n){const{sliceRank:r,numUpdates:a,sliceSize:o,strides:i,outputSize:u}=s.Wap.calculateShapes(t,e,n),l=[u/o,o],c=e.reshape([a,r]),p=t.reshape([a,o]);if(0===u)return s.Wap.reshapeTensor((0,s.XeE)([]),n);const d=(0,s.iD$)(0),h=new $n(a,r,c.rank,p.rank,i,l);return this.compileAndRun(h,[p,c,d]).reshape(n)}sparseToDense(e,t,n,r){const{sliceRank:a,numUpdates:o,strides:i,outputSize:u}=s.Wap.calculateShapes(t,e,n),l=new $n(o,a,e.rank,t.rank,i,[u,1],!1);return this.compileAndRun(l,[t,e,r]).reshape(n)}gatherND(e,t){const n=t.shape,r=n[n.length-1],[a,o,i,u]=s.Wap.prepareAndValidate(e,t),l=t.reshape([o,r]),c=e.reshape([e.size/i,i]),p=new Rt(r,u,[o,i]);return this.compileAndRun(p,[c,l]).reshape(a)}fill(e,t,n){if("string"===(n=n||s.D5U.D2(t))){const r=s.D5U.rQ(n,s.D5U.NA(e));return r.fill(t),(0,s.SRH)().makeTensor(r,e,n,this)}{const r=new St(e,t),a=r.getCustomSetupFunc(t);return this.compileAndRun(r,[],n,a)}}onesLike(e){if("string"===e.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(e.shape,1,e.dtype)}zerosLike(e){return this.fill(e.shape,"string"===e.dtype?"":0,e.dtype)}linspace(e,t,n){return s.Wap.linspaceImpl(e,t,n)}makeTensorInfo(e,t,n){const r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return(0,s.SRH)().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new er(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new pn(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[X(e.shape),...j(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[X(t),...j(t)],s=new yn(a,n),o=this.runWebGLProgram(s,[r],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=q(r);let o;return o=n?new wt(s):new vt(s),{dtype:a,shape:r,dataId:this.runWebGLProgram(o,[{shape:s,dtype:a,dataId:e}],a,null,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===c.DENSE){const t=f(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===s.D5U.NA(o.shape))return i.values=s.D5U.WP(o.dtype,0),o;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&s.D5U.NA(t.shape)<=(0,s.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Q(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const p={shape:o.shape,texData:i,isUniform:!1},d=function(e,t,n){let r="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a,s}(e,l,p),h=this.getAndSaveBinary(d,(()=>function(e,t,n,r){const a=t.userCode,o=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=o.map((e=>e.shapeInfo)),u={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=Pe(o,u,a,t.packedInputs),c=e.createProgram(l);let p=null;const d=e.getUniformLocation(c,"NAN",!1);1===(0,s.OBj)().getNumber("WEBGL_VERSION")&&(p=e.getUniformLocation(c,"INFINITY",!1));const h={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],a=!1;h[r]=e.getUniformLocation(c,r,a),h[`offset${r}`]=e.getUniformLocation(c,`offset${r}`,a)}return{program:t,source:l,webGLProgram:c,uniformLocations:h,inShapeInfos:i,outShapeInfo:u,infLoc:p,nanLoc:d}}(this.gpgpu,e,l,p))),m=null!=this.activeTimers;let g;if(m&&(g=this.startTimer()),function(e,t,n,r,a){en(t.inShapeInfos,n),en([t.outShapeInfo],[r]);const o=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(o,i[0],i[1]):e.setOutputMatrixTexture(o,i[0],i[1]),e.setProgram(t.webGLProgram),1===(0,s.OBj)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],o=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`];if(null!=o)if(n.isUniform)if(s.D5U.NA(n.shape)<2)e.gl.uniform1f(o,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(o,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,o,r)})),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,h,l,p,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),m&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)})),!(0,s.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;const o=this.runWebGLProgram(e,t,n,r,a);return(0,s.SRH)().makeTensorFromDataId(o.dataId,o.shape,o.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,s.OBj)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,s.lub)((()=>{if(!(0,s.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,s.OBj)().getBool("DEBUG");(0,s.OBj)().set("DEBUG",!1);const t=this.abs((0,s.iD$)(1e-8)).dataSync()[0];if((0,s.OBj)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:o,usage:i,isPacked:u}=t;if(null!=o)return;const l=null!=this.activeTimers;let c;l&&(c=s.D5U.zO());let d=t.texShape;if(null==d&&(d=K(n,u),t.texShape=d),null!=a){const e=q(n);let o,i=d[1],h=d[0];const f=a instanceof Uint8Array;u?([i,h]=m(d[0],d[1]),o=new Tt(e,[h,i],f)):o=new Ct(e,[h,i],f);const g=this.makeTensorInfo([h,i],r);this.texData.get(g.dataId).usage=f?p.PIXELS:p.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId),i,h,a);const y=!0,x=this.runWebGLProgram(o,[g],r,null,y),b=this.texData.get(x.dataId);t.texture=b.texture,t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,this.disposeIntermediateTensorInfo(g),this.texData.delete(x.dataId),t.values=null,l&&(this.uploadWaitMs+=s.D5U.zO()-c)}else{const e=this.acquireTexture(d,i,r,u);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*s.D5U.bT(t)}tryRunOnCpuOrThrow(e,t){if(this.shouldExecuteOnCPU(e))try{return t()}catch(e){if((0,s.OBj)().getBool("IS_TEST"))throw new Error("CPU forwarding failed")}return null}}const lr="2.7.0";function cr(){(0,s.OBj)().set("WEBGL_FORCE_F16_TEXTURES",!0)}s.C2$.j()&&(0,s.jqO)("webgl",(()=>new ur),2);const pr={forceHalfFloat:cr};function dr(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const hr={kernelName:s.iJz,backendName:"webgl",kernelFunc:dr};function fr(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(s.dataId),i=dr({inputs:{x:r},backend:n});n.texData.get(i.dataId).complexParentRefCount++;const u=dr({inputs:{x:a},backend:n});return n.texData.get(u.dataId).complexParentRefCount++,o.complexTensorInfos={real:i,imag:u},s}const mr={kernelName:s.Zz9,backendName:"webgl",kernelFunc:fr};function gr(e){return({inputs:t,backend:n})=>{const{x:r}=t,a=n,s=new Mn(r.shape,e);return a.runWebGLProgram(s,[r],r.dtype)}}function yr({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:o}){return({inputs:i,backend:u})=>{const{a:l,b:c}=i,p=u;if(r&&"complex64"===l.dtype){const t=p.texData.get(l.dataId),n=p.texData.get(c.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},o={dataId:r.dataId,dtype:r.dtype,shape:c.shape},i=new et(e,l.shape,c.shape);return p.runWebGLProgram(i,[a,o],(0,s.x8V)(n.dtype,r.dtype))})),o=fr({inputs:{real:r,imag:a},backend:p});return p.disposeIntermediateTensorInfo(r),p.disposeIntermediateTensorInfo(a),o}const d=o||(0,s.x8V)(l.dtype,c.dtype);if(p.shouldExecuteOnCPU([l,c])&&null!=a){const e=p.texData.get(l.dataId),t=p.texData.get(c.dataId),[n,r]=a(l.shape,c.shape,e.values,t.values,d),s=p.makeTensorInfo(r,d);return p.texData.get(s.dataId).values=n,s}let h;return h=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new nt(t,l.shape,c.shape,n):new et(e,l.shape,c.shape),p.runWebGLProgram(h,[l,c],d)}}const xr="return a + b;",br=yr({opSnippet:xr,packedOpSnippet:xr,supportsComplex:!0,cpuKernelImpl:me}),vr={kernelName:s.mm_,backendName:"webgl",kernelFunc:br},wr=yr({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Ir={kernelName:s.QCc,backendName:"webgl",kernelFunc:wr},Nr={kernelName:s.JhU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;pe(a,"avgPool");const{filterSize:o,strides:i,pad:u,dimRoundingMode:l}=r;s.D5U.hu(s.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=s.Wap.computePool2DInfo(a.shape,o,i,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&s.D5U.cO(c.inShape,c.outShape))return dr({inputs:{x:a},backend:n});const p=new fn(c,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}},kr={kernelName:s.xts,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,i=o;pe([a,o],"avgPoolBackprop");const{filterSize:u,strides:l,pad:c}=r,p=s.Wap.computePool2DInfo(i.shape,u,l,1,c),d=new Qe(p);return n.runWebGLProgram(d,[a],i.dtype)}};class $r{constructor(e,t,n,r,a,o){this.outputShape=[],this.variableNames=["x","mean","variance"],s.Wap.assertAndGetBroadcastShape(e,t),s.Wap.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(s.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";null!=a&&(s.Wap.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${o}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Cr{constructor(e,t,n,r,a,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],s.Wap.assertAndGetBroadcastShape(e,t),s.Wap.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(s.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=a&&(s.Wap.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${o}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Tr={kernelName:s.sHE,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:o,offset:i,scale:u}=e;s.D5U.hu(a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.D5U.hu(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.D5U.hu(null==u||a.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[r,a,o];let p=null;null!=i&&(p=i.shape,c.push(i));let d=null;null!=u&&(d=u.shape,c.push(u));const h=(0,s.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Cr(r.shape,a.shape,o.shape,p,d,l):new $r(r.shape,a.shape,o.shape,p,d,l);return t.runWebGLProgram(h,c,c[0].dtype)}},Sr=yr({opSnippet:"return float(a != b);",dtype:"bool"}),Er={kernelName:s.yQU,backendName:"webgl",kernelFunc:Sr};function Rr(e){const{inputs:t,backend:n}=e,{input:r}=t;return dr({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Dr={kernelName:s.xJR,backendName:"webgl",kernelFunc:Rr},Ar={kernelName:s.RFZ,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:o}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===o.dtype)return dr({inputs:{x:o},backend:r});const t=s.lls(o.shape),n=e({inputs:{x:o},backend:r,attrs:{dtype:"float32"}}),a=fr({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===o.dtype){const t=Rr({inputs:{input:o},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!s.D5U.QB(o.dtype,i)){const e=dr({inputs:{x:o},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new Mn(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(o,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",s.D5U.WP("bool",1)),t=Sr({inputs:{a:o,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${i}`)}};class _r{constructor(e){this.outputShape=[],this.outputShape=s.Wap.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Or{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=s.Wap.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=je(r),o=Ae("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const u=new Array(e.length-1);u[0]=e[0][t];for(let n=1;n<u.length;n++)u[n]=u[n-1]+e[n][t];const l=i[t],c=i.slice(-2),p=i.join();let d=`if (${l} < ${u[0]}) {\n        return getChannel(\n            getT0(${p}), vec2(${c.join()}));\n        }`;for(let e=1;e<u.length;e++){const t=u[e-1];d+=`\n        if (${l} < ${u[e]}  && ${l} >= ${u[e-1]}) {\n          return getChannel(\n            getT${e}(${Fr(i,l,t)}),\n            vec2(${Fr(c,l,t)}));\n        }`}const h=u.length,f=u[u.length-1];d+=`\n        return getChannel(\n          getT${h}(${Fr(i,l,f)}),\n          vec2(${Fr(c,l,f)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${o}), 0., 0., 0.);\n\n        ${o[r-1]} = ${o[r-1]} + 1;\n        if (${o[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${o});\n        }\n\n        ${o[r-2]} = ${o[r-2]} + 1;\n        if (${o[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${o});\n        }\n\n        ${o[r-1]} = ${o[r-1]} - 1;\n        if (${o[r-2]} < ${n[r-2]} &&\n            ${o[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${o});\n        }\n        setOutput(result);\n      }\n    `}}function Fr(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function Br(e){const{inputs:t,backend:n}=e,{input:r}=t;return dr({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Mr={kernelName:s.J_u,backendName:"webgl",kernelFunc:Br};function Pr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:o}=r,i=n,u=s.D5U.NA(a.shape),l=s.D5U.JZ(o,u),c=s.D5U.NA(l);s.D5U.hu(u===c,(()=>`The new shape (${l}) has ${c} elements and the old shape (${a.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const p=i.texData.get(a.dataId);return!p.isPacked||Q(a.shape,l)||null!==p.texture&&Q(p.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){const r=[X(e.shape),...j(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[X(t),...j(t)],o=new yn(s,r),i=n.runWebGLProgram(o,[a],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}(a,l,i)}const Lr={kernelName:s.HZH,backendName:"webgl",kernelFunc:Pr};function Wr(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Rr({inputs:{input:e},backend:n}))),a=e.map((e=>Br({inputs:{input:e},backend:n}))),s=Wr(r,t,n),o=Wr(a,t,n),i=fr({inputs:{real:s,imag:o},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}if(e.length>(0,s.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=Wr(e.slice(0,r),t,n),s=Wr(e.slice(r),t,n),o=Wr([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}if((0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new Or(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const a=s.Wap.computeOutShape(e.map((e=>e.shape)),t),o=e.map((e=>Pr({inputs:{x:e},attrs:{shape:[-1,s.D5U.NA(e.shape.slice(t))]},backend:n}))),i=new _r(o.map((e=>e.shape))),u=n.runWebGLProgram(i,o,r);o.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=Pr({inputs:{x:u},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(u),l}const Vr={kernelName:s.Eh3,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,o=s.D5U.EC(a,t[0].shape)[0],i=s.Wap.computeOutShape(t.map((e=>e.shape)),o);if(0===s.D5U.NA(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter((e=>s.D5U.NA(e.shape)>0));if(1===u.length)return u[0];const l=u.map((e=>e.shape));return s.Wap.assertParamsConsistent(l,o),Wr(u,o,n)}},Ur=gr("if (isnan(x)) return x;\n  return cos(x);\n"),zr={kernelName:s.mc4,backendName:"webgl",kernelFunc:Ur},Hr=yr({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Gr={kernelName:s.ZCY,backendName:"webgl",kernelFunc:Hr};class Xr{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function jr(e,t,n){const r=n.texData.get(e.dataId),a=s.D5U.NA(e.shape),o=e.shape[e.shape.length-1],i=Pr({inputs:{x:e},backend:n,attrs:{shape:[a/o,o]}}).shape,u=new Xr("real",i,t),l=new Xr("imag",i,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],p=n.runWebGLProgram(u,c,"float32"),d=n.runWebGLProgram(l,c,"float32"),h=fr({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);const f=Pr({inputs:{x:h},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(f),f}const qr={kernelName:s.vwp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return jr(r,!1,n)}};class Kr{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Yr={kernelName:s.Uyb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new Kr(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}};class Qr{constructor(e){this.variableNames=["A"];const t=_e(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Zr{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=_e(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Jr={kernelName:s.eBW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:o}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,c]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[c,l],h=[c,l,o];(u||i)&&(null==ea&&(ea=document.createElement("canvas").getContext("2d")),ea.canvas.width=l,ea.canvas.height=c,ea.drawImage(a,0,0,l,c),a=ea.canvas);const f=n.makeTensorInfo(d,"int32");n.texData.get(f.dataId).usage=p.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),a);const m=(0,s.OBj)().getBool("WEBGL_PACK")?new Zr(h):new Qr(h),g=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),g}};let ea;const ta={kernelName:s.Qg5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return jr(r,!0,n)}};class na{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:o}=e;this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${s.D5U.GN(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}function ra(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=s.Wap.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let o=e;for(let s=0;s<a.length;s++){const{inSize:i,windowSize:u,outSize:l}=a[s];let c,p;c="mean"===n?0===s?new na({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},i):new na({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l}):new gn({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},n),p=o,o=r.runWebGLProgram(c,[o],t),p.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(p)}return o}class aa{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=je(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class sa{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=je(this.rank),a=De("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const o=`vec2(${s.slice(-2).join()})`,i=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function oa(e,t,n){const r=(0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sa(e.shape,t):new aa(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}const ia={kernelName:s.YoZ,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{reductionIndices:a,keepDims:o}=t,i=n,u=r.shape.length,l=s.D5U.EC(a,r.shape);let c=l;const p=s.Wap.getAxesPermutation(c,u),d=null!=p,h=i.shouldExecuteOnCPU([r]);let f=r;if(d){if(h){const e=i.texData.get(f.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=r.shape[p[e]];const n=Ce(e,r.shape,r.dtype,p,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=oa(r,p,i);c=s.Wap.getInnerMostAxes(c.length,u)}s.Wap.assertAxesAreInnerMostDims("max",c,u);const[m,g]=s.Wap.computeOutAndReduceShapes(f.shape,c);let y,x=m;if(o&&(x=s.Wap.expandShapeToKeepDim(m,l)),h){const e=i.texData.get(f.dataId).values,t=we(e,s.D5U.NA(g),x,r.dtype);y=i.makeTensorInfo(x,r.dtype),i.texData.get(y.dataId).values=t}else y=function(e,t,n,r){const a=s.D5U.NA(t),o=Pr({inputs:{x:e},attrs:{shape:[s.D5U.NA(e.shape)/a,a]},backend:r}),i=ra(o,e.dtype,"max",r),u=Pr({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),u}(f,g,x,i);return d&&i.disposeIntermediateTensorInfo(f),y}},ua={kernelName:s.mTV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;pe(a,"maxPool");const{filterSize:o,strides:i,pad:u,dimRoundingMode:l}=r;s.D5U.hu(s.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=s.Wap.computePool2DInfo(a.shape,o,i,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&s.D5U.cO(c.inShape,c.outShape))return dr({inputs:{x:a},backend:n});const p=new fn(c,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}},la={kernelName:s.GvW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o,output:i}=t,u=o;pe([o,i],"maxPoolBackprop");const{filterSize:l,strides:c,pad:p,dimRoundingMode:d}=r,h=s.Wap.computePool2DInfo(u.shape,l,c,1,p,d),f=new fn(h,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),g=new sn(h),y=n.runWebGLProgram(g,[a,m],u.dtype);return n.disposeIntermediateTensorInfo(m),y}},ca={kernelName:s.vFR,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:o,pad:i,includeBatchInIndex:u}=t,l=n;s.D5U.hu(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];s.D5U.hu(s.Wap.eitherStridesOrDilationsAreOne(o,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`));const p=s.Wap.computePool2DInfo(r.shape,a,o,c,i),[d,h]=function(e,t,n,r){let a=new fn(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new fn(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,u,p,l);return[d,h]}},pa={kernelName:s.q2K,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:o}=t,i=n,u=r.shape.length,l=s.D5U.EC(o,r.shape);let c=l;const p=s.Wap.getAxesPermutation(c,u),d=null!=p,h=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(d){if(h){const e=i.texData.get(m.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=r.shape[p[e]];const n=Ce(e,r.shape,r.dtype,p,t);m=i.makeTensorInfo(t,r.dtype),i.texData.get(m.dataId).values=n}else m=oa(r,p,i);f.push(m),c=s.Wap.getInnerMostAxes(c.length,u)}s.Wap.assertAxesAreInnerMostDims("sum",c,u);const[g,y]=s.Wap.computeOutAndReduceShapes(m.shape,c);let x=g;a&&(x=s.Wap.expandShapeToKeepDim(g,l));const b=function(e,t,n,r){const a=s.D5U.NA(t),o=Pr({inputs:{x:e},attrs:{shape:[s.D5U.NA(e.shape)/a,a]},backend:r}),i=ra(o,"float32","mean",r),u=Pr({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),u}(m,y,x,i);for(const e of f)i.disposeIntermediateTensorInfo(e);return b}};class da{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=je(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class ha{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=je(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Ae("rc",r),u=Ae("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,p="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${i[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const fa={kernelName:s.jQs,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:o}=n,i=(0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ha(r.shape,a,o):new da(r.shape,a,o);return t.runWebGLProgram(i,[r],r.dtype)}};class ma{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=s.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const ga="return a * b;",ya={kernelName:s.wYn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,o=s.Wap.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new ma("return areal * breal - aimag * bimag;",r.shape,a.shape),o=new ma("return areal * bimag + aimag * breal;",r.shape,a.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),c=fr({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[s,i]=Ie(r.shape,a.shape,e.values,t.values,o),u=n.makeTensorInfo(i,o);return n.texData.get(u.dataId).values=s,u}let i;return i=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new nt(ga,r.shape,a.shape):new et(ga,r.shape,a.shape),n.runWebGLProgram(i,[r,a],o)}},xa={kernelName:s.uv1,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{s.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:a}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=n,l=t,c=l.readSync(r.dataId),p=l.readSync(a.dataId),d=o,h=i,f=u;return s.GDt.GP(c,p,d,h,f)}},ba=s.GDt.qP,va={kernelName:s.cye,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{s.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:a}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=n,c=t,p=c.readSync(r.dataId),d=c.readSync(a.dataId),{selectedIndices:h,validOutputs:f}=ba(p,d,o,i,u,l);return[h,f]}},wa=s.GDt.pA,Ia={kernelName:s.W0H,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{s.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:r,scores:a}=e,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=n,c=t,p=c.readSync(r.dataId),d=c.readSync(a.dataId),h=o,f=i,m=u,g=l,{selectedIndices:y,selectedScores:x}=wa(p,d,h,f,m,g);return[y,x]}};class Na{constructor(e,t,n,r){this.variableNames=["Image"],this.outputShape=[];const a=e[1],o=e[2],i=Math.sin(t).toFixed(3),u=Math.cos(t).toFixed(3);this.outputShape=e;const[l,c]=s.Wap.getImageCenter(r,a,o),p=l.toFixed(3),d=c.toFixed(3);let h="";h="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${p}) * ${u} - (float(y) - ${d}) * ${i};\n          float coordYFloat = (float(x) - ${p}) * ${i} + (float(y) - ${d}) * ${u};\n          int coordX = int(round(coordXFloat + ${p}));\n          int coordY = int(round(coordYFloat + ${d}));\n          ${h}\n          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${a}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const ka={kernelName:s.b9H,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:o}=t,i=n,u=new Na(r.shape,a,s,o);return i.runWebGLProgram(u,[r],r.dtype)}},$a=gr("if (isnan(x)) return x;\n  return sin(x);\n"),Ca={kernelName:s.RQH,backendName:"webgl",kernelFunc:$a},Ta=gr("return x * x;"),Sa={kernelName:s.bK0,backendName:"webgl",kernelFunc:Ta},Ea="return (a - b) * (a - b);",Ra=yr({opSnippet:Ea,packedOpSnippet:Ea}),Da={kernelName:s._tC,backendName:"webgl",kernelFunc:Ra},Aa="return a - b;",_a=yr({opSnippet:Aa,packedOpSnippet:Aa,supportsComplex:!0,cpuKernelImpl:$e}),Oa={kernelName:s.Tr8,backendName:"webgl",kernelFunc:_a},Fa=gr("return tan(x);"),Ba=[vr,Ir,Nr,kr,Tr,Ar,mr,Vr,zr,Gr,qr,Yr,Jr,hr,ta,Mr,ia,ua,la,ca,pa,fa,ya,xa,va,Ia,Er,Dr,Lr,ka,Ca,Sa,Oa,Da,{kernelName:s.sEM,backendName:"webgl",kernelFunc:Fa},{kernelName:s.G3Y,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{perm:a}=t,s=n,o=r.shape.length,i=new Array(o);for(let e=0;e<i.length;e++)i[e]=r.shape[a[e]];let u;if(s.shouldExecuteOnCPU([r])){const e=s.texData.get(r.dataId).values,t=Ce(e,r.shape,r.dtype,a,i);u=s.makeTensorInfo(i,r.dtype),s.texData.get(u.dataId).values=t}else u=oa(r,a,s);return u}},{kernelName:s.kpP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;pe(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(s.dataId),{outputValues:i,outputShape:u,indices:l}=Te(o,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}}];for(const e of Ba)(0,s.wCN)(e)},8713:(e,t,n)=>{"use strict";n.d(t,{JL:()=>r,Zu:()=>a});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}numDataIds(){return s("numDataIds")}disposeData(e){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,n,r){return s("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:r,bias:a,activation:o,preluActivationWeights:i}){return s("fusedBatchMatMul")}slice(e,t,n){return s("slice")}stridedSlice(e,t,n,r){return s("stridedSlice")}unstack(e,t){return s("unstack")}reverse(e,t){return s("reverse")}concat(e,t){return s("concat")}neg(e){return s("neg")}add(e,t){return s("add")}addN(e){return s("addN")}subtract(e,t){return s("subtract")}multiply(e,t){return s("multiply")}realDivide(e,t){return s("realDivide")}floorDiv(e,t){return s("floorDiv")}sum(e,t){return s("sum")}prod(e,t){return s("prod")}unsortedSegmentSum(e,t,n){return s("unsortedSegmentSum")}argMin(e,t){return s("argMin")}argMax(e,t){return s("argMax")}equal(e,t){return s("equal")}notEqual(e,t){return s("notEqual")}less(e,t){return s("less")}lessEqual(e,t){return s("lessEqual")}greater(e,t){return s("greater")}greaterEqual(e,t){return s("greaterEqual")}logicalNot(e){return s("logicalNot")}logicalAnd(e,t){return s("logicalAnd")}logicalOr(e,t){return s("logicalOr")}where(e){return s("where")}select(e,t,n){return s("select")}topk(e,t,n){return s("topk")}min(e,t){return s("min")}minimum(e,t){return s("minimum")}mod(e,t){return s("mod")}max(e,t){return s("max")}maximum(e,t){return s("maximum")}all(e,t){return s("all")}any(e,t){return s("any")}squaredDifference(e,t){return s("squaredDifference")}ceil(e){return s("ceil")}floor(e){return s("floor")}round(e){return s("round")}sign(e){return s("sign")}isNaN(e){return s("isNaN")}isInf(e){return s("isInf")}isFinite(e){return s("isFinite")}pow(e,t){return s("pow")}exp(e){return s("exp")}expm1(e){return s("expm1")}softmax(e,t){return s("softmax")}log(e){return s("log")}log1p(e){return s("log1p")}sqrt(e){return s("sqrt")}rsqrt(e){return s("rsqrt")}square(e){return s("square")}reciprocal(e){return s("reciprocal")}relu(e){return s("relu")}relu6(e){return s("relu6")}prelu(e,t){return s("prelu")}elu(e){return s("elu")}eluDer(e,t){return s("eluDer")}selu(e){return s("selu")}int(e){return s("int")}clip(e,t,n){return s("clip")}abs(e){return s("abs")}complexAbs(e){return s("complexAbs")}sigmoid(e){return s("sigmoid")}softplus(e){return s("softplus")}sin(e){return s("sin")}cos(e){return s("cos")}tan(e){return s("tan")}asin(e){return s("asin")}acos(e){return s("acos")}atan(e){return s("atan")}atan2(e,t){return s("atan2")}sinh(e){return s("sinh")}cosh(e){return s("cosh")}tanh(e){return s("tanh")}asinh(e){return s("asinh")}acosh(e){return s("acosh")}atanh(e){return s("atanh")}erf(e){return s("erf")}step(e,t){return s("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:r,activation:a,preluActivationWeights:o}){return s("fusedConv2d")}conv2d(e,t,n){return s("conv2d")}conv2dDerInput(e,t,n){return s("conv2dDerInput")}conv2dDerFilter(e,t,n){return s("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:r,activation:a,preluActivationWeights:o}){return s("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return s("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return s("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return s("depthwiseConv2DDerFilter")}conv3d(e,t,n){return s("conv3d")}conv3dDerInput(e,t,n){return s("conv3dDerInput")}conv3dDerFilter(e,t,n){return s("conv3dDerFilter")}maxPool(e,t){return s("maxPool")}maxPoolBackprop(e,t,n,r){return s("maxPoolBackprop")}avgPool(e,t){return s("avgPool")}avgPoolBackprop(e,t,n){return s("avgPoolBackprop")}avgPool3d(e,t){return s("avgPool3d")}avgPool3dBackprop(e,t,n){return s("avgPool3dBackprop")}maxPool3d(e,t){return s("maxPool3d")}maxPool3dBackprop(e,t,n,r){return s("maxPool3dBackprop")}reshape(e,t){return s("reshape")}cast(e,t){return s("cast")}tile(e,t){return s("tile")}pad(e,t,n){return s("pad")}transpose(e,t){return s("transpose")}gather(e,t,n){return s("gather")}gatherND(e,t){return s("gatherND")}scatterND(e,t,n){return s("scatterND")}batchToSpaceND(e,t,n){return s("batchToSpaceND")}spaceToBatchND(e,t,n){return s("spaceToBatchND")}resizeBilinear(e,t,n,r){return s("resizeBilinear")}resizeBilinearBackprop(e,t,n){return s("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,r){return s("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return s("resizeNearestNeighborBackprop")}batchNorm(e,t,n,r,a,o){return s("batchNorm")}localResponseNormalization4D(e,t,n,r,a){return s("localResponseNormalization4D")}LRNGrad(e,t,n,r,a,o,i){return s("LRNGrad")}multinomial(e,t,n,r){return s("multinomial")}oneHot(e,t,n,r){return s("oneHot")}cumsum(e,t,n,r){return s("cumsum")}nonMaxSuppression(e,t,n,r,a){return s("nonMaxSuppression")}fft(e){return s("fft")}ifft(e){return s("ifft")}complex(e,t){return s("complex")}real(e){return s("real")}imag(e){return s("imag")}cropAndResize(e,t,n,r,a,o){return s("cropAndResize")}depthToSpace(e,t,n){return s("depthToSpace")}split(e,t,n){return s("split")}sparseToDense(e,t,n,r){return s("sparseToDense")}diag(e){return s("diag")}fill(e,t,n){return s("fill")}onesLike(e){return s("onesLike")}zerosLike(e){return s("zerosLike")}linspace(e,t,n){return s("linspace")}dispose(){return s("dispose")}}function s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},2055:(e,t,n)=>{"use strict";n.d(t,{GP:()=>i,qP:()=>u,pA:()=>l});var r=n(9494),a=n(6092);function s(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,o=!1;for(;r<a;){s=r+(a-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(a=s,o=!i)}return o?r:-r-1}(e,t,n||o)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function o(e,t){return e>t?1:e<t?-1:0}function i(e,t,n,r,a){return c(e,t,n,r,a,0).selectedIndices}function u(e,t,n,r,a,s){return c(e,t,n,r,a,0,!1,s,!0)}function l(e,t,n,r,a,s){return c(e,t,n,r,a,s,!0)}function c(e,t,n,o,i,u,l=!1,c=!1,f=!1){const m=[];for(let e=0;e<t.length;e++)t[e]>i&&m.push({score:t[e],boxIndex:e,suppressBeginIndex:0});m.sort(h);const g=u>0?-.5/u:0,y=[],x=[];for(;y.length<n&&m.length>0;){const t=m.pop(),{score:n,boxIndex:r,suppressBeginIndex:a}=t;if(n<i)break;let u=!1;for(let n=y.length-1;n>=a;--n){const a=p(e,r,y[n]);if(a>=o){u=!0;break}if(t.score=t.score*d(o,g,a),t.score<=i)break}t.suppressBeginIndex=y.length,u||(t.score===n?(y.push(r),x.push(t.score)):t.score>i&&s(m,t,h))}const b=y.length,v=n-b;c&&v>0&&(y.push(...new Array(v).fill(0)),x.push(...new Array(v).fill(0)));const w={selectedIndices:(0,a.R)(y,"int32")};return l&&(w.selectedScores=(0,a.R)(x,"float32")),f&&(w.validOutputs=(0,r.i)(b,"int32")),w}function p(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),d=Math.max(a[1],a[3]),h=(i-s)*(u-o),f=(p-l)*(d-c);if(h<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(o,c),y=Math.min(i,p),x=Math.min(u,d),b=Math.max(y-m,0)*Math.max(x-g,0);return b/(h+f-b)}function d(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function h(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}},8333:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(2657);function a(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const a=(0,r.f)(e,"int32"),s=(0,r.f)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const r=a.indexToLoc(n[t]),o=t*e.length;s.values.set(r,o)}return s.toTensor()}},7097:(e,t,n)=>{"use strict";n.d(t,{BV:()=>x,wv:()=>y});var r=n(8713),a=n(2885),s=n(5938),o=n(9121),i=n(6151),u=n(569);class l{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const a=this.backendTimer.time((()=>{r=n()}));for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{c(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function c(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,r,a,s){const o="number"==typeof r?u.oj(`${r}ms`,9):r.error,i=u.oj(e,25),l=t.rank,c=t.size,p=u.oj(t.shape.toString(),14);let d="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;d+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${i}\t%c${o}\t%c${l}D ${p}\t%c${c}\t%c${d}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var d=n(4077),h=n(747),f=n(9155);class m{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class g{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new m}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new l(this.backendInstance),!0}setupRegisteredKernels(){(0,i.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,i.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,a,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return g.nextTensorId++}nextVariableId(){return g.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t="float32",n={x:e},r={dtype:t};return x.runKernelFunc((n=>n.cast(e,t)),n,null,o.RF,r)}})),[],{}),t}runKernel(e,t,n,r,a){return this.runKernelFunc(null,t,null,e,n,r,a)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-a-s;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e,t,n,r,a,s,o){let u,l=[];const c=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const p=this.state.numBytes,d=this.state.numTensors;let h;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const f=(0,i.pI)(r,this.backendName);let m,g;if(null!=f)h=()=>{const e=this.backend.numDataIds();m=f.kernelFunc({inputs:t,attrs:a,backend:this.backend});const n=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,e,n);const i=n.map((({dataId:e,shape:t,dtype:n})=>this.makeTensorFromDataId(e,t,n)));if(c){let e=this.getTensorsForGradient(r,t,i);if(null==e){null==o&&(o=[]);const t=i.filter(((e,t)=>o[t]));e=(s||[]).slice().concat(t)}l=this.saveTensorsForBackwardMode(e)}return i};else{const t=e=>{c&&(l=e.map((e=>this.keep(this.clone(e)))))};h=()=>{const n=this.backend.numDataIds();m=this.tidy((()=>e(this.backend,t)));const a=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,a),a}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(g=this.profiler.profileKernel(r,t,(()=>h())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(g),u=g.outputs):u=h()})),c&&this.addTapeNode(r,t,u,n,l,a),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-p,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-d,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map((e=>null!=t[e]?t[e].shape:null)),outputShapes:u.map((e=>e.shape)),kernelTimeMs:g.timeMs,extraInfo:g.extraInfo}),Array.isArray(m)?u:u[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=(0,i.uk)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(u.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>a[t]));return s.concat(o)}return null}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&u.HD(e[0])&&(a=e.map((e=>f.YW(e))));const s=r.write(a,t,n),o=new d.es(t,n,s,this.nextTensorId());if(this.incRef(o,r),"string"===n){const e=this.state.tensorInfo.get(s),t=(0,u.Ub)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new d.es(t,n,e,this.nextTensorId());return this.incRef(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new d._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*u.bT(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof d._w||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},l=(0,i.uk)(e);null!=l&&(r=l.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=u.wT(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,h.Vu)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(u.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));u.hu(a instanceof d.es,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],o=s.inputs;for(const e in o){const n=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),i=!0,a[s.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,o[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=(0,u.p8)((0,u.NA)(e),"float32");return x.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const a=n((()=>i[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const o=s.inputs[t];if(!u.cO(a.shape,o.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=a;else{const t=e[o.id];e[o.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),b);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return u.hu(u.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;u.hu(t.every((e=>e instanceof d.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc(((r,a)=>(n=e(...t,a),u.hu(n.value instanceof d.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),u.hu(u.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];u.hu(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),u.hu(s.every((e=>e instanceof d.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return s.forEach(((e,t)=>{o[t]=()=>e})),o}))}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=(0,f.zO)(),n=await this.backend.time(e);return n.wallMs=(0,f.zO)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new m;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function y(){const e=(0,s.D)();if(null==e._tfengine){const t=new a.qA(e);e._tfengine=new g(t)}return(0,a.iG)(e._tfengine.ENV),(0,d.Vi)((()=>e._tfengine)),e._tfengine}g.nextTensorId=0,g.nextVariableId=0;const x=y();function b(e,t){const n={a:e,b:t};return x.runKernelFunc(((n,r)=>{const a=n.add(e,t);return r([e,t]),a}),n,null,o.mm)}},2885:(e,t,n)=>{"use strict";n.d(t,{qA:()=>a,OB:()=>s,iG:()=>i});var r=n(569);class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function s(){return o}let o=null;function i(e){o=e}},5938:(e,t,n)=>{"use strict";let r;function a(){if(null==r){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function s(e,t){const n=function(){const e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,{D:()=>a,R:()=>s})},4368:(e,t,n)=>{"use strict";n.d(t,{MX:()=>i,SR:()=>u,lu:()=>l,B9:()=>c,Cn:()=>p,N_:()=>d,jq:()=>h});var r=n(7097),a=n(2885),s=n(4077),o=n(747);function i(e){(0,a.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function u(){return r.BV}function l(e,t){return r.BV.tidy(e,t)}function c(e){(0,o.Vu)(e).forEach((e=>e.dispose()))}function p(e){return r.BV.keep(e)}function d(){return r.BV.backendName}function h(e,t,n=1){return r.BV.registerBackend(e,t,n)}(0,s.FZ)(i)},633:(e,t,n)=>{"use strict";n.d(t,{cb:()=>a});var r=n(7097);function a(e){return r.BV.customGrad(e)}},6853:(e,t,n)=>{"use strict";n.d(t,{SYM:()=>le.SY,VGw:()=>le.VG,SpW:()=>le.Sp,mm_:()=>le.mm,M2y:()=>le.M2,qw7:()=>le.qw,jMg:()=>le.jM,QCc:()=>le.QC,Oyi:()=>le.Oy,JhU:()=>le.Jh,xts:()=>le.xt,XLW:()=>le.XL,RFZ:()=>le.RF,gJX:()=>le.gJ,xnO:()=>le.xn,Zz9:()=>le.Zz,Eh3:()=>le.Eh,mhS:()=>le.mh,wUP:()=>le.wU,wm:()=>le.wm,x12:()=>le.x1,o2y:()=>le.o2,ik2:()=>le.ik,mc4:()=>le.mc,TR1:()=>le.TR,JLz:()=>ht.JL,cie:()=>le.ci,sL$:()=>le.sL,y7R:()=>le.y7,p4S:()=>le.p4,Vn9:()=>le.Vn,ekb:()=>le.ek,ZCY:()=>le.ZC,SX0:()=>le.SX,Omj:()=>le.Om,NEP:()=>le.NE,Y0y:()=>le.Y0,vwp:()=>le.vw,deh:()=>le.de,Uyb:()=>le.Uy,OR:()=>le.OR,eBW:()=>le.eB,sHE:()=>le.sH,_V0:()=>le._V,luS:()=>le.lu,Qg5:()=>le.Qg,iJz:()=>le.iJ,J_u:()=>le.J_,avt:()=>le.av,iWB:()=>le.iW,r7n:()=>le.r7,Zuw:()=>ht.Zu,ZbH:()=>le.Zb,kU:()=>le.kU,VfG:()=>le.Vf,YoZ:()=>le.Yo,mTV:()=>le.mT,GvW:()=>le.Gv,vFR:()=>le.vF,q2K:()=>le.q2,jQs:()=>le.jQ,wYn:()=>le.wY,uv1:()=>le.uv,cye:()=>le.cy,W0H:()=>le.W0,yQU:()=>le.yQ,lyA:()=>le.ly,o0g:()=>le.o0,xJR:()=>le.xJ,$HU:()=>le.$H,qkr:()=>le.qk,SbG:()=>le.Sb,HZH:()=>le.HZ,b9H:()=>le.b9,e07:()=>le.e0,bV0:()=>le.bV,oFR:()=>le.oF,a5O:()=>le.a5,i5y:()=>le.i5,RQH:()=>le.RQ,wYB:()=>le.w3,p2w:()=>le.p2,MRv:()=>le.MR,TQc:()=>le.TQ,FKq:()=>le.FK,bK0:()=>le.bK,_tC:()=>le._t,h8e:()=>le.h8,Tr8:()=>le.Tr,sEM:()=>le.sE,MIZ:()=>le.MI,esB:()=>Z.es,YDk:()=>Z.YD,G3Y:()=>le.G3,kpP:()=>le.kp,usg:()=>le.us,IHx:()=>be.IHx,Wap:()=>o,Xhn:()=>s,f3b:()=>be.f3b,d9v:()=>be.d9v,zoF:()=>be.zoF,Izb:()=>be.Izb,C2$:()=>r,hiC:()=>be.hiC,SRH:()=>ve.SR,OBj:()=>p.OB,DgJ:()=>be.DgJ,Qqt:()=>be.Qqt,hlL:()=>be.hlL,N_N:()=>ve.N_,BHj:()=>be.BHj,io:()=>a,CnY:()=>ve.Cn,GDt:()=>i,Fp7:()=>be.Fp7,dC7:()=>be.dC7,w6H:()=>be.w6H,jqO:()=>ve.jq,wCN:()=>ce.wC,XLQ:()=>be.XLQ,iD$:()=>be.iD$,XD2:()=>be.XD2,tPi:()=>be.tPi,kuN:()=>ge,XAC:()=>be.XAC,knu:()=>be.knu,luU:()=>be.luU,z4k:()=>xe.z4,XeE:()=>be.XeE,RRF:()=>be.RRF,odF:()=>be.odF,yXz:()=>be.yXz,lub:()=>ve.lu,p4s:()=>be.p4s,HHK:()=>be.HHK,x8V:()=>xe.x8,D5U:()=>ye,lls:()=>be.lls});var r={};n.r(r),n.d(r,{j:()=>c,t:()=>l});var a={};n.r(a),n.d(a,{MP:()=>ue,dI:()=>y,rM:()=>$,yB:()=>k});var s={};n.r(s),n.d(s,{n:()=>me});var o={};n.r(o),n.d(o,{ERF_A1:()=>Ve,ERF_A2:()=>Ue,ERF_A3:()=>ze,ERF_A4:()=>He,ERF_A5:()=>Ge,ERF_P:()=>We,PARALLELIZE_THRESHOLD:()=>Ee.g,SELU_SCALE:()=>Le,SELU_SCALEALPHA:()=>Pe,applyActivation:()=>Se.QH,assertAndGetBroadcastShape:()=>$e.$N,assertAxesAreInnerMostDims:()=>ke.lB,assertParamsConsistent:()=>Ce.o,assignToTypedArray:()=>Je,axesAreInnerMostDims:()=>ke.YB,calculateShapes:()=>Me.SU,castTensor:()=>at,combineLocations:()=>ke.Vh,complexWithEvenIndex:()=>Ye,complexWithOddIndex:()=>Qe,computeConv2DInfo:()=>Te.Ix,computeConv3DInfo:()=>Te.jw,computeDefaultPad:()=>Te.aO,computeDilation2DInfo:()=>Te.Rf,computeOptimalWindowSize:()=>Ee.A,computeOutAndReduceShapes:()=>ke.kz,computeOutShape:()=>Ce.N,computePool2DInfo:()=>Te.Xw,computePool3DInfo:()=>Te.pl,convertConv2DDataFormat:()=>Te.sl,eitherStridesOrDilationsAreOne:()=>Te.jT,expandShapeToKeepDim:()=>ke.rv,exponent:()=>tt,exponents:()=>et,getAxesPermutation:()=>ke.Q3,getBroadcastDims:()=>$e.XF,getComplexWithIndex:()=>Ze,getFusedBiasGradient:()=>Se.pf,getFusedDyActivation:()=>Se.Fr,getImageCenter:()=>Re,getInnerMostAxes:()=>ke.sY,getPermuted:()=>Ae,getReductionAxes:()=>$e.RR,getReshaped:()=>De,getReshapedPermuted:()=>_e,getSliceBeginCoords:()=>Oe,getSliceSize:()=>Fe,getUndoAxesPermutation:()=>ke.LJ,linspaceImpl:()=>ot,log:()=>je,mergeRealAndImagArrays:()=>qe,prepareAndValidate:()=>Be,prepareSplitSize:()=>nt.O,reshapeTensor:()=>st,segment_util:()=>rt,shouldFuse:()=>Se.uy,slice_util:()=>ge,splitRealAndImagArrays:()=>Ke,tupleValuesAreOne:()=>Te.I0,upcastType:()=>xe.x8,validateInput:()=>Me.b0,validateUpdateShape:()=>Me.l5,warn:()=>Xe});var i={};n.r(i),n.d(i,{GP:()=>it.GP,qP:()=>it.qP,pA:()=>it.pA,Vl:()=>lt,Gg:()=>ct,vN:()=>pt,ZA:()=>dt.Z});var u=n(7097);function l(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function c(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var p=n(2885);const d=(0,p.OB)();d.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),d.registerFlag("IS_BROWSER",(()=>c())),d.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),d.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),d.registerFlag("PROD",(()=>!1)),d.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>d.getBool("DEBUG"))),d.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),d.registerFlag("IS_TEST",(()=>!1));var h=n(1661),f=n(701),m=n(569);const g={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};function y(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,o=s.dtype,i=s.shape,u=(0,m.NA)(i);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const i=g[n.dtype],c=e.slice(a,a+u*i),p="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=I()),l=r(p)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*i}else if("string"===o){const t=(0,m.NA)(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=g[o],s=e.slice(a,a+u*r);if("float32"===o)l=new Float32Array(s);else if("int32"===o)l=new Int32Array(s);else if("bool"===o)l=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=(0,f.X)(e,i,"float32"),o=(0,f.X)(r,i,"float32");n[t]=(0,h.P)(a,o),a.dispose(),o.dispose()}}a+=u*r}"complex64"!==o&&(n[t]=(0,f.X)(l,i,o))}return n}const x="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function b(e){return x?Buffer.byteLength(e):new Blob([e]).size}function v(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function w(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:b(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:b(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function I(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const o=r[a],i=e[n[o>>10]+(1023&o)]+t[o>>10];s[a]=i}return new Float32Array(a)}}class N{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==N.instance&&(N.instance=new N),N.instance}static registerSaveRouter(e){N.getInstance().saveRouters.push(e)}static registerLoadRouter(e){N.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return N.getHandlers(e,"save")}static getLoadHandlers(e,t){return N.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?N.getInstance().loadRouters:N.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const k=e=>N.getSaveHandlers(e),$=(e,t)=>N.getLoadHandlers(e,t),C="tensorflowjs",T="models_store",S="model_info_store";function E(){if(!(0,p.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function R(e){const t=e.result;t.createObjectStore(T,{keyPath:"modelPath"}),t.createObjectStore(S,{keyPath:"modelPath"})}class D{constructor(e){if(this.indexedDB=E(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(C,1);r.onupgradeneeded=()=>R(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(T,"readonly"),r=t.objectStore(T).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=w(t),s=a.transaction(S,"readwrite");let o=s.objectStore(S);const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=a.transaction(T,"readwrite");const i=u.objectStore(T).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{o=s.objectStore(S);const t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(i.error)),t.onerror=e=>(a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}D.URL_SCHEME="indexeddb://";const A=e=>{return(0,p.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(D.URL_SCHEME)?(t=e.slice(D.URL_SCHEME.length),new D(t)):null;var t};N.registerSaveRouter(A),N.registerLoadRouter(A);class _{constructor(){this.indexedDB=E()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(C,1);n.onupgradeneeded=()=>R(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(S,"readonly"),s=a.objectStore(S).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(D.URL_SCHEME)?t.slice(D.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(C,1);r.onupgradeneeded=()=>R(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(S,"readwrite"),o=s.objectStore(S),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),s=()=>{u=a.transaction(T,"readwrite");const r=u.objectStore(T).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const O="/",F="tensorflowjs_models",B="info",M="model_topology",P="weight_specs",L="weight_data",W="model_metadata";function V(e){return{info:[F,e,B].join(O),topology:[F,e,M].join(O),weightSpecs:[F,e,P].join(O),weightData:[F,e,L].join(O),modelMetadata:[F,e,W].join(O)}}function U(e){const t=e.split(O);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(O)}class z{constructor(e){if(!(0,p.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=V(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=w(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(x)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,t.userDefinedMetadata=e.userDefinedMetadata}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(x){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}z.URL_SCHEME="localstorage://";const H=e=>{return(0,p.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(z.URL_SCHEME)?(t=e.slice(z.URL_SCHEME.length),new z(t)):null;var t};N.registerSaveRouter(H),N.registerLoadRouter(H);class G{constructor(){(0,m.hu)((0,p.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,m.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=F+O,n=O+B;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[U(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=V(e=(t=e).startsWith(z.URL_SCHEME)?t.slice(z.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class X{constructor(){this.managers={}}static getInstance(){return null==X.instance&&(X.instance=new X),X.instance}static registerManager(e,t){(0,m.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),(0,m.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=X.getInstance();(0,m.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class j{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if((0,p.OB)().get("IS_BROWSER")){(0,p.OB)().setPlatform("browser",new j);try{X.registerManager(z.URL_SCHEME,new G)}catch(e){}try{X.registerManager(D.URL_SCHEME,new _)}catch(e){}}let q;(0,p.OB)().get("IS_NODE")&&(0,p.OB)().setPlatform("node",new class{constructor(){this.util=n(1758),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,p.OB)().global.fetch?(0,p.OB)().global.fetch(e,t):(null==q&&(q=n(8352)),q(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var K=n(2657),Y=n(2271),Q=n(8723),Z=n(4077);(0,u.wv)();const J={buffer:K.f,cast:Y.p,clone:Q.d,print:function(e,t=!1){console.log(e.toString(t))}};function ee(e){return new Promise((e=>setTimeout(e))).then(e)}(0,Z.Vp)(J);class te{constructor(e){if(!(0,p.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(te.URL_SCHEME)&&(e=e.slice(te.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n},a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await ee((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await ee((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:w(e)}}}}function ne(e,t,n,r){!function(e){(0,m.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,m.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,m.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,m.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++a/e.length*(r-n);return t(o),s})),s))))}async function re(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,p.OB)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await ne(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await ne(a,t.onProgress,.5,1)}te.URL_SCHEME="downloads://",N.registerSaveRouter((e=>(0,p.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(te.URL_SCHEME)?function(e="model"){return new te(e)}(e.slice(te.URL_SCHEME.length)):null));class ae{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,m.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,p.OB)().platform.fetch,(0,m.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,m.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata,weightsManifest:n};t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:w(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,a=t.generatedBy,s=t.convertedBy,o=t.format,i=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,l;if(null!=r){const e=await this.loadWeights(r);[u,l]=e}const c={modelTopology:n,weightSpecs:u,weightData:l,userDefinedMetadata:i,generatedBy:a,convertedBy:s,format:o},p=t.modelInitializer;return p&&(c.modelInitializer=p),c}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const o=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(a+e+r);return this.weightUrlConverter&&o.push(...await Promise.all(i)),[s,v(await re(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function se(e){return null!=e.match(ae.URL_SCHEME_REGEX)}ae.URL_SCHEME_REGEX=/^https?:\/\//;const oe=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>se(e))):se(e),n)return ie(e,t)}return null};function ie(e,t){return new ae(e,t)}function ue(e,t){return ie(e,t)}N.registerSaveRouter(oe),N.registerLoadRouter(oe);var le=n(9121),ce=n(6151),pe=n(2668),de=n(3740),he=n(7852);let fe;const me=(0,pe.op)({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else{if(null==e.getContext)throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=(0,ce.pI)(le.eB,u.BV.backendName)){const n={pixels:e},r={numChannels:t};return u.BV.runKernel(le.eB,n,r)}const[i,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,p;if(o?c=e.getContext("2d").getImageData(0,0,i,l).data:r||n?c=e.data:(s||a)&&(null==fe&&(fe=document.createElement("canvas").getContext("2d")),fe.canvas.width=i,fe.canvas.height=l,fe.drawImage(e,0,0,i,l),c=fe.getImageData(0,0,i,l).data),4===t)p=new Int32Array(c);else{const e=i*l;p=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)p[n*t+e]=c[4*n+e]}return function(e,t,n){if((0,m.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=(0,de.C)(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,he.H)(e,t,r,n)}(p,[l,i,t],"int32")}});var ge=n(7650),ye=n(9155),xe=n(1221),be=n(6665),ve=n(4368),we=n(9494),Ie=n(6092),Ne=n(9640),ke=n(3591),$e=n(2200),Ce=n(398),Te=n(2582),Se=n(9323),Ee=n(5466);function Re(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function De(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Ae(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function _e(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Oe(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Fe(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}function Be(e,t){if(e.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[t.rank-1]>e.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[t.rank-1]} vs. ${e.rank}`);if(0===e.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const n=t.shape,r=n[n.length-1];let a=1;for(let e=0;e<n.length-1;++e)a*=n[e];const s=e.shape,o=n.slice();o.pop();let i=1;for(let t=r;t<e.rank;++t)i*=s[t],o.push(s[t]);const u=[...(0,m.e3)(e.shape).map((e=>e/i)),1].slice(0,r);return[o,a,i,u]}var Me=n(3028);const Pe=1.7580993408473768,Le=1.0507009873554805,We=.3275911,Ve=.254829592,Ue=-.284496736,ze=1.421413741,He=-1.453152027,Ge=1.061405429;function Xe(...e){(0,p.OB)().getBool("IS_TEST")||console.warn(...e)}function je(...e){(0,p.OB)().getBool("IS_TEST")||console.log(...e)}function qe(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Ke(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Ye(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Qe(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Ze(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Je(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function et(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function tt(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var nt=n(4099),rt=n(4931);function at(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();const t=(0,Ne.l)(e.shape),r=(0,Y.p)(e,"float32"),a=n.complex(r,t);return t.dispose(),r.dispose(),a}if(!(0,m.QB)(e.dtype,t))return u.BV.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){const r=n.real(e),a=(0,Y.p)(r,t);return r.dispose(),a}if("int32"===t)return n.int(e);if("bool"===t){const t=(0,we.i)(0,e.dtype),r=n.notEqual(e,t);return t.dispose(),r}throw new Error(`Error in Cast: failed to cast ${e.dtype} to ${t}`)}function st(e,t){return u.BV.makeTensorFromDataId(e.dataId,t,e.dtype)}function ot(e,t,n){const r=(t-e)/(n-1),a=(0,m.wT)(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return(0,Ie.R)(a,"float32")}var it=n(2055),ut=n(2676);function lt(e,t,n){const r=new Array(e.rank).fill(0),a=e.shape.slice();return t.map((t=>{const s=[...a];s[n]=t;const o=(0,ut.t)(e,r,s);return r[n]+=t,o}))}function ct(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=(0,K.f)(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r.toTensor()}function pt(e,t,n,r,a){const s=t[t.length-1],[o,i]=[e.length/s,s],u=(0,m.WP)(n,o*r),l=(0,m.WP)("int32",o*r);for(let t=0;t<o;t++){const n=t*i,a=e.subarray(n,n+i),s=[];for(let e=0;e<a.length;e++)s.push({value:a[e],index:e});s.sort(((e,t)=>t.value-e.value));const o=t*r,c=u.subarray(o,o+r),p=l.subarray(o,o+r);for(let e=0;e<r;e++)c[e]=s[e].value,p[e]=s[e].index}const c=t.slice();return c[c.length-1]=r,[(0,f.X)(u,c,n),(0,f.X)(l,c,"int32")]}var dt=n(8333),ht=n(8713),ft=n(4841),mt=n(1901);const gt={kernelName:le.SY,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ft.d)(e,(0,mt.N)((0,Y.p)(n,"float32"),-1))}}};var yt=n(1274),xt=n(7370),bt=n(3261),vt=n(248),wt=n(827);const It={kernelName:le.VG,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,vt.h)((0,Y.p)(n,"float32")),r=(0,bt._)((0,wt.l)((0,we.i)(1),t));return(0,xt.W)((0,yt.h)(e,r))}}}},Nt={kernelName:le.Sp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,bt._)((0,wt.l)((0,vt.h)((0,Y.p)(n,"float32")),1));return(0,yt.h)(e,t)}}}};var kt=n(4968),$t=n(5475);const Ct={kernelName:le.mm,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=$e.$N(n.shape,r.shape);return{a:()=>{let t=e;const r=$e.RR(n.shape,a);return r.length>0&&(t=(0,$t.S)(t,r)),(0,kt.X)(t,n.shape)},b:()=>{let t=e;const n=$e.RR(r.shape,a);return n.length>0&&(t=(0,$t.S)(t,n)),(0,kt.X)(t,r.shape)}}}},Tt={kernelName:le.Xz,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}};var St=n(6577);const Et={kernelName:le.sJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,St.P)(n)}}},Rt={kernelName:le.aJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,St.P)(n)}}},Dt={kernelName:le.M2,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,yt.h)(e,(0,bt._)((0,wt.l)((0,we.i)(1),(0,vt.h)((0,Y.p)(n,"float32")))))}}};var At=n(6407);const _t={kernelName:le.qw,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,bt._)((0,At.I)((0,we.i)(1),(0,vt.h)((0,Y.p)(n,"float32"))));return(0,yt.h)(e,t)}}}},Ot={kernelName:le.QC,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,$e.$N)(n.shape,r.shape);return{a:()=>{const t=(0,At.I)((0,vt.h)(n),(0,vt.h)(r));let s=(0,ft.d)(e,(0,yt.h)(r,t));const o=(0,$e.RR)(n.shape,a);return o.length>0&&(s=(0,$t.S)(s,o)),(0,kt.X)(s,n.shape)},b:()=>{const t=(0,At.I)((0,vt.h)(n),(0,vt.h)(r));let s=(0,xt.W)((0,ft.d)(e,(0,yt.h)(n,t)));const o=(0,$e.RR)(r.shape,a);return o.length>0&&(s=(0,$t.S)(s,o)),(0,kt.X)(s,r.shape)}}}},Ft={kernelName:le.jM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,yt.h)(e,(0,At.I)((0,vt.h)((0,Y.p)(n,"float32")),1))}}},Bt={kernelName:le.Oy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,yt.h)(e,(0,wt.l)((0,we.i)(1),(0,vt.h)((0,Y.p)(n,"float32"))))}}},Mt=(0,pe.op)({avgPool3dBackprop_:function(e,t,n,r,a=[1,1,1],s,o){const i=(0,de._1)(e,"dy","avgPool3dBackprop"),l=(0,de._1)(t,"input","avgPool3dBackprop");let c=i,p=l,d=!1;4===l.rank&&(d=!0,c=(0,kt.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),p=(0,kt.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),m.hu(5===c.rank,(()=>`Error in avgPool3dBackprop: dy must be rank 5 but got rank ${c.rank}.`)),m.hu(5===p.rank,(()=>`Error in avgPool3dBackprop: input must be rank 5 but got rank ${p.rank}.`)),m.hu(Te.jT(r,a),(()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`)),null!=o&&m.hu(m.GN(s),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`));const h={dy:c,input:p},f={filterSize:n,strides:r,dilations:a,pad:s,dimRoundingMode:o},g=u.BV.runKernelFunc((e=>{const t=Te.pl(p.shape,n,r,a,s,o);return e.avgPool3dBackprop(c,p,t)}),h,null,le.DC,f);return d?(0,kt.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Pt={kernelName:le._k,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,dilations:o,pad:i,dimRoundingMode:u}=n,l=null==o?[1,1,1]:o;return{x:()=>Mt(e,r,a,s,l,i,u)}}},Lt=(0,pe.op)({avgPoolBackprop_:function(e,t,n,r,a){const s=(0,de._1)(e,"dy","avgPoolBackprop"),o=(0,de._1)(t,"input","avgPoolBackprop");m.hu(o.rank===s.rank,(()=>`Rank of input (${o.rank}) does not match rank of dy (${s.rank})`));let i=o,l=s,c=!1;3===o.rank&&(c=!0,i=(0,kt.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=(0,kt.X)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),m.hu(4===l.rank,(()=>`Error in avgPoolBackprop: dy must be rank 4 but got rank ${l.rank}.`)),m.hu(4===i.rank,(()=>`Error in avgPoolBackprop: input must be rank 4 but got rank ${i.rank}.`));const p={dy:l,input:i},d={filterSize:n,strides:r,pad:a},h=u.BV.runKernelFunc((e=>{const t=Te.Xw(i.shape,n,r,1,a);return e.avgPoolBackprop(l,i,t)}),p,null,le.xt,d);return c?(0,kt.X)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Wt={kernelName:le.Jh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:o}=n;return{x:()=>Lt(e,r,a,s,o)}}};var Vt=n(8687);const Ut={kernelName:le.XL,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>(0,Vt.O)(e,a,!1,!1),b:()=>(0,Vt.O)(e,r,!0,!1)}:s&&!o?{a:()=>(0,Vt.O)(a,e,!1,!0),b:()=>(0,Vt.O)(r,e,!1,!1)}:{a:()=>(0,Vt.O)(a,e,!0,!0),b:()=>(0,Vt.O)(e,r,!0,!0)}:{a:()=>(0,Vt.O)(e,a,!1,!0),b:()=>(0,Vt.O)(r,e,!0,!1)}}};var zt=n(7918);const Ht={kernelName:le.zw,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>(0,zt.f)(e,r,a)}}},Gt={kernelName:le.Ly,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,o=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])o[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const i=[];for(let e=0;e<o.length;e++)o[e]>1&&i.push(e);return{x:()=>(0,$t.S)(e,i,!0)}}},Xt={kernelName:le.RF,gradFunc:e=>({x:()=>e.clone()})},jt={kernelName:le.gJ,gradFunc:e=>({x:()=>(0,St.P)(e)})};var qt=n(7630),Kt=n(624),Yt=n(2856),Qt=n(5912);const Zt={kernelName:le.xn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>(0,Qt.a)((0,Yt.H)((0,qt.b)(r,a),(0,Kt.z)(r,s)),e,(0,St.P)(e))}}};var Jt=n(8644);const en={kernelName:le.Eh,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=(0,m.EC)(a,t[0].shape)[0],o=r.map((e=>e[s]));return(0,Jt.V)(e,o,s).map((e=>()=>e))}};var tn=n(6013),nn=n(9832);const rn={kernelName:le.mh,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:o,pad:i,dataFormat:u}=n;return m.hu(Te.I0(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>(0,nn._)(r.shape,e,a,o,i,u),filter:()=>(0,tn.p)(r,e,a.shape,o,i,u)}}};var an=n(4794);const sn={kernelName:le.wm,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:o,dataFormat:i,dimRoundingMode:u}=n;return{dy:()=>(0,an.T)(e,a,s,o,i,1,u),filter:()=>(0,tn.p)(e,r,a.shape,s,o,i,u)}}},on=(0,pe.op)({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=(0,kt.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=(0,kt.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),m.hu(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),m.hu(5===o.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`)),m.hu(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),m.hu(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),m.hu(o.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${n[4]}).`));const i={x:s,dy:o},l={strides:r,pad:a,filterShape:n};return u.BV.runKernelFunc((e=>{const t=Te.jw(s.shape,n,r,1,a);return e.conv3dDerFilter(s,o,t)}),i,null,le.o2,l)}}),un=(0,pe.op)({conv3DBackpropInput_:function(e,t,n,r,a){m.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,o=t,i=!1;4===t.rank&&(i=!0,o=(0,kt.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const l=s[4],c=o.shape[4];m.hu(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),m.hu(5===o.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`)),m.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),m.hu(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),m.hu(c===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`));const p={dy:o,filter:n},d={pad:a,strides:r,inputShape:s},h=u.BV.runKernelFunc((e=>{const t=Te.jw(s,n.shape,r,1,a);return e.conv3dDerInput(o,n,t)}),p,null,le.ik,d);return i?(0,kt.X)(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),ln={kernelName:le.x1,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;m.hu((0,Te.I0)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[o,i]=t;return{x:()=>un(o.shape,e,i,a,s),filter:()=>on(o,e,i.shape,a,s)}}};var cn=n(9331);const pn={kernelName:le.mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ft.d)((0,xt.W)((0,cn.O)((0,Y.p)(n,"float32"))),e)}}};var dn=n(3254);const hn={kernelName:le.TR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ft.d)((0,dn.R)((0,Y.p)(n,"float32")),e)}}};var fn=n(7405),mn=n(9065);const gn={kernelName:le.iH,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:o}=n;return{x:()=>{const t=(0,ke.Q3)([a],r.rank);let n=(0,fn.z)(e,a,s,!o);return null!=t&&(n=(0,mn.p)(n,t)),n}}}};var yn=n(8098),xn=n(4375);const bn={kernelName:le.ci,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:o}=n,i=null==r?[1,1]:r;m.hu(Te.I0(i),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[u,l]=t;return m.hu(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),m.hu(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),m.hu(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),m.hu(Te.jT(a,i),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${i}'.`)),null!=o&&m.hu(m.GN(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`)),{x:()=>(0,xn.v)(u.shape,e,l,a,s,r,o),filter:()=>(0,yn.z)(u,e,l.shape,a,s,r,o)}}},vn={kernelName:le.p4,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},o={x:r,filter:a,dy:e};return{x:()=>u.BV.runKernel(le.ek,s,n),filter:()=>u.BV.runKernel(le.Vn,o,n)}}},wn={kernelName:le.ZC,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=$e.$N(n.shape,r.shape);return{a:()=>{const t=(0,yt.h)(e,(0,Y.p)(r,"float32")),s=$e.RR(n.shape,a);return s.length>0?(0,kt.X)((0,$t.S)(t,s),n.shape):t},b:()=>{let t=(0,ft.d)(e,(0,Y.p)(n,"float32"));const s=$e.RR(r.shape,a);s.length>0&&(t=(0,kt.X)((0,$t.S)(t,s),r.shape));const o=(0,vt.h)(r);return(0,xt.W)((0,yt.h)(t,(0,Y.p)(o,"float32")))}}}},In={kernelName:le.SX,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r=t=>t.eluDer(e,n),a={dy:e,y:n};return{x:()=>u.BV.runKernelFunc(r,a,null,le.HE)}}};var Nn=n(4842);const kn={kernelName:le.Om,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,ft.d)((0,Nn.Q)((0,xt.W)((0,vt.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,ft.d)(e,r)}}},$n={kernelName:le.NE,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ft.d)(e,n)}}},Cn={kernelName:le.Y0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ft.d)(e,(0,Nn.Q)(n))}}},Tn={kernelName:le.OR,gradFunc:e=>({x:()=>(0,St.P)(e)})},Sn={kernelName:le.je,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,$e.$N)(n.shape,r.shape);return{a:()=>{const t=(0,yt.h)(e,(0,Y.p)(r,"float32")),s=(0,$e.RR)(n.shape,a);return s.length>0?(0,kt.X)((0,$t.S)(t,s),n.shape):t},b:()=>{let t=(0,ft.d)(e,(0,Y.p)(n,"float32"));const s=(0,$e.RR)(r.shape,a);s.length>0&&(t=(0,kt.X)((0,$t.S)(t,s),r.shape));const o=(0,vt.h)(r);return(0,xt.W)((0,yt.h)(t,(0,Y.p)(o,"float32")))}}}};var En=n(2634),Rn=n(7501);const Dn={kernelName:le.sH,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,o,i]=t,u=null==i?(0,we.i)(1):i,l=(0,$e.RR)(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const p=(0,wt.l)(a,s),d=(0,ft.d)(e,u),h=(0,En.b)((0,At.I)(o,(0,we.i)(r))),f=(0,ft.d)((0,ft.d)((0,ft.d)(h,h),h),(0,we.i)(-.5));return{x:()=>1===s.rank?(0,kt.X)((0,ft.d)((0,ft.d)(e,(0,Rn.G)((0,kt.X)(h,[1,1,1,s.shape[0]]),c)),u),a.shape):(0,kt.X)((0,ft.d)((0,ft.d)(e,h),u),a.shape),mean:()=>{let e=(0,ft.d)((0,ft.d)(h,(0,we.i)(-1)),d);return 1===s.rank&&(e=(0,$t.S)(e,l)),(0,kt.X)(e,s.shape)},variance:()=>{let e=(0,ft.d)((0,ft.d)(f,p),d);return 1===s.rank&&(e=(0,$t.S)(e,l)),(0,kt.X)(e,s.shape)},scale:()=>{const t=(0,ft.d)(p,h);let n=(0,ft.d)(e,t);return 1===s.rank&&(n=(0,$t.S)(n,l)),(0,kt.X)(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=(0,$t.S)(t,l)),(0,kt.X)(t,s.shape)}}}},An=(0,pe.op)({unsortedSegmentSum_:function(e,t,n){const r=(0,de._1)(e,"x","unsortedSegmentSum"),a=(0,de._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,m.hu)((0,m.GN)(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},o={numSegments:n};return u.BV.runKernelFunc(((e,t)=>{const s=e.unsortedSegmentSum(r,a,n);return t([a]),s}),s,null,le.Qv,o)}}),_n={kernelName:le.qi,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,o=(0,m.EC)(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,i=t.slice(0,o),u=i.length,l=t.slice(s,t.length).slice(1),c=l.length,p=On(0,u),d=On(u+1,u+1+c),h=Fn([i,[n],l]),f=(0,kt.X)(e,h),m=(0,kt.X)(a,[n]),g=Fn([[u],p,d]),y=(0,mn.p)(f,g);let x=An(y,m,r.shape[o]);const b=(0,ke.LJ)(g);return x=(0,mn.p)(x,b),x},indices:()=>a}}};function On(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Fn(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Bn={kernelName:le.Ac,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,St.P)(n),b:()=>(0,St.P)(r)}}},Mn={kernelName:le.iJ,gradFunc:e=>({x:()=>(0,Y.p)(e,"float32")})},Pn={kernelName:le.av,gradFunc:e=>({x:()=>(0,St.P)(e)})},Ln={kernelName:le.iW,gradFunc:e=>({x:()=>(0,St.P)(e)})},Wn={kernelName:le.r7,gradFunc:e=>({x:()=>(0,St.P)(e)})},Vn={kernelName:le.kU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,yt.h)(e,(0,At.I)(n,1))}}},Un={kernelName:le.Zb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,yt.h)(e,(0,Y.p)(n,"float32"))}}},zn={kernelName:le.qC,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=(0,Nn.Q)(r);return(0,wt.l)(e,(0,ft.d)((0,$t.S)(e,a,!0),t))}}}},Hn=(0,pe.op)({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,o=.5){const i={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:o};return u.BV.runKernelFunc((i=>i.LRNGrad(n,e,t,r,a,s,o)),i,null,le.vI,l)}}),Gn={kernelName:le.eZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:o,alpha:i,beta:u}=n;return{x:()=>Hn(r,a,e,s,o,i,u)}}};var Xn=n(6477);function jn(e,t,n,r){return t.rank<n.rank&&(t=(0,kt.X)(t,ke.rv(t.shape,r))),e.rank<n.rank&&(e=(0,kt.X)(e,ke.rv(e.shape,r))),{x:()=>(0,ft.d)(e,(0,Y.p)((0,Xn.D)(n,t),e.dtype))}}const qn={kernelName:le.Yo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],o=jn(e,t[1],s,m.EC(a,s.shape));return{x:()=>o.x()}}};var Kn=n(6573);const Yn={kernelName:le.BM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,ft.d)(e,(0,Y.p)((0,qt.b)(n,r),"float32")),b:()=>(0,ft.d)(e,(0,Y.p)((0,Kn.d)(n,r),"float32"))}}},Qn=(0,pe.op)({maxPool3dBackprop_:function(e,t,n,r,a,s=[1,1,1],o,i){const l=(0,de._1)(e,"dy","maxPool3dBackprop"),c=(0,de._1)(t,"input","maxPool3dBackprop"),p=(0,de._1)(n,"output","maxPool3dBackprop");let d=l,h=c,f=p,g=!1;4===c.rank&&(g=!0,d=(0,kt.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=(0,kt.X)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),f=(0,kt.X)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),m.hu(5===d.rank,(()=>`Error in maxPool3dBackprop: dy must be rank 5 but got rank ${d.rank}.`)),m.hu(5===h.rank,(()=>`Error in maxPool3dBackprop: input must be rank 5 but got rank ${h.rank}.`)),m.hu(5===f.rank,(()=>`Error in maxPool3dBackprop: output must be rank 5 but got rank ${f.rank}.`)),m.hu(Te.jT(a,s),(()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`)),null!=i&&m.hu(m.GN(o),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${o}.`));const y={dy:d,input:h,output:f},x={filterSize:r,strides:a,dilations:s,pad:o,dimRoundingMode:i},b=u.BV.runKernelFunc((e=>{const t=Te.pl(h.shape,r,a,s,o,i);return e.maxPool3dBackprop(d,h,f,t)}),y,null,le.f,x);return g?(0,kt.X)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),Zn={kernelName:le.OA,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:o,dilations:i,pad:u,dimRoundingMode:l}=n,c=null==i?[1,1,1]:i;return{x:()=>Qn(e,r,a,s,o,c,u,l)}}},Jn=(0,pe.op)({maxPoolBackprop_:function(e,t,n,r,a,s,o){const i=(0,de._1)(e,"dy","maxPoolBackprop"),l=(0,de._1)(t,"input","maxPoolBackprop"),c=(0,de._1)(n,"output","maxPoolBackprop");m.hu(l.rank===i.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`)),m.hu(4===i.rank,(()=>`Error in maxPoolBackprop: dy must be rank 4 but got rank ${i.rank}.`)),m.hu(4===l.rank,(()=>`Error in maxPoolBackprop: input must be rank 4 but got rank ${l.rank}.`)),null!=o&&m.hu(m.GN(s),(()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${s}.`));const p={dy:i,input:l,output:c},d={filterSize:r,strides:a,pad:s,dimRoundingMode:o};return u.BV.runKernelFunc((e=>{const t=Te.Xw(l.shape,r,a,1,s,o);return e.maxPoolBackprop(i,l,c,t)}),p,null,le.Gv,d)}}),er={kernelName:le.mT,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:o,pad:i}=n;return{x:()=>Jn(e,r,a,s,o,i)}}},tr={kernelName:le.c1,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,o]=t,i=jn(e,o,s,m.EC(a,s.shape));return{x:()=>i.x()}}};var nr=n(636);const rr={kernelName:le.q8,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,ft.d)(e,(0,Y.p)((0,Kt.z)(n,r),"float32")),b:()=>(0,ft.d)(e,(0,Y.p)((0,nr.p)(n,r),"float32"))}}},ar={kernelName:le.jQ,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>(0,ut.t)(e,s,r.shape)}}};var sr=n(6943);const or={kernelName:le.Vb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,$e.$N)(n.shape,r.shape);return{a:()=>{const t=(0,$e.RR)(n.shape,a);return t.length>0?(0,kt.X)((0,$t.S)(e,t),n.shape):e},b:()=>{const t=(0,ft.d)(e,(0,xt.W)((0,sr.G)((0,yt.h)(n,r)))),s=(0,$e.RR)(r.shape,a);return s.length>0?(0,kt.X)((0,$t.S)(t,s),r.shape):t}}}},ir={kernelName:le.wY,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,$e.$N)(n.shape,r.shape);return{a:()=>{const t=(0,ft.d)(e,(0,Y.p)(r,"float32")),s=(0,$e.RR)(n.shape,a);return s.length>0?(0,kt.X)((0,$t.S)(t,s),n.shape):t},b:()=>{const t=(0,ft.d)(e,(0,Y.p)(n,"float32")),s=(0,$e.RR)(r.shape,a);return s.length>0?(0,kt.X)((0,$t.S)(t,s),r.shape):t}}}},ur={kernelName:le.L0,gradFunc:e=>({x:()=>(0,xt.W)(e)})},lr={kernelName:le.we,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,Ne.l)(n.shape,"float32")}}},cr={kernelName:le.qW,gradFunc:e=>({x:()=>(0,St.P)(e)})},pr={kernelName:le.ly,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>(0,ut.t)(e,s,r.shape)}}};var dr=n(2597),hr=n(3453);const fr={kernelName:le.pe,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,o=r,i=$e.$N(s.shape,o.shape);return{a:()=>{const t=(0,Y.p)(o,"float32");let n=(0,ft.d)(e,(0,ft.d)(t,(0,hr.s)(s,(0,wt.l)(t,(0,we.i)(1)))));const r=$e.RR(s.shape,i);return r.length>0&&(n=(0,$t.S)(n,r)),(0,kt.X)(n,s.shape)},b:()=>{const t=(0,nr.p)(s,0),n=(0,Qt.a)(t,(0,dr.c)(s),(0,St.P)(s));let r=(0,ft.d)(e,(0,ft.d)(a,n));const u=$e.RR(o.shape,i);return u.length>0&&(r=(0,$t.S)(r,u)),(0,kt.X)(r,o.shape)}}}},mr={kernelName:le.o0,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,nr.p)(n,0);return{x:()=>(0,Qt.a)(a,e,(0,ft.d)(e,r)),alpha:()=>{let t=(0,Qt.a)(a,(0,St.P)(e),(0,ft.d)(e,n));const s=(0,$e.RR)(r.shape,e.shape);return s.length>0&&(t=(0,$t.S)(t,s)),(0,kt.X)(t,r.shape)}}}},gr={kernelName:le.$H,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,yt.h)(e,(0,xt.W)((0,vt.h)(n)))}}},yr={kernelName:le.Sb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,ft.d)((0,Kt.z)(n,6),(0,mt.N)(n));return{x:()=>(0,ft.d)(e,(0,Y.p)(r,"float32"))}}},xr={kernelName:le.qk,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ft.d)(e,(0,Y.p)((0,mt.N)(n),"float32"))}}},br={kernelName:le.HZ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,kt.X)(e,n.shape)}}},vr={kernelName:le._Y,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a=t=>{const{alignCorners:a}=n;return t.resizeBilinearBackprop(e,r,a)},s={images:r};return{images:()=>u.BV.runKernelFunc(a,s,null,le.zb,n)}}},wr={kernelName:le.dp,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a=t=>{const{alignCorners:a}=n;return t.resizeNearestNeighborBackprop(e,r,a)},s={images:r};return{images:()=>u.BV.runKernelFunc(a,s,null,le.Hm,n)}}};var Ir=n(7486);const Nr={kernelName:le.mK,gradFunc:(e,t,n)=>{const{dims:r}=n,a=(0,m.EC)(r,e.shape);return{x:()=>(0,Ir.G)(e,a)}}},kr={kernelName:le.e0,gradFunc:e=>({x:()=>(0,St.P)(e)})},$r={kernelName:le.bV,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,xt.W)((0,yt.h)(e,(0,ft.d)((0,hr.s)(n,1.5),2)))}}};var Cr=n(8651);const Tr={kernelName:le.xc,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,Y.p)((0,St.P)(n),"float32"),t:()=>(0,ft.d)(e,(0,Y.p)(n,e.dtype)),e:()=>(0,ft.d)(e,(0,Y.p)((0,Cr.h)(n),e.dtype))}}},Sr={kernelName:le.oF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,nr.p)(n,(0,we.i)(0)),r=(0,we.i)(Pe),a=(0,we.i)(Le),s=(0,ft.d)(e,a),o=(0,ft.d)((0,ft.d)(e,r),(0,Nn.Q)((0,Y.p)(n,"float32")));return(0,Qt.a)(t,s,o)}}}},Er={kernelName:le.a5,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ft.d)(e,(0,ft.d)(n,(0,wt.l)((0,we.i)(1),n)))}}},Rr={kernelName:le.i5,gradFunc:e=>({x:()=>(0,St.P)(e)})};var Dr=n(173);const Ar={kernelName:le.RQ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ft.d)((0,Dr.m)((0,Y.p)(n,"float32")),e)}}};var _r=n(2699);const Or={kernelName:le.w3,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ft.d)((0,_r.f)((0,Y.p)(n,"float32")),e)}}};var Fr=n(9682);const Br={kernelName:le.p2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,o=r.shape,[i,u]=(0,ge.parseSliceParams)(r,a,s),l=[];for(let t=0;t<e.rank;t++)l.push([i[t],o[t]-i[t]-u[t]]);return{x:()=>(0,Fr.v)(e,l)}}},Mr={kernelName:le.Gc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=(0,ft.d)(e,r);return{logits:()=>(0,wt.l)(s,(0,ft.d)((0,$t.S)(s,[a],!0),r))}}};var Pr=n(625);const Lr={kernelName:le.MR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ft.d)(e,(0,Pr.X)(n))}}};var Wr=n(8441);const Vr={kernelName:le.TQ,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>(0,Wr.E)(e,r,a)}}};var Ur=n(6884);const zr={kernelName:le.L8,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>(0,Ur.z)(e,r)}}},Hr={kernelName:le.FK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,yt.h)(e,(0,ft.d)((0,bt._)((0,Y.p)(n,"float32")),2))}}},Gr={kernelName:le.bK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ft.d)(e,(0,ft.d)((0,Y.p)(n,"float32"),2))}}},Xr={kernelName:le._t,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,we.i)(2);return{a:()=>(0,ft.d)(e,(0,ft.d)(a,(0,wt.l)(n,r))),b:()=>(0,ft.d)(e,(0,ft.d)(a,(0,wt.l)(r,n)))}}},jr={kernelName:le.h8,gradFunc:e=>({x:()=>(0,St.P)(e)})},qr={kernelName:le.Tr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=$e.$N(n.shape,r.shape);return{a:()=>{let t=e;const r=$e.RR(n.shape,a);return r.length>0&&(t=(0,$t.S)(t,r)),(0,kt.X)(t,n.shape)},b:()=>{let t=e;const n=$e.RR(r.shape,a);return n.length>0&&(t=(0,$t.S)(t,n)),(0,kt.X)((0,xt.W)(t),r.shape)}}}};var Kr=n(4917);const Yr={kernelName:le.GB,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;(0,m.EC)(s,r.shape).forEach((e=>{a[e]=1}));const o=(0,kt.X)(e,a),i=(0,ft.d)(o,(0,Kr.i)(r.shape,"float32"));return{x:()=>i}}},Qr={kernelName:le.sE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,yt.h)(e,(0,vt.h)((0,Dr.m)(n)))}}},Zr={kernelName:le.MI,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,ft.d)((0,wt.l)((0,we.i)(1),(0,vt.h)(n)),e)}}},Jr={kernelName:le.n9,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=(0,St.P)(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=(0,At.I)(t,(0,ut.t)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=(0,At.I)(t,(0,ut.t)(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let o=0;o<a[2];++o)t=(0,At.I)(t,(0,ut.t)(e,[n*r.shape[0],s*r.shape[1],o*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let o=0;o<a[2];++o)for(let i=0;i<a[3];++i)t=(0,At.I)(t,(0,ut.t)(e,[n*r.shape[0],s*r.shape[1],o*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},ea={kernelName:le.G3,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=ke.LJ(a);return{x:()=>(0,mn.p)(e,s)}}};var ta=n(2991);const na={kernelName:le.To,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>(0,ta.k)(e,a)}}};var ra=n(1300),aa=n(4926),sa=n(632);const oa=[gt,It,Nt,Ct,Tt,Et,Rt,Dt,_t,Ot,Ft,Bt,Pt,Wt,Ut,Ht,Gt,Xt,jt,Zt,en,sn,rn,ln,pn,hn,gn,bn,vn,wn,In,kn,$n,Cn,Sn,Tn,Dn,_n,Bn,Mn,Pn,Ln,Wn,Vn,Un,zn,Gn,qn,qn,Yn,Zn,er,tr,rr,ar,or,ir,ur,lr,cr,pr,pr,fr,mr,gr,yr,xr,br,vr,wr,Nr,kr,$r,Tr,Sr,Er,Rr,Ar,Or,Br,Mr,Lr,Vr,Vr,zr,zr,Hr,Xr,Gr,jr,qr,Yr,Qr,Zr,Jr,ea,na,{kernelName:le.Qv,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,sa.g)(t,(0,St.P)(t)),r=(0,aa.I)(e,n);let a=(0,qt.b)(t,(0,we.i)(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=(0,ra.d)(a,e+1);a=(0,Yt.H)(a,(0,Kr.i)(r.shape,"bool"));const o=(0,St.P)(r);return(0,Qt.a)(a,r,o)}(e,n)}}},{kernelName:le.Ru,gradFunc:e=>({x:()=>(0,St.P)(e)})}];for(const e of oa)(0,ce.Li)(e);var ia=n(6235);Z.es.prototype.abs=function(){return this.throwIfDisposed(),(0,ia.W)(this)};var ua=n(7839);Z.es.prototype.acos=function(){return this.throwIfDisposed(),(0,ua.K)(this)};var la=n(1470);Z.es.prototype.acosh=function(){return this.throwIfDisposed(),(0,la._)(this)};var ca=n(4513),pa=n(5228),da=n(5265);const ha=(0,pe.op)({addStrict_:function(e,t){(0,ve.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,de._1)(e,"a","addStrict"),r=(0,de._1)(t,"b","addStrict");return m.k5(n.shape,r.shape,"Error in addStrict: "),(0,At.I)(n,r)}}),fa=(0,pe.op)({divStrict_:function(e,t){(0,ve.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,de._1)(e,"a","div"),r=(0,de._1)(t,"b","div");return m.k5(n.shape,r.shape,"Error in divideStrict: "),(0,yt.h)(n,r)}}),ma=(0,pe.op)({maximumStrict_:function(e,t){(0,ve.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,de._1)(e,"a","maximumStrict"),r=(0,de._1)(t,"b","maximumStrict");return m.k5(n.shape,r.shape,"Error in maximumStrict: "),(0,sa.g)(n,r)}}),ga=(0,pe.op)({minimumStrict_:function(e,t){(0,ve.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,de._1)(e,"a","minimumStrict"),r=(0,de._1)(t,"b","minimumStrict");return m.k5(n.shape,r.shape,"Error in minimumStrict: "),(0,ca.L)(n,r)}}),ya=(0,pe.op)({modStrict_:function(e,t){(0,ve.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,de._1)(e,"a","modStrict"),r=(0,de._1)(t,"b","modStrict");return m.k5(n.shape,r.shape,"Error in modStrict: "),(0,pa.w)(n,r)}}),xa=(0,pe.op)({mulStrict_:function(e,t){(0,ve.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,de._1)(e,"a","mul"),r=(0,de._1)(t,"b","mul");return m.k5(n.shape,r.shape,"Error in multiplyStrict: "),(0,ft.d)(n,r)}}),ba=(0,pe.op)({powStrict_:function(e,t){return(0,ve.MX)("strict variants of ops have been deprecated and will be removed in future"),m.k5(e.shape,t.shape,"Error in powStrict: "),(0,hr.s)(e,t)}}),va=(0,pe.op)({squaredDifferenceStrict_:function(e,t){(0,ve.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,de._1)(e,"a","squaredDifferenceStrict"),r=(0,de._1)(t,"b","squaredDifferenceStrict");return m.k5(n.shape,r.shape,"Error in squaredDifferenceStrict: "),(0,da.$)(n,r)}}),wa=(0,pe.op)({subStrict_:function(e,t){(0,ve.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,de._1)(e,"a","subStrict"),r=(0,de._1)(t,"b","subStrict");return m.k5(n.shape,r.shape,"Error in subStrict: "),(0,wt.l)(n,r)}});Z.es.prototype.addStrict=function(e){return this.throwIfDisposed(),ha(this,e)},Z.es.prototype.add=function(e){return this.throwIfDisposed(),(0,At.I)(this,e)};var Ia=n(781);Z.es.prototype.all=function(e,t){return this.throwIfDisposed(),(0,Ia.$)(this,e,t)};var Na=n(2998);Z.es.prototype.any=function(e,t){return this.throwIfDisposed(),(0,Na.Y)(this,e,t)};var ka=n(47);Z.es.prototype.argMax=function(e){return this.throwIfDisposed(),(0,ka.N)(this,e)};var $a=n(7394);Z.es.prototype.argMin=function(e){return this.throwIfDisposed(),(0,$a.v)(this,e)},Z.es.prototype.asScalar=function(){return this.throwIfDisposed(),(0,m.hu)(1===this.size,(()=>"The array must have only 1 element.")),(0,kt.X)(this,[])},Z.es.prototype.asType=function(e){return this.throwIfDisposed(),(0,Y.p)(this,e)},Z.es.prototype.as1D=function(){return this.throwIfDisposed(),(0,kt.X)(this,[this.size])},Z.es.prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,kt.X)(this,[e,t])},Z.es.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,kt.X)(this,[e,t,n])},Z.es.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),(0,kt.X)(this,[e,t,n,r])},Z.es.prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),(0,kt.X)(this,[e,t,n,r,a])};var Ca=n(2421);Z.es.prototype.asin=function(){return this.throwIfDisposed(),(0,Ca.Z)(this)};var Ta=n(1891);Z.es.prototype.asinh=function(){return this.throwIfDisposed(),(0,Ta.V)(this)};var Sa=n(7037);Z.es.prototype.atan=function(){return this.throwIfDisposed(),(0,Sa.z)(this)};var Ea=n(9812);Z.es.prototype.atan2=function(e){return this.throwIfDisposed(),(0,Ea.f)(this,e)};var Ra=n(369);Z.es.prototype.atanh=function(){return this.throwIfDisposed(),(0,Ra.C)(this)};var Da=n(5176);Z.es.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),(0,Da.w)(this,e,t,n,r)},Z.es.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,Wr.E)(this,e,t)};var Aa=n(7505);Z.es.prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),(0,Aa.t)(this,e,t,n,r,a)};var _a=n(8247);Z.es.prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,_a.U)(this,e)},Z.es.prototype.cast=function(e){return this.throwIfDisposed(),(0,Y.p)(this,e)};var Oa=n(6825);Z.es.prototype.ceil=function(){return this.throwIfDisposed(),(0,Oa.m)(this)};var Fa=n(2279);Z.es.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,Fa.i)(this,e,t)},Z.es.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Z.es&&(e=[e]),(0,Ur.z)([this,...e],t)};var Ba=n(1355);Z.es.prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,Ba.P)(this,e,t,n,r,a,s)};var Ma=n(1405);Z.es.prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),(0,Ma.b)(this,e,t,n,r,a)},Z.es.prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,an.T)(this,e,t,n,r,a,s)},Z.es.prototype.cos=function(){return this.throwIfDisposed(),(0,Dr.m)(this)},Z.es.prototype.cosh=function(){return this.throwIfDisposed(),(0,_r.f)(this)},Z.es.prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,fn.z)(this,e,t,n)};var Pa=n(9112);Z.es.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,Pa.n)(this,e,t)};var La=n(4718);Z.es.prototype.depthwiseConv2D=function(e,t,n,r,a,s){return(0,ve.MX)("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),(0,La.B)(this,e,t,n,r,a,s)},Z.es.prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,La.B)(this,e,t,n,r,a,s)};var Wa=n(557);Z.es.prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),(0,Wa.W)(this,e,t,n,r,a)};var Va=n(9322);Z.es.prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,Va.N)(this,e)},Z.es.prototype.divStrict=function(e){return this.throwIfDisposed(),fa(this,e)},Z.es.prototype.div=function(e){return this.throwIfDisposed(),(0,yt.h)(this,e)};const Ua=(0,pe.op)({dot_:function(e,t){const n=(0,de._1)(e,"t1","dot"),r=(0,de._1)(t,"t2","dot");m.hu(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(m.hu(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=(0,kt.X)(n,[1,-1]),t=(0,kt.X)(r,[-1,1]),a=(0,Vt.O)(e,t);return(0,kt.X)(a,[])}if(1===n.rank&&2===r.rank){const e=(0,kt.X)(n,[1,-1]),t=(0,kt.X)(r,[r.shape[0],r.shape[1]]),a=(0,Vt.O)(e,t);return(0,kt.X)(a,[a.size])}if(2===n.rank&&1===r.rank){const e=(0,kt.X)(r,[-1,1]),t=(0,Vt.O)(n,e);return(0,kt.X)(t,[t.size])}{const e=(0,kt.X)(r,[r.shape[0],r.shape[1]]);return(0,Vt.O)(n,e)}}});Z.es.prototype.dot=function(e){return this.throwIfDisposed(),Ua(this,e)};var za=n(3233);Z.es.prototype.elu=function(){return this.throwIfDisposed(),(0,za.p)(this)};var Ha=n(6500);const Ga=(0,pe.op)({equalStrict_:function(e,t){(0,ve.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,de._1)(e,"a","equalStrict"),r=(0,de._1)(t,"b","equalStrict");return(0,m.k5)(n.shape,r.shape,"Error in equalStrict: "),(0,Xn.D)(n,r)}}),Xa=(0,pe.op)({greaterEqualStrict_:function(e,t){(0,ve.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,de._1)(e,"a","greaterEqualStrict"),r=(0,de._1)(t,"b","greaterEqualStrict");return(0,m.k5)(n.shape,r.shape,"Error in greaterEqualStrict: "),(0,qt.b)(n,r)}}),ja=(0,pe.op)({greaterStrict_:function(e,t){(0,ve.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,de._1)(e,"a","greaterStrict"),r=(0,de._1)(t,"b","greaterStrict");return(0,m.k5)(n.shape,r.shape,"Error in greaterStrict: "),(0,nr.p)(n,r)}}),qa=(0,pe.op)({lessEqualStrict_:function(e,t){(0,ve.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,de._1)(e,"a","lessEqualStrict"),r=(0,de._1)(t,"b","lessEqualStrict");return(0,m.k5)(n.shape,r.shape,"Error in lessEqualStrict: "),(0,Kt.z)(n,r)}}),Ka=(0,pe.op)({lessStrict_:function(e,t){(0,ve.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,de._1)(e,"a","lessStrict"),r=(0,de._1)(t,"b","lessStrict");return(0,m.k5)(n.shape,r.shape,"Error in lessStrict: "),(0,Kn.d)(n,r)}}),Ya=(0,pe.op)({notEqualStrict_:function(e,t){(0,ve.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,de._1)(e,"a","notEqualStrict"),r=(0,de._1)(t,"b","notEqualStrict");return(0,m.k5)(n.shape,r.shape,"Error in notEqualStrict: "),(0,Ha.Q)(n,r)}});Z.es.prototype.equalStrict=function(e){return this.throwIfDisposed(),Ga(this,e)},Z.es.prototype.equal=function(e){return this.throwIfDisposed(),(0,Xn.D)(this,e)};var Qa=n(4650);Z.es.prototype.erf=function(){return this.throwIfDisposed(),(0,Qa.q)(this)},Z.es.prototype.exp=function(){return this.throwIfDisposed(),(0,Nn.Q)(this)},Z.es.prototype.expandDims=function(e){return this.throwIfDisposed(),(0,ra.d)(this,e)};var Za=n(3426);Z.es.prototype.expm1=function(){return this.throwIfDisposed(),(0,Za.t)(this)};var Ja=n(7020);Z.es.prototype.fft=function(){return this.throwIfDisposed(),(0,Ja.k)(this)},Z.es.prototype.flatten=function(){return this.throwIfDisposed(),(0,kt.X)(this,[this.size])},Z.es.prototype.floor=function(){return this.throwIfDisposed(),(0,sr.G)(this)};var es=n(9165);Z.es.prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,es.q)(this,e)},Z.es.prototype.gather=function(e,t){return this.throwIfDisposed(),(0,aa.I)(this,e,t)},Z.es.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),Xa(this,e)},Z.es.prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,qt.b)(this,e)},Z.es.prototype.greaterStrict=function(e){return this.throwIfDisposed(),ja(this,e)},Z.es.prototype.greater=function(e){return this.throwIfDisposed(),(0,nr.p)(this,e)};var ts=n(8447);Z.es.prototype.ifft=function(){return this.throwIfDisposed(),(0,ts.S)(this)};var ns=n(4415);Z.es.prototype.irfft=function(){return this.throwIfDisposed(),(0,ns.w)(this)};const rs=(0,pe.op)({isFinite_:function(e){const t=(0,de._1)(e,"x","isFinite"),n={x:t};return u.BV.runKernelFunc((e=>e.isFinite(t)),n,null,le.av)}});Z.es.prototype.isFinite=function(){return this.throwIfDisposed(),rs(this)};const as=(0,pe.op)({isInf_:function(e){const t=(0,de._1)(e,"x","isInf"),n={x:t};return u.BV.runKernelFunc((e=>e.isInf(t)),n,null,le.iW)}});Z.es.prototype.isInf=function(){return this.throwIfDisposed(),as(this)};const ss=(0,pe.op)({isNaN_:function(e){const t=(0,de._1)(e,"x","isNaN"),n={x:t};return u.BV.runKernelFunc((e=>e.isNaN(t)),n,null,le.r7)}});Z.es.prototype.isNaN=function(){return this.throwIfDisposed(),ss(this)};var os=n(9133);Z.es.prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,os.h)(this,e)},Z.es.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),qa(this,e)},Z.es.prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,Kt.z)(this,e)},Z.es.prototype.lessStrict=function(e){return this.throwIfDisposed(),Ka(this,e)},Z.es.prototype.less=function(e){return this.throwIfDisposed(),(0,Kn.d)(this,e)};var is=n(9648);Z.es.prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),(0,is.G)(this,e,t,n,r)};var us=n(633),ls=n(3694);const cs=(0,pe.op)({logSigmoid_:function(e){const t=(0,de._1)(e,"x","logSigmoid");return(0,us.cb)((e=>({value:(0,xt.W)((0,ls.W)((0,xt.W)(e))),gradFunc:t=>(0,ft.d)(t,(0,Pr.X)((0,xt.W)(e)))})))(t)}});Z.es.prototype.logSigmoid=function(){return this.throwIfDisposed(),cs(this)};var ps=n(1510);Z.es.prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,ps.C)(this,e)};var ds=n(1391);Z.es.prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,ds.l)(this,e,t)},Z.es.prototype.log=function(){return this.throwIfDisposed(),(0,dr.c)(this)};var hs=n(7474);Z.es.prototype.log1p=function(){return this.throwIfDisposed(),(0,hs.K)(this)},Z.es.prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,Yt.H)(this,e)},Z.es.prototype.logicalNot=function(){return this.throwIfDisposed(),(0,Cr.h)(this)};var fs=n(5750);Z.es.prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,fs.K)(this,e)};const ms=(0,pe.op)({logicalXor_:function(e,t){const n=(0,de._1)(e,"a","logicalXor","bool"),r=(0,de._1)(t,"b","logicalXor","bool");return(0,$e.$N)(n.shape,r.shape),(0,Yt.H)((0,fs.K)(e,t),(0,Cr.h)((0,Yt.H)(e,t)))}});Z.es.prototype.logicalXor=function(e){return this.throwIfDisposed(),ms(this,e)},Z.es.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,Vt.O)(this,e,t,n)};var gs=n(1174);Z.es.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),(0,gs._)(this,e,t,n,r)};var ys=n(3307);Z.es.prototype.max=function(e,t){return this.throwIfDisposed(),(0,ys.F)(this,e,t)},Z.es.prototype.maximumStrict=function(e){return this.throwIfDisposed(),ma(this,e)},Z.es.prototype.maximum=function(e){return this.throwIfDisposed(),(0,sa.g)(this,e)};var xs=n(5130);Z.es.prototype.mean=function(e,t){return this.throwIfDisposed(),(0,xs.J)(this,e,t)};var bs=n(5735);Z.es.prototype.min=function(e,t){return this.throwIfDisposed(),(0,bs.V)(this,e,t)},Z.es.prototype.minimumStrict=function(e){return this.throwIfDisposed(),ga(this,e)},Z.es.prototype.minimum=function(e){return this.throwIfDisposed(),(0,ca.L)(this,e)};var vs=n(1483);Z.es.prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,vs.V)(this,e,t)},Z.es.prototype.modStrict=function(e){return this.throwIfDisposed(),ya(this,e)},Z.es.prototype.mod=function(e){return this.throwIfDisposed(),(0,pa.w)(this,e)},Z.es.prototype.mulStrict=function(e){return this.throwIfDisposed(),xa(this,e)},Z.es.prototype.mul=function(e){return this.throwIfDisposed(),(0,ft.d)(this,e)},Z.es.prototype.neg=function(){return this.throwIfDisposed(),(0,xt.W)(this)};var ws=n(3561);Z.es.prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,ws.K)(this,e,t,n)},Z.es.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),Ya(this,e)},Z.es.prototype.notEqual=function(e){return this.throwIfDisposed(),(0,Ha.Q)(this,e)};var Is=n(6708);Z.es.prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),(0,Is.l)(this,e,t,n)};var Ns=n(7846);Z.es.prototype.onesLike=function(){return this.throwIfDisposed(),(0,Ns.J)(this)},Z.es.prototype.pad=function(e,t){return this.throwIfDisposed(),(0,Fr.v)(this,e,t)};const ks=(0,pe.op)({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const o=(0,de._1)(e,"x","maxPool");let i=o,u=!1;3===o.rank&&(u=!0,i=(0,kt.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),m.hu(Te.jT(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const l=Te.Xw(i.shape,t,s,a,r),c=[l.dilationHeight,l.dilationWidth];let p;p="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[h,f]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=a.map(((e,t)=>e+o[t]));return[t.map(((e,t)=>[r[t],i[t]])),t.map(((e,t)=>[0,o[t]]))]}([l.inHeight,l.inWidth],c,p),g=d?r:"valid",y=d?i:(0,zt.f)(i,c,h),x=("avg"===n?()=>(0,Da.w)(y,t,s,g):()=>(0,gs._)(y,t,s,g))(),b=d?x:(0,Wr.E)(x,c,f);return u?(0,kt.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});Z.es.prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),ks(this,e,t,n,r,a)},Z.es.prototype.powStrict=function(e){return this.throwIfDisposed(),ba(this,e)},Z.es.prototype.pow=function(e){return this.throwIfDisposed(),(0,hr.s)(this,e)};var $s=n(8151);Z.es.prototype.prelu=function(e){return this.throwIfDisposed(),(0,$s.A)(this,e)};var Cs=n(9451);Z.es.prototype.prod=function(e,t){return this.throwIfDisposed(),(0,Cs.W)(this,e,t)};var Ts=n(9036);Z.es.prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Ts.M)(this)};var Ss=n(7409);Z.es.prototype.relu=function(){return this.throwIfDisposed(),(0,Ss.U)(this)};var Es=n(3582);Z.es.prototype.relu6=function(){return this.throwIfDisposed(),(0,Es.b)(this)},Z.es.prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,kt.X)(this,e.shape)},Z.es.prototype.reshape=function(e){return this.throwIfDisposed(),(0,kt.X)(this,e)};var Rs=n(3305);Z.es.prototype.resizeBilinear=function(e,t){return this.throwIfDisposed(),(0,Rs.I)(this,e,t)};var Ds=n(5098);Z.es.prototype.resizeNearestNeighbor=function(e,t){return this.throwIfDisposed(),(0,Ds.j)(this,e,t)},Z.es.prototype.reverse=function(e){return this.throwIfDisposed(),(0,Ir.G)(this,e)};var As=n(3710);Z.es.prototype.rfft=function(){return this.throwIfDisposed(),(0,As.Q)(this)};var _s=n(7809);Z.es.prototype.round=function(){return this.throwIfDisposed(),(0,_s.N)(this)},Z.es.prototype.rsqrt=function(){return this.throwIfDisposed(),(0,En.b)(this)};var Os=n(5503);Z.es.prototype.selu=function(){return this.throwIfDisposed(),(0,Os.U)(this)};const Fs=(0,pe.op)({separableConv2d_:function(e,t,n,r,a,s=[1,1],o="NHWC"){const i=(0,de._1)(e,"x","separableConv2d"),u=(0,de._1)(t,"depthwiseFilter","separableConv2d"),l=(0,de._1)(n,"pointwiseFilter","separableConv2d");let c=i,p=!1;if(3===i.rank&&(p=!0,c=(0,kt.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===o)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");m.hu(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),m.hu(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),m.hu(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),m.hu(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),m.hu(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const d=u.shape[2],h=u.shape[3];m.hu(l.shape[2]===d*h,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*h}, but got ${l.shape[2]}.`));const f=(0,La.B)(c,u,r,a,o,s),g=(0,an.T)(f,l,1,"valid",o);return p?(0,kt.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});Z.es.prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Fs(this,e,t,n,r,a,s)},Z.es.prototype.sigmoid=function(){return this.throwIfDisposed(),(0,Pr.X)(this)};var Bs=n(4434);Z.es.prototype.sign=function(){return this.throwIfDisposed(),(0,Bs.X)(this)},Z.es.prototype.sin=function(){return this.throwIfDisposed(),(0,cn.O)(this)},Z.es.prototype.sinh=function(){return this.throwIfDisposed(),(0,dn.R)(this)},Z.es.prototype.slice=function(e,t){return this.throwIfDisposed(),(0,ut.t)(this,e,t)};var Ms=n(682);Z.es.prototype.softmax=function(e){return this.throwIfDisposed(),(0,Ms.X)(this,e)},Z.es.prototype.softplus=function(){return this.throwIfDisposed(),(0,ls.W)(this)},Z.es.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,zt.f)(this,e,t)},Z.es.prototype.split=function(e,t){return this.throwIfDisposed(),(0,Jt.V)(this,e,t)},Z.es.prototype.sqrt=function(){return this.throwIfDisposed(),(0,bt._)(this)},Z.es.prototype.square=function(){return this.throwIfDisposed(),(0,vt.h)(this)},Z.es.prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,da.$)(this,e)},Z.es.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),va(this,e)};var Ps=n(9590);Z.es.prototype.squeeze=function(e){return this.throwIfDisposed(),(0,Ps.L)(this,e)},Z.es.prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Z.es?[this,e]:[this,...e];return(0,ta.k)(n,t)},Z.es.prototype.step=function(e){return this.throwIfDisposed(),(0,mt.N)(this,e)};var Ls=n(5158);Z.es.prototype.stridedSlice=function(e,t,n,r,a,s,o,i){return this.throwIfDisposed(),(0,Ls.N)(this,e,t,n,r,a,s,o,i)},Z.es.prototype.subStrict=function(e){return this.throwIfDisposed(),wa(this,e)},Z.es.prototype.sub=function(e){return this.throwIfDisposed(),(0,wt.l)(this,e)},Z.es.prototype.sum=function(e,t){return this.throwIfDisposed(),(0,$t.S)(this,e,t)};var Ws=n(1173);Z.es.prototype.tan=function(){return this.throwIfDisposed(),(0,Ws.O)(this)};var Vs=n(1869);Z.es.prototype.tanh=function(){return this.throwIfDisposed(),(0,Vs.A)(this)},Z.es.prototype.tile=function(e){return this.throwIfDisposed(),(0,Rn.G)(this,e)},Z.es.prototype.toBool=function(){return this.throwIfDisposed(),(0,Y.p)(this,"bool")},Z.es.prototype.toFloat=function(){return this.throwIfDisposed(),(0,Y.p)(this,"float32")},Z.es.prototype.toInt=function(){return this.throwIfDisposed(),(0,Y.p)(this,"int32")};var Us=n(3243);Z.es.prototype.topk=function(e,t){return this.throwIfDisposed(),(0,Us.h)(this,e,t)},Z.es.prototype.transpose=function(e){return this.throwIfDisposed(),(0,mn.p)(this,e)};var zs=n(9608);Z.es.prototype.unique=function(e){return this.throwIfDisposed(),(0,zs.T)(this,e)},Z.es.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),An(this,e,t)};var Hs=n(4136);Z.es.prototype.unstack=function(e){return this.throwIfDisposed(),(0,Hs.H)(this,e)},Z.es.prototype.where=function(e,t){return this.throwIfDisposed(),(0,Qt.a)(e,this,t)},Z.es.prototype.zerosLike=function(){return this.throwIfDisposed(),(0,St.P)(this)}},9121:(e,t,n)=>{"use strict";n.d(t,{SY:()=>r,VG:()=>a,Sp:()=>s,mm:()=>o,Xz:()=>i,oT:()=>u,IK:()=>l,sJ:()=>c,aJ:()=>p,M2:()=>d,qw:()=>h,jM:()=>f,Oy:()=>m,QC:()=>g,Jh:()=>y,xt:()=>x,_k:()=>b,DC:()=>v,XL:()=>w,zw:()=>I,Ly:()=>N,RF:()=>k,gJ:()=>$,xn:()=>C,Zz:()=>T,Eh:()=>S,mh:()=>E,wU:()=>R,wm:()=>D,x1:()=>A,o2:()=>_,ik:()=>O,mc:()=>F,TR:()=>B,iH:()=>M,Vc:()=>P,T0:()=>L,ci:()=>W,sL:()=>V,y7:()=>U,p4:()=>z,ek:()=>H,Vn:()=>G,ZC:()=>X,SX:()=>j,HE:()=>q,Om:()=>K,hd:()=>Y,NE:()=>Q,Y0:()=>Z,vw:()=>J,de:()=>ee,Uy:()=>te,OR:()=>ne,je:()=>re,sH:()=>ae,qi:()=>se,q1:()=>oe,iZ:()=>ie,Ac:()=>ue,iJ:()=>le,Qg:()=>ce,J_:()=>pe,av:()=>de,iW:()=>he,r7:()=>fe,vt:()=>me,CA:()=>ge,e7:()=>ye,Zb:()=>xe,kU:()=>be,PY:()=>ve,Vf:()=>we,MZ:()=>Ie,qC:()=>Ne,eZ:()=>ke,vI:()=>$e,Yo:()=>Ce,BM:()=>Te,mT:()=>Se,Gv:()=>Ee,OA:()=>Re,f:()=>De,vF:()=>Ae,q2:()=>_e,c1:()=>Oe,q8:()=>Fe,jQ:()=>Be,Vb:()=>Me,wY:()=>Pe,L0:()=>Le,yQ:()=>We,uv:()=>Ve,cy:()=>Ue,W0:()=>ze,qW:()=>He,we:()=>Ge,ly:()=>Xe,pe:()=>je,o0:()=>qe,Dl:()=>Ke,e6:()=>Ye,xJ:()=>Qe,$H:()=>Ze,qk:()=>Je,HZ:()=>et,dp:()=>tt,Hm:()=>nt,_Y:()=>rt,zb:()=>at,Sb:()=>st,mK:()=>ot,e0:()=>it,bV:()=>ut,xQ:()=>lt,xc:()=>ct,oF:()=>pt,p2:()=>dt,RQ:()=>ht,w3:()=>ft,i5:()=>mt,a5:()=>gt,MR:()=>yt,FK:()=>xt,GB:()=>bt,TQ:()=>vt,L8:()=>wt,Gc:()=>It,_t:()=>Nt,bK:()=>kt,Tr:()=>$t,D2:()=>Ct,m2:()=>Tt,sE:()=>St,MI:()=>Et,n9:()=>Rt,cW:()=>Dt,G3:()=>At,kp:()=>_t,To:()=>Ot,Qv:()=>Ft,Ru:()=>Bt,h8:()=>Mt,eB:()=>Pt,b9:()=>Lt,us:()=>Wt,_V:()=>Vt,lu:()=>Ut});const r="Abs",a="Acos",s="Acosh",o="Add",i="AddN",u="All",l="Any",c="ArgMax",p="ArgMin",d="Asin",h="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",x="AvgPoolBackprop",b="AvgPool3D",v="AvgPool3DBackprop",w="BatchMatMul",I="BatchToSpaceND",N="BroadcastTo",k="Cast",$="Ceil",C="ClipByValue",T="Complex",S="Concat",E="Conv2D",R="Conv2DBackpropFilter",D="Conv2DBackpropInput",A="Conv3D",_="Conv3DBackpropFilterV2",O="Conv3DBackpropInputV2",F="Cos",B="Cosh",M="Cumsum",P="CropAndResize",L="DepthToSpace",W="DepthwiseConv2dNative",V="DepthwiseConv2dNativeBackpropFilter",U="DepthwiseConv2dNativeBackpropInput",z="Dilation2D",H="Dilation2DBackpropInput",G="Dilation2DBackpropFilter",X="Div",j="Elu",q="EluGrad",K="Erf",Y="Equal",Q="Exp",Z="Expm1",J="FFT",ee="Fill",te="FlipLeftRight",ne="Floor",re="FloorDiv",ae="FusedBatchNorm",se="GatherV2",oe="GatherNd",ie="Greater",ue="GreaterEqual",le="Identity",ce="IFFT",pe="Imag",de="IsFinite",he="IsInf",fe="IsNan",me="Less",ge="LessEqual",ye="LinSpace",xe="Log",be="Log1p",ve="LogicalAnd",we="LogicalNot",Ie="LogicalOr",Ne="LogSoftmax",ke="LRN",$e="LRNBackprop",Ce="Max",Te="Maximum",Se="MaxPool",Ee="MaxPoolBackprop",Re="MaxPool3D",De="MaxPool3DBackprop",Ae="MaxPoolWithArgmax",_e="Mean",Oe="Min",Fe="Minimum",Be="MirrorPad",Me="Mod",Pe="Multiply",Le="Negate",We="NotEqual",Ve="NonMaxSuppressionV3",Ue="NonMaxSuppressionV4",ze="NonMaxSuppressionV5",He="OnesLike",Ge="OneHot",Xe="PadV2",je="Pow",qe="Prelu",Ke="Prod",Ye="Range",Qe="Real",Ze="Reciprocal",Je="Relu",et="Reshape",tt="ResizeNearestNeighbor",nt="ResizeNearestNeighborGrad",rt="ResizeBilinear",at="ResizeBilinearGrad",st="Relu6",ot="Reverse",it="Round",ut="Rsqrt",lt="ScatterNd",ct="SelectV2",pt="Selu",dt="Slice",ht="Sin",ft="Sinh",mt="Sign",gt="Sigmoid",yt="Softplus",xt="Sqrt",bt="Sum",vt="SpaceToBatchND",wt="SplitV",It="Softmax",Nt="SquaredDifference",kt="Square",$t="Sub",Ct="SparseToDense",Tt="StridedSlice",St="Tan",Et="Tanh",Rt="Tile",Dt="TopK",At="Transpose",_t="Unique",Ot="Unpack",Ft="UnsortedSegmentSum",Bt="ZerosLike",Mt="Step",Pt="FromPixels",Lt="RotateWithOffset",Wt="_FusedMatMul",Vt="FusedConv2D",Ut="FusedDepthwiseConv2D"},6151:(e,t,n)=>{"use strict";n.d(t,{pI:()=>i,uk:()=>u,tr:()=>l,wC:()=>c,Li:()=>p});var r=n(2885),a=n(5938);const s=(0,a.R)("kernelRegistry",(()=>new Map)),o=(0,a.R)("gradRegistry",(()=>new Map));function i(e,t){const n=d(e,t);return s.get(n)}function u(e){return o.get(e)}function l(e){const t=s.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,o]=a,[i]=s.split("_");i===e&&n.push(o)}return n}function c(e){const{kernelName:t,backendName:n}=e,r=d(t,n);s.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),s.set(r,e)}function p(e){const{kernelName:t}=e;o.has(t)&&(0,r.OB)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),o.set(t,e)}function d(e,t){return`${t}_${e}`}},6235:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({abs_:function(e){const t=(0,s._1)(e,"x","abs"),n={x:t};return r.BV.runKernelFunc(((e,n)=>(n([t]),"complex64"===t.dtype?e.complexAbs(t):e.abs(t))),n,null,a.SY)}})},7839:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({acos_:function(e){const t=(0,s._1)(e,"x","acos"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.acos(t);return n([t]),r}),n,null,a.VG)}})},1470:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({acosh_:function(e){const t=(0,s._1)(e,"x","acosh"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.acosh(t);return n([t]),r}),n,null,a.Sp)}})},6407:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var r=n(7097),a=n(9121),s=n(747),o=n(3740);const i=(0,n(2668).op)({add_:function(e,t){let n=(0,o._1)(e,"a","add"),i=(0,o._1)(t,"b","add");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernelFunc(((e,t)=>{const r=e.add(n,i);return t([n,i]),r}),u,null,a.mm)}})},781:(e,t,n)=>{"use strict";n.d(t,{$:()=>p});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(3591),u=n(2668),l=n(4968),c=n(9065);const p=(0,u.op)({all_:function(e,t=null,n=!1){let u=(0,s._1)(e,"x","all","bool");const p={x:u},d={axis:t,keepDims:n};return r.BV.runKernelFunc((e=>{const r=(0,o.EC)(t,u.shape);let a=r;const s=(0,i.Q3)(a,u.rank);null!=s&&(u=(0,c.p)(u,s),a=(0,i.sY)(a.length,u.rank));const p=e.all(u,a);if(n){const e=(0,i.rv)(p.shape,r);return(0,l.X)(p,e)}return p}),p,null,a.oT,d)}})},2998:(e,t,n)=>{"use strict";n.d(t,{Y:()=>p});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(3591),u=n(2668),l=n(4968),c=n(9065);const p=(0,u.op)({any_:function(e,t=null,n=!1){let u=(0,s._1)(e,"x","any","bool");const p={x:u},d={axis:t,keepDims:n};return r.BV.runKernelFunc((e=>{const r=(0,o.EC)(t,u.shape);let a=r;const s=(0,i.Q3)(a,u.rank);null!=s&&(u=(0,c.p)(u,s),a=(0,i.sY)(a.length,u.rank));const p=e.any(u,a);if(n){const e=(0,i.rv)(p.shape,r);return(0,l.X)(p,e)}return p}),p,null,a.IK,d)}})},47:(e,t,n)=>{"use strict";n.d(t,{N:()=>c});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(3591),u=n(2668),l=n(9065);const c=(0,u.op)({argMax_:function(e,t=0){let n=(0,s._1)(e,"x","argMax");const u={x:n},c={axis:t};return r.BV.runKernelFunc(((e,r)=>{r([n]);let a=o.EC(t,n.shape);const s=i.Q3(a,n.rank);return null!=s&&(n=(0,l.p)(n,s),a=i.sY(a.length,n.rank)),e.argMax(n,a[0])}),u,null,a.sJ,c)}})},7394:(e,t,n)=>{"use strict";n.d(t,{v:()=>c});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(3591),u=n(2668),l=n(9065);const c=(0,u.op)({argMin_:function(e,t=0){let n=(0,s._1)(e,"x","argMin");const u={x:n},c={axis:t};return r.BV.runKernelFunc(((e,r)=>{r([n]),null==t&&(t=0);let a=o.EC(t,n.shape);const s=i.Q3(a,n.rank);return null!=s&&(n=(0,l.p)(n,s),a=i.sY(a.length,n.rank)),e.argMin(n,a[0])}),u,null,a.aJ,c)}})},2421:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({asin_:function(e){const t=(0,s._1)(e,"x","asin"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.asin(t);return n([t]),r}),n,null,a.M2)}})},1891:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({asinh_:function(e){const t=(0,s._1)(e,"x","asinh"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.asinh(t);return n([t]),r}),n,null,a.qw)}})},7037:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({atan_:function(e){const t=(0,s._1)(e,"x","atan"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.atan(t);return n([t]),r}),n,null,a.jM)}})},9812:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var r=n(7097),a=n(9121),s=n(747),o=n(3740);const i=(0,n(2668).op)({atan2_:function(e,t){let n=(0,o._1)(e,"a","atan2"),i=(0,o._1)(t,"b","atan2");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernelFunc(((e,t)=>{const r=e.atan2(n,i);return t([n,i]),r}),u,null,a.QC)}})},369:(e,t,n)=>{"use strict";n.d(t,{C:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({atanh_:function(e){const t=(0,s._1)(e,"x","atanh"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.atanh(t);return n([t]),r}),n,null,a.Oy)}})},5176:(e,t,n)=>{"use strict";n.d(t,{w:()=>p});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(2271),u=n(2582),l=n(2668),c=n(4968);const p=(0,l.op)({avgPool_:function(e,t,n,l,p){const d=(0,s._1)(e,"x","avgPool","float32");o.hu(u.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let h=d,f=!1;3===d.rank&&(f=!0,h=(0,c.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.hu(4===h.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${h.rank}.`)),null!=p&&o.hu(o.GN(l),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${p} but got pad ${l}.`));const m={x:h},g={filterSize:t,strides:n,pad:l,dimRoundingMode:p};let y=r.BV.runKernelFunc(((e,r)=>{const a=u.Xw(h.shape,t,n,1,l,p);return r([h]),1===a.filterWidth&&1===a.filterHeight&&o.cO(a.inShape,a.outShape)?h.clone():e.avgPool(h,a)}),m,null,a.Jh,g);return y=(0,i.p)(y,d.dtype),f?(0,c.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},3591:(e,t,n)=>{"use strict";n.d(t,{YB:()=>a,Vh:()=>s,kz:()=>o,rv:()=>i,lB:()=>u,Q3:()=>l,LJ:()=>c,sY:()=>p});var r=n(569);function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const r=e.length+t.length,a=[];let s=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[s++]):a.push(t[o++]);return a}function o(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function i(e,t){return s(e,t.map((e=>1)),t)}function u(e,t,n){r.hu(a(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function l(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function p(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},8441:(e,t,n)=>{"use strict";n.d(t,{E:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(569);const i=(0,n(2668).op)({batchToSpaceND_:function(e,t,n){const i=(0,s._1)(e,"x","batchToSpaceND"),u=t.reduce(((e,t)=>e*t));o.hu(i.rank>=1+t.length,(()=>`input rank is ${i.rank} but should be > than blockShape.length ${t.length}`)),o.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),o.hu(i.shape[0]%u==0,(()=>`input tensor batch is ${i.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${u}`));const l={x:i},c={blockShape:t,crops:n};return r.BV.runKernelFunc((e=>e.batchToSpaceND(i,t,n)),l,null,a.zw,c)}})},7505:(e,t,n)=>{"use strict";n.d(t,{t:()=>l});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(4968);function u(e){return null==e?null:0===e.rank?(0,i.X)(e,[e.size]):1===e.rank?e:2===e.rank?(0,i.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e}const l=(0,n(2668).op)({batchNorm_:function(e,t,n,l,c,p){null==p&&(p=.001);const d=(0,s._1)(e,"x","batchNorm"),h=(0,s._1)(t,"mean","batchNorm"),f=(0,s._1)(n,"variance","batchNorm");let m,g;null!=c&&(m=(0,s._1)(c,"scale","batchNorm")),null!=l&&(g=(0,s._1)(l,"offset","batchNorm")),o.hu(h.rank===f.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.hu(null==g||h.rank===g.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.hu(null==m||h.rank===m.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const y=function(e){let t;return t=0===e.rank||1===e.rank?(0,i.X)(e,[1,1,1,e.size]):2===e.rank?(0,i.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),x={x:y,scale:m,offset:g,mean:h,variance:f},b={varianceEpsilon:p},v=r.BV.runKernelFunc(((e,t)=>(t([y,h,f,m]),e.batchNorm(y,u(h),u(f),u(g),u(m),p))),x,null,a.sH,b);return(0,i.X)(v,d.shape)}})},8247:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var r=n(7097),a=n(9121),s=n(3740),o=n(8723),i=n(2668),u=n(4968);const l=(0,i.op)({broadcastTo_:function(e,t){let n=(0,s._1)(e,"broadcastTo","x");const i=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,u.X)(n,e)}const l=n.shape,c=Array.from(t);for(let e=t.length-1;e>=0;e--)if(l[e]===t[e])c[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${t}].`);if(0===c.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,o.d)(n);const p={x:n},d={shape:t,inputShape:l};return r.BV.runKernelFunc((e=>e.tile(n,c)),p,null,a.Ly,d)}})},2200:(e,t,n)=>{"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,o=e[s]||1;(t[t.length-1-a]||1)>1&&1===o&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,o=t[s];(null==a||1===a&&o>1)&&n.unshift(s)}return n}function s(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}n.d(t,{XF:()=>r,RR:()=>a,$N:()=>s})},2657:(e,t,n)=>{"use strict";n.d(t,{f:()=>s});var r=n(4077),a=n(569);function s(e,t="float32",n){return t=t||"float32",a.Mu(e),new r.YD(e,t,n)}},2271:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(569);const i=(0,n(2668).op)({cast_:function(e,t){const n=(0,s._1)(e,"x","cast");if(!o.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},u={dtype:t};return r.BV.runKernelFunc((e=>e.cast(n,t)),i,null,a.RF,u)}})},6825:(e,t,n)=>{"use strict";n.d(t,{m:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({ceil_:function(e){const t=(0,s._1)(e,"x","ceil"),n={x:t};return r.BV.runKernelFunc((e=>e.ceil(t)),n,null,a.gJ)}})},2279:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(569);const i=(0,n(2668).op)({clipByValue_:function(e,t,n){const i=(0,s._1)(e,"x","clipByValue");o.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const u={x:i},l={clipValueMin:t,clipValueMax:n};return r.BV.runKernelFunc(((e,r)=>{const a=e.clip(i,t,n);return r([i]),a}),u,null,a.xn,l)}})},8723:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({clone_:function(e){const t=(0,s._1)(e,"x","clone",null),n={x:t};return r.BV.runKernelFunc((()=>r.BV.makeTensorFromDataId(t.dataId,t.shape,t.dtype)),n,null,a.iJ)}})},1661:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(569);const i=(0,n(2668).op)({complex_:function(e,t){const n=(0,s._1)(e,"real","complex"),i=(0,s._1)(t,"imag","complex");o.k5(n.shape,i.shape,`real and imag shapes, ${n.shape} and ${i.shape}, must match in call to tf.complex().`);const u={real:n,imag:i};return r.BV.runKernelFunc((e=>e.complex(n,i)),u,null,a.Zz)}})},6884:(e,t,n)=>{"use strict";n.d(t,{z:()=>c});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(398),u=n(2668),l=n(701);const c=(0,u.op)({concat_:function(e,t=0){(0,o.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=(0,s.sI)(e,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}));const u=n,c={axis:t};return r.BV.runKernelFunc(((e,r)=>{const a=(0,o.EC)(t,n[0].shape)[0],s=(0,i.N)(n.map((e=>e.shape)),a);if(0===(0,o.NA)(s))return(0,l.X)([],s);if(n=n.filter((e=>e.size>0)),1===n.length)return n[0];const u=n.map((e=>e.shape));(0,i.o)(u,a);const c=e.concat(n,a);return r(n),c}),u,null,a.Eh,c)}})},398:(e,t,n)=>{"use strict";n.d(t,{o:()=>a,N:()=>s});var r=n(569);function a(e,t){const n=e[0].length;e.forEach(((e,t)=>{r.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),r.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const a=e[0];e.forEach(((e,s)=>{for(let o=0;o<n;o++)r.hu(o===t||e[o]===a[o],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${a}) along the non-concatenated axis ${s}.`))}))}function s(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}},1355:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var r=n(3740),a=n(569),s=n(4794),o=n(2582),i=n(2668),u=n(4968);const l=(0,i.op)({conv1d_:function(e,t,n,i,l="NWC",c=1,p){const d=(0,r._1)(e,"x","conv1d"),h=(0,r._1)(t,"filter","conv1d");let f=d,m=!1;2===d.rank&&(m=!0,f=(0,u.X)(d,[1,d.shape[0],d.shape[1]])),a.hu(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),a.hu(3===h.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${h.rank}.`)),null!=p&&a.hu(a.GN(i),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${i}.`)),a.hu(f.shape[2]===h.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${h.shape[1]}.`)),a.hu(o.jT(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),a.hu("NWC"===l,(()=>`Error in conv1d: got dataFormat of ${l} but only NWC is currently supported.`));const g=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),y=(0,u.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),x=[1,n],b=[1,c],v=(0,s.T)(y,g,x,i,"NHWC",b,p);return m?(0,u.X)(v,[v.shape[2],v.shape[3]]):(0,u.X)(v,[v.shape[0],v.shape[2],v.shape[3]])}})},4794:(e,t,n)=>{"use strict";n.d(t,{T:()=>c});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({conv2d_:function(e,t,n,u,c="NHWC",p=[1,1],d){const h=(0,s._1)(e,"x","conv2d"),f=(0,s._1)(t,"filter","conv2d");let m=h,g=!1;3===h.rank&&(g=!0,m=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.hu(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),o.hu(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),null!=d&&o.hu(o.GN(u),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${u}.`));const y="NHWC"===c?m.shape[3]:m.shape[1];o.hu(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),o.hu(i.jT(n,p),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${p}'`));const x={x:m,filter:f},b={strides:n,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d},v=r.BV.runKernelFunc(((e,t)=>{const r=i.sl(c),a=i.Ix(m.shape,f.shape,n,p,u,d,!1,r),s=e.conv2d(m,f,a);return t([m,f]),s}),x,null,a.mh,b);return g?(0,l.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},6013:(e,t,n)=>{"use strict";n.d(t,{p:()=>l});var r=n(7097),a=n(9121),s=n(569),o=n(2582),i=n(2668),u=n(4968);const l=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,i,l,c="NHWC",p){let d=e;3===e.rank&&(d=(0,u.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=(0,u.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.hu(4===d.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${d.shape}.`)),s.hu(4===h.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${h.shape}.`)),s.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const f="NHWC"===c?d.shape[3]:d.shape[1],m="NHWC"===c?h.shape[3]:h.shape[1];s.hu(f===n[2],(()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`)),s.hu(m===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`)),null!=p&&s.hu(s.GN(l),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${p} but got pad ${l}.`));const g={x:d,dy:h},y={strides:i,pad:l,dataFormat:c,dimRoundingMode:p,filterShape:n};return r.BV.runKernelFunc((e=>{const t=o.sl(c),r=o.Ix(d.shape,n,i,1,l,p,!1,t);return e.conv2dDerFilter(d,h,r)}),g,null,a.wU,y)}})},9832:(e,t,n)=>{"use strict";n.d(t,{_:()=>l});var r=n(7097),a=n(9121),s=n(569),o=n(2582),i=n(2668),u=n(4968);const l=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,l,c="NHWC",p){s.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let d=e,h=t,f=!1;3===t.rank&&(f=!0,h=(0,u.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),d=[1,e[0],e[1],e[2]]),s.hu(4===d.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${d.length}.`)),s.hu(4===h.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${h.rank}`)),s.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const m="NHWC"===c?d[3]:d[1],g="NHWC"===c?h.shape[3]:h.shape[1];s.hu(m===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`)),s.hu(g===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${n.shape[3]}.`)),null!=p&&s.hu(s.GN(l),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${p} but got pad ${l}.`));const y={dy:h,filter:n},x={strides:i,pad:l,dataFormat:c,dimRoundingMode:p,inputShape:d},b=r.BV.runKernelFunc(((e,t)=>{const r=o.sl(c),a=o.Ix(d,n.shape,i,1,l,p,!1,r),s=e.conv2dDerInput(h,n,a);return t([h,n]),s}),y,null,a.wm,x);return f?(0,u.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},1405:(e,t,n)=>{"use strict";n.d(t,{b:()=>s});var r=n(3740),a=n(9832);const s=(0,n(2668).op)({conv2dTranspose_:function(e,t,n,s,o,i){const u=(0,r._1)(e,"x","conv2dTranspose"),l=(0,r._1)(t,"filter","conv2dTranspose");return(0,a._)(n,u,l,s,o,"NHWC",i)}})},2582:(e,t,n)=>{"use strict";n.d(t,{Rf:()=>a,Xw:()=>s,pl:()=>o,Ix:()=>i,jw:()=>u,aO:()=>l,I0:()=>f,jT:()=>m,sl:()=>g});var r=n(569);function a(e,t,n,r,a="NHWC",s){return i(e,[...t,e[3]],n,s,r,null,null,g(a))}function s(e,t,n,r,a,s,o="channelsLast"){const[u,l]=c(t);let p;if("channelsLast"===o)p=[u,l,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);p=[u,l,e[1],e[1]]}return i(e,p,n,r,a,s,!1,o)}function o(e,t,n,r,a,s,o="NDHWC"){const[i,l,c]=p(t);let d,h;if("NDHWC"===o)h="channelsLast",d=[i,l,c,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);h="channelsFirst",d=[i,l,c,e[1],e[1]]}return u(e,d,n,r,a,!1,h,s)}function i(e,t,n,a,s,o,i=!1,u="channelsLast"){let[p,f,m,g]=[-1,-1,-1,-1];if("channelsLast"===u)[p,f,m,g]=e;else{if("channelsFirst"!==u)throw new Error(`Unknown dataFormat ${u}`);[p,g,f,m]=e}const[y,x,,b]=t,[v,w]=c(n),[I,N]=c(a),k=d(y,I),$=d(x,N),{padInfo:C,outHeight:T,outWidth:S}=function(e,t,n,a,s,o,i,u,c){let p,d,f;if("number"==typeof e){p={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,a,s){null==a&&(a=l(e,t,n));const o=e[1],i=h((e[0]-t+2*a)/n+1,s);r.hu(r.GN(i),(()=>`The output # of rows (${i}) must be an integer. Change the stride and/or zero pad parameters`));const u=h((o-t+2*a)/n+1,s);return r.hu(r.GN(u),(()=>`The output # of columns (${u}) must be an integer. Change the stride and/or zero pad parameters`)),[i,u]}([t,n],o,a,e,u);d=s[0],f=s[1]}else if("same"===e){d=Math.ceil(t/a),f=Math.ceil(n/s);const e=Math.max(0,(d-1)*a+o-t),r=Math.max(0,(f-1)*s+i-n),u=Math.floor(e/2),l=e-u,c=Math.floor(r/2);p={top:u,bottom:l,left:c,right:r-c,type:"SAME"}}else if("valid"===e)p={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-o+1)/a),f=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const r="channelsLast"===c?e[1][0]:e[2][0],l="channelsLast"===c?e[1][1]:e[2][1],m="channelsLast"===c?e[2][0]:e[3][0],g="channelsLast"===c?e[2][1]:e[3][1];p={top:r,bottom:l,left:m,right:g,type:0===r&&0===l&&0===m&&0===g?"VALID":"EXPLICIT"},d=h((t-o+r+l)/a+1,u),f=h((n-i+m+g)/s+1,u)}}return{padInfo:p,outHeight:d,outWidth:f}}(s,f,m,v,w,k,$,o,u),E=i?b*g:b;let R;return"channelsFirst"===u?R=[p,E,T,S]:"channelsLast"===u&&(R=[p,T,S,E]),{batchSize:p,dataFormat:u,inHeight:f,inWidth:m,inChannels:g,outHeight:T,outWidth:S,outChannels:E,padInfo:C,strideHeight:v,strideWidth:w,filterHeight:y,filterWidth:x,effectiveFilterHeight:k,effectiveFilterWidth:$,dilationHeight:I,dilationWidth:N,inShape:e,outShape:R,filterShape:t}}function u(e,t,n,a,s,o=!1,i="channelsLast",u){let[c,f,m,g,y]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[c,f,m,g,y]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[c,y,f,m,g]=e}const[x,b,v,,w]=t,[I,N,k]=p(n),[$,C,T]=p(a),S=d(x,$),E=d(b,C),R=d(v,T),{padInfo:D,outDepth:A,outHeight:_,outWidth:O}=function(e,t,n,a,s,o,i,u,c,p,d){let f,m,g,y;if("number"==typeof e){f={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const o=function(e,t,n,a,s,o){null==s&&(s=l(e,t,a));const i=e[1],u=e[2],c=h((e[0]-t+2*s)/a+1,o);r.hu(r.GN(c),(()=>`The output # of depths (${c}) must be an integer. Change the stride and/or zero pad parameters`));const p=h((i-t+2*s)/a+1,o);r.hu(r.GN(p),(()=>`The output # of rows (${p}) must be an integer. Change the stride and/or zero pad parameters`));const d=h((u-t+2*s)/a+1,o);return r.hu(r.GN(d),(()=>`The output # of columns (${d}) must be an integer. Change the stride and/or zero pad parameters`)),[c,p,d,1]}([t,n,a,1],u,0,s,e,d);m=o[0],g=o[1],y=o[2]}else if("same"===e){m=Math.ceil(t/s),g=Math.ceil(n/o),y=Math.ceil(a/i);const e=(m-1)*s+u-t,r=(g-1)*o+c-n,l=(y-1)*i+p-a,d=Math.floor(e/2),h=e-d,x=Math.floor(r/2),b=r-x,v=Math.floor(l/2);f={top:x,bottom:b,left:v,right:l-v,front:d,back:h,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);f={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},m=Math.ceil((t-u+1)/s),g=Math.ceil((n-c+1)/o),y=Math.ceil((a-p+1)/i)}return{padInfo:f,outDepth:m,outHeight:g,outWidth:y}}(s,f,m,g,I,N,k,S,E,R,u),F=o?w*y:w;let B;return"channelsFirst"===i?B=[c,F,A,_,O]:"channelsLast"===i&&(B=[c,A,_,O,F]),{batchSize:c,dataFormat:i,inDepth:f,inHeight:m,inWidth:g,inChannels:y,outDepth:A,outHeight:_,outWidth:O,outChannels:F,padInfo:D,strideDepth:I,strideHeight:N,strideWidth:k,filterDepth:x,filterHeight:b,filterWidth:v,effectiveFilterDepth:S,effectiveFilterHeight:E,effectiveFilterWidth:R,dilationDepth:$,dilationHeight:C,dilationWidth:T,inShape:e,outShape:B,filterShape:t}}function l(e,t,n,r=1){const a=d(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function c(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function p(e){return"number"==typeof e?[e,e,e]:e}function d(e,t){return t<=1?e:e+(e-1)*(t-1)}function h(e,t){if(!t)return e;switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function m(e,t){return f(e)||f(t)}function g(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}},173:(e,t,n)=>{"use strict";n.d(t,{m:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({cos_:function(e){const t=(0,s._1)(e,"x","cos"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.cos(t);return n([t]),r}),n,null,a.mc)}})},2699:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({cosh_:function(e){const t=(0,s._1)(e,"x","cosh"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.cosh(t);return n([t]),r}),n,null,a.TR)}})},7405:(e,t,n)=>{"use strict";n.d(t,{z:()=>l});var r=n(7097),a=n(9121),s=n(3740),o=n(3591),i=n(2668),u=n(9065);const l=(0,i.op)({cumsum_:function(e,t=0,n=!1,i=!1){const l=(0,s._1)(e,"x","cumsum"),c={x:l},p={axis:t,exclusive:n,reverse:i};return r.BV.runKernelFunc(((e,r)=>{const a=(0,o.Q3)([t],l.rank);let s=l;null!=a&&(s=(0,u.p)(l,a));const c=(0,o.sY)(1,l.rank)[0];let p=e.cumsum(s,c,n,i);if(r([l]),null!=a){const e=(0,o.LJ)(a);p=(0,u.p)(p,e)}return p}),c,null,a.iH,p)}})},9112:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(569);const i=(0,n(2668).op)({depthToSpace_:function(e,t,n="NHWC"){const i=(0,s._1)(e,"x","depthToSpace"),u="NHWC"===n?i.shape[1]:i.shape[2],l="NHWC"===n?i.shape[2]:i.shape[3],c="NHWC"===n?i.shape[3]:i.shape[1];o.hu(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${i.shape}`)),o.hu(l*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${t} for depthToSpace with input shape\n        ${i.shape}`)),o.hu(c%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${c} for depthToSpace with input shape ${i.shape}`));const p={x:i},d={blockSize:t,dataFormat:n};return r.BV.runKernelFunc((e=>e.depthToSpace(i,t,n)),p,null,a.T0,d)}})},4718:(e,t,n)=>{"use strict";n.d(t,{B:()=>c});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({depthwiseConv2d_:function(e,t,n,u,c="NHWC",p=[1,1],d){const h=(0,s._1)(e,"x","depthwiseConv2d"),f=(0,s._1)(t,"filter","depthwiseConv2d");let m=h,g=!1;3===h.rank&&(g=!0,m=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.hu(4===m.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`)),o.hu(4===f.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`)),o.hu(m.shape[3]===f.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`)),null!=d&&o.hu(o.GN(u),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${u}.`));const y={x:m,filter:f},x={strides:n,pad:u,dataFormat:c,dilations:p,dimRoundingMode:d},b=r.BV.runKernelFunc(((e,t)=>{null==p&&(p=[1,1]),o.hu(i.jT(n,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${p}'`));const r=i.Ix(m.shape,f.shape,n,p,u,d,!0),a=e.depthwiseConv2D(m,f,r);return t([m,f]),a}),y,null,a.ci,x);return g?(0,l.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},8098:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var r=n(7097),a=n(9121),s=n(2582),o=n(2668),i=n(4968);const u=(0,o.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,o,u,l=[1,1],c){let p=e;3===e.rank&&(p=(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:p,dy:d},f={strides:o,pad:u,dimRoundingMode:c,dilations:l,filterShape:n};return r.BV.runKernelFunc((t=>{const r=s.Ix(e.shape,n,o,l,u,c,!0);return t.depthwiseConv2DDerFilter(p,d,r)}),h,null,a.sL,f)}})},4375:(e,t,n)=>{"use strict";n.d(t,{v:()=>u});var r=n(7097),a=n(9121),s=n(2582),o=n(2668),i=n(4968);const u=(0,o.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,o,u,l=[1,1],c){let p=t,d=!1;3===t.rank&&(d=!0,p=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:p,filter:n},f={strides:o,pad:u,dimRoundingMode:c,dilations:l,inputShape:e},m=r.BV.runKernelFunc((t=>{const r=s.Ix(e,n.shape,o,l,u,c,!0);return t.depthwiseConv2DDerInput(p,n,r)}),h,null,a.y7,f);return d?(0,i.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},557:(e,t,n)=>{"use strict";n.d(t,{W:()=>l});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(2668),u=n(4968);const l=(0,i.op)({dilation2d_:function(e,t,n,i,l=[1,1],c="NHWC"){const p=(0,s._1)(e,"x","dilation2d"),d=(0,s._1)(t,"filter","dilation2d");o.hu(3===p.rank||4===p.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${p.rank}.`)),o.hu(3===d.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${d.rank}.`)),o.hu("NHWC"===c,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${c}`));let h=p,f=!1;3===p.rank&&(h=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),f=!0);const m={x:h,filter:d},g={strides:n,pad:i,dilations:l},y=r.BV.runKernel(a.p4,m,g);return f?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1274:(e,t,n)=>{"use strict";n.d(t,{h:()=>u});var r=n(7097),a=n(9121),s=n(747),o=n(3740),i=n(9165);const u=(0,n(2668).op)({div_:function(e,t){let n=(0,o._1)(e,"a","div"),u=(0,o._1)(t,"b","div");if([n,u]=(0,s.T_)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,i.q)(n,u);const l={a:n,b:u};return r.BV.runKernelFunc(((e,t)=>{const r=e.realDivide(n,u);return t([n,u]),r}),l,null,a.ZC,{})}})},9322:(e,t,n)=>{"use strict";n.d(t,{N:()=>c});var r=n(747),a=n(3740),s=n(1274),o=n(6477),i=n(2668),u=n(5912),l=n(6577);const c=(0,i.op)({divNoNan_:function(e,t){let n=(0,a._1)(e,"a","div"),i=(0,a._1)(t,"b","div");[n,i]=(0,r.T_)(n,i);const c=(0,s.h)(n,i),p=(0,l.P)(c),d=(0,o.D)(i,p);return(0,u.a)(d,p,c)}})},3233:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({elu_:function(e){const t=(0,s._1)(e,"x","elu"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.elu(t);return n([r]),r}),n,null,a.SX)}})},6477:(e,t,n)=>{"use strict";n.d(t,{D:()=>u});var r=n(7097),a=n(9121),s=n(747),o=n(3740),i=n(2200);const u=(0,n(2668).op)({equal_:function(e,t){let n=(0,o._1)(e,"a","equal"),u=(0,o._1)(t,"b","equal");[n,u]=(0,s.T_)(n,u),(0,i.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernelFunc((e=>e.equal(n,u)),l,null,a.hd)}})},4650:(e,t,n)=>{"use strict";n.d(t,{q:()=>u});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(2271);const u=(0,n(2668).op)({erf_:function(e){let t=(0,s._1)(e,"x","erf");o.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,i.p)(t,"float32"));const n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.erf(t);return n([t]),r}),n,null,a.Om)}})},4842:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({exp_:function(e){const t=(0,s._1)(e,"x","exp"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.exp(t);return n([r]),r}),n,null,a.NE)}})},1300:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(3740),a=n(569),s=n(2668),o=n(4968);const i=(0,s.op)({expandDims_:function(e,t=0){const n=(0,r._1)(e,"x","expandDims",null);a.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s=n.shape.slice();return t<0&&(a.hu(-(n.rank+1)<=t,(()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`)),t=n.rank+t+1),s.splice(t,0,1),(0,o.X)(n,s)}})},3426:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({expm1_:function(e){const t=(0,s._1)(e,"x","expm1"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.expm1(t);return n([t]),r}),n,null,a.Y0)}})},4006:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var r=n(7097),a=n(9121);function s(e,t,n){const s={shape:e,value:t,dtype:n};return r.BV.runKernelFunc((r=>r.fill(e,t,n)),{},null,a.de,s)}},6943:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({floor_:function(e){const t=(0,s._1)(e,"x","floor"),n={x:t};return r.BV.runKernelFunc((e=>e.floor(t)),n,null,a.OR)}})},9165:(e,t,n)=>{"use strict";n.d(t,{q:()=>i});var r=n(7097),a=n(9121),s=n(747),o=n(3740);const i=(0,n(2668).op)({floorDiv_:function(e,t){let n=(0,o._1)(e,"a","floorDiv"),i=(0,o._1)(t,"b","floorDiv");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernelFunc(((e,t)=>{const r=e.floorDiv(n,i);return t([n,i]),r}),u,null,a.je)}})},9323:(e,t,n)=>{"use strict";n.d(t,{Fr:()=>d,pf:()=>h,QH:()=>f,uy:()=>m});var r=n(2200),a=n(3233),s=n(4841),o=n(8151),i=n(7409),u=n(3582),l=n(4968),c=n(1901),p=n(5475);function d(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,s.d)(e,(0,c.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function h(e,t){let n=t;const a=r.RR(e.shape,t.shape);return a.length>0&&(n=(0,p.S)(n,a)),(0,l.X)(n,e.shape)}function f(e,t,n){if("linear"===t)return e;if("relu"===t)return(0,i.U)(e);if("elu"===t)return(0,a.p)(e);if("relu6"===t)return(0,u.b)(e);if("prelu"===t)return(0,o.A)(e,n);throw new Error(`Unknown fused activation ${t}.`)}const m=(e,t)=>!(e>0)||"linear"===t},4926:(e,t,n)=>{"use strict";n.d(t,{I:()=>c});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(2668),u=n(4968),l=n(4931);const c=(0,i.op)({gather_:function(e,t,n=0){const i=(0,s._1)(e,"x","gather"),c=(0,s._1)(t,"indices","gather","int32"),p={x:i,indices:c},d={axis:n};return r.BV.runKernelFunc(((e,t)=>{const r=(0,o.EC)(n,i.shape)[0],a=(0,l.collectGatherOpShapeInfo)(i,c,r),s=e.gather(i,(0,u.X)(c,[c.size]),r);return t([i,c]),(0,u.X)(s,a.outputShape)}),p,null,a.qi,d)}})},636:(e,t,n)=>{"use strict";n.d(t,{p:()=>u});var r=n(7097),a=n(9121),s=n(747),o=n(3740),i=n(2200);const u=(0,n(2668).op)({greater_:function(e,t){let n=(0,o._1)(e,"a","greater"),u=(0,o._1)(t,"b","greater");[n,u]=(0,s.T_)(n,u),(0,i.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernelFunc((e=>e.greater(n,u)),l,null,a.iZ)}})},7630:(e,t,n)=>{"use strict";n.d(t,{b:()=>u});var r=n(7097),a=n(9121),s=n(747),o=n(3740),i=n(2200);const u=(0,n(2668).op)({greaterEqual_:function(e,t){let n=(0,o._1)(e,"a","greaterEqual"),u=(0,o._1)(t,"b","greaterEqual");[n,u]=(0,s.T_)(n,u),(0,i.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernelFunc(((e,t)=>{const r=e.greaterEqual(n,u);return t([n,u]),r}),l,null,a.Ac)}})},4386:(e,t,n)=>{"use strict";n.d(t,{a:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({imag_:function(e){const t=(0,s._1)(e,"input","imag"),n={input:t};return r.BV.runKernelFunc((e=>e.imag(t)),n,null,a.J_)}})},3305:(e,t,n)=>{"use strict";n.d(t,{I:()=>l});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(2668),u=n(4968);const l=(0,i.op)({resizeBilinear_:function(e,t,n=!1){const i=(0,s._1)(e,"images","resizeBilinear");o.hu(3===i.rank||4===i.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`)),o.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`));let l=i,c=!1;3===i.rank&&(c=!0,l=(0,u.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[p,d]=t,h={images:l},f={alignCorners:n,size:t},m=r.BV.runKernelFunc(((e,t)=>(t([l]),e.resizeBilinear(l,p,d,n))),h,null,a._Y,f);return c?(0,u.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},5098:(e,t,n)=>{"use strict";n.d(t,{j:()=>l});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(2668),u=n(4968);const l=(0,i.op)({resizeNearestNeighbor_:function(e,t,n=!1){const i=(0,s._1)(e,"images","resizeNearestNeighbor");o.hu(3===i.rank||4===i.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`)),o.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),o.hu("float32"===i.dtype||"int32"===i.dtype,(()=>"`images` must have `int32` or `float32` as dtype"));let l=i,c=!1;3===i.rank&&(c=!0,l=(0,u.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[p,d]=t,h={images:l},f={alignCorners:n,size:t},m=r.BV.runKernelFunc(((e,t)=>(t([l]),e.resizeNearestNeighbor(l,p,d,n))),h,null,a.dp,f);return c?(0,u.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},9133:(e,t,n)=>{"use strict";n.d(t,{h:()=>u});var r=n(3740),a=n(632),s=n(4841),o=n(2668),i=n(9494);const u=(0,o.op)({leakyRelu_:function(e,t=.2){const n=(0,r._1)(e,"x","leakyRelu");return(0,a.g)((0,s.d)((0,i.i)(t),n),n)}})},6573:(e,t,n)=>{"use strict";n.d(t,{d:()=>u});var r=n(7097),a=n(9121),s=n(747),o=n(3740),i=n(2200);const u=(0,n(2668).op)({less_:function(e,t){let n=(0,o._1)(e,"a","less"),u=(0,o._1)(t,"b","less");[n,u]=(0,s.T_)(n,u),(0,i.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernelFunc((e=>e.less(n,u)),l,null,a.vt)}})},624:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var r=n(7097),a=n(9121),s=n(747),o=n(3740),i=n(2200);const u=(0,n(2668).op)({lessEqual_:function(e,t){let n=(0,o._1)(e,"a","lessEqual"),u=(0,o._1)(t,"b","lessEqual");[n,u]=(0,s.T_)(n,u),(0,i.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernelFunc(((e,t)=>{const r=e.lessEqual(n,u);return t([n,u]),r}),l,null,a.CA)}})},9648:(e,t,n)=>{"use strict";n.d(t,{G:()=>l});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(2668),u=n(4968);const l=(0,i.op)({localResponseNormalization_:function(e,t=5,n=1,i=1,l=.5){const c=(0,s._1)(e,"x","localResponseNormalization");o.hu(4===c.rank||3===c.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${c.rank}.`)),o.hu(o.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let p=c,d=!1;3===c.rank&&(d=!0,p=(0,u.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const h={x:p},f={depthRadius:t,bias:n,alpha:i,beta:l},m=r.BV.runKernelFunc(((e,r)=>{const a=e.localResponseNormalization4D(p,t,n,i,l);return r([p,a]),a}),h,null,a.eZ,f);return d?(0,u.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},2597:(e,t,n)=>{"use strict";n.d(t,{c:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({log_:function(e){const t=(0,s._1)(e,"x","log"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.log(t);return n([t]),r}),n,null,a.Zb)}})},7474:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({log1p_:function(e){const t=(0,s._1)(e,"x","log1p"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.log1p(t);return n([t]),r}),n,null,a.kU)}})},1510:(e,t,n)=>{"use strict";n.d(t,{C:()=>h});var r=n(7097),a=n(9121),s=n(3740),o=n(2271),i=n(4842),u=n(2597),l=n(3307),c=n(2668),p=n(827),d=n(5475);const h=(0,c.op)({logSoftmax_:function(e,t=-1){const n=(0,s._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const c={logits:n},h={axis:t};return r.BV.runKernelFunc(((n,r)=>{const a=(0,l.F)(e,t,!0),s=(0,p.l)(e,a),c=(0,p.l)((0,o.p)(s,"float32"),(0,u.c)((0,d.S)((0,i.Q)(s),t,!0)));return r([c]),c}),c,null,a.qC,h)}})},1391:(e,t,n)=>{"use strict";n.d(t,{l:()=>f});var r=n(3740),a=n(569),s=n(6407),o=n(3591),i=n(4842),u=n(2597),l=n(3307),c=n(2668),p=n(4968),d=n(827),h=n(5475);const f=(0,c.op)({logSumExp_:function(e,t=null,n=!1){const c=(0,r._1)(e,"x","logSumExp"),f=(0,a.EC)(t,c.shape),m=(0,l.F)(c,f,!0),g=(0,d.l)(c,m),y=(0,i.Q)(g),x=(0,h.S)(y,f),b=(0,u.c)(x),v=(0,s.I)((0,p.X)(m,b.shape),b);if(n){const e=(0,o.rv)(v.shape,f);return(0,p.X)(v,e)}return v}})},2856:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(2200);const i=(0,n(2668).op)({logicalAnd_:function(e,t){const n=(0,s._1)(e,"a","logicalAnd","bool"),i=(0,s._1)(t,"b","logicalAnd","bool");(0,o.$N)(n.shape,i.shape);const u={a:n,b:i};return r.BV.runKernelFunc((e=>e.logicalAnd(n,i)),u,null,a.PY)}})},8651:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({logicalNot_:function(e){const t=(0,s._1)(e,"x","logicalNot","bool"),n={x:t};return r.BV.runKernelFunc((e=>e.logicalNot(t)),n,null,a.Vf)}})},5750:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(2200);const i=(0,n(2668).op)({logicalOr_:function(e,t){const n=(0,s._1)(e,"a","logicalOr","bool"),i=(0,s._1)(t,"b","logicalOr","bool");(0,o.$N)(n.shape,i.shape);const u={a:n,b:i};return r.BV.runKernelFunc((e=>e.logicalOr(n,i)),u,null,a.MZ)}})},8687:(e,t,n)=>{"use strict";n.d(t,{O:()=>c});var r=n(7097),a=n(9121),s=n(747),o=n(3740),i=n(569),u=n(2668),l=n(4968);const c=(0,u.op)({matMul_:function(e,t,n=!1,u=!1){let c=(0,o._1)(e,"a","matMul"),p=(0,o._1)(t,"b","matMul");[c,p]=(0,s.T_)(c,p);const d={a:c,b:p},h={transposeA:n,transposeB:u};return r.BV.runKernelFunc(((e,t)=>{t([c,p]);const r=n?c.shape[c.rank-2]:c.shape[c.rank-1],a=u?p.shape[p.rank-1]:p.shape[p.rank-2],s=n?c.shape[c.rank-1]:c.shape[c.rank-2],o=u?p.shape[p.rank-2]:p.shape[p.rank-1],d=c.shape.slice(0,-2),h=p.shape.slice(0,-2),f=i.NA(d),m=i.NA(h),g=f===m||1===f||1===m;i.hu(c.rank>=2&&p.rank>=2&&g,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${d}) and (${h}).`)),i.hu(r===a,(()=>`Error in matMul: inner shapes (${r}) and (${a}) of Tensors with shapes ${c.shape} and ${p.shape} and transposeA=${n} and transposeB=${u} must match.`));const y=(f>m?d:h).concat([s,o]),x=n?(0,l.X)(c,[f,r,s]):(0,l.X)(c,[f,s,r]),b=u?(0,l.X)(p,[m,o,a]):(0,l.X)(p,[m,a,o]),v=e.batchMatMul(x,b,n,u);return(0,l.X)(v,y)}),d,null,a.XL,h)}})},3307:(e,t,n)=>{"use strict";n.d(t,{F:()=>p});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(3591),u=n(2668),l=n(4968),c=n(9065);const p=(0,u.op)({max_:function(e,t=null,n=!1){const u=(0,s._1)(e,"x","max"),p={x:u},d={reductionIndices:t,keepDims:n};return r.BV.runKernelFunc(((e,r)=>{let a=o.EC(t,u.shape);const s=i.Q3(a,u.rank);let p=u;null!=s&&(p=(0,c.p)(u,s),a=i.sY(a.length,p.rank));const d=e.max(p,a);null!=s&&p.dispose();let h=d;if(n){const e=i.rv(h.shape,o.EC(t,u.shape));h=(0,l.X)(h,e),d.dispose()}return r([u,h]),h}),p,null,a.Yo,d)}})},1174:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({maxPool_:function(e,t,n,u,c){const p=(0,s._1)(e,"x","maxPool");let d=p,h=!1;3===p.rank&&(h=!0,d=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.hu(4===d.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${d.rank}.`)),o.hu(i.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=c&&o.hu(o.GN(u),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const f={x:d},m={filterSize:t,strides:n,pad:u,dimRoundingMode:c},g=r.BV.runKernelFunc(((e,r)=>{const a=i.Xw(d.shape,t,n,1,u,c);let s;return s=1===a.filterWidth&&1===a.filterHeight&&o.cO(a.inShape,a.outShape)?d.clone():e.maxPool(d,a),r([d,s]),s}),f,null,a.mT,m);return h?(0,l.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},632:(e,t,n)=>{"use strict";n.d(t,{g:()=>l});var r=n(7097),a=n(9121),s=n(747),o=n(3740),i=n(2200),u=n(2271);const l=(0,n(2668).op)({maximum_:function(e,t){let n=(0,o._1)(e,"a","maximum"),l=(0,o._1)(t,"b","maximum");[n,l]=(0,s.T_)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,i.$N)(n.shape,l.shape);const c={a:n,b:l};return r.BV.runKernelFunc(((e,t)=>{const r=e.maximum(n,l);return t([n,l]),r}),c,null,a.BM)}})},5130:(e,t,n)=>{"use strict";n.d(t,{J:()=>y});var r=n(7097),a=n(633),s=n(9121),o=n(3740),i=n(569),u=n(3591),l=n(2271),c=n(1274),p=n(4841),d=n(4917),h=n(2668),f=n(4968),m=n(9494),g=n(5475);const y=(0,h.op)({mean_:function(e,t=null,n=!1){const h=(0,o._1)(e,"x","mean"),y=(0,i.EC)(t,h.shape),x=(0,u.kz)(h.shape,y)[1],b=(0,i.NA)(x),v={x:h},w={axis:t,keepDims:n},I=()=>{const e=(0,m.i)(b),r=e.dtype===h.dtype?h:(0,l.p)(h,e.dtype),a=(0,c.h)(r,e);return(0,g.S)(a,t,n)};return(0,a.cb)((e=>({value:r.BV.runKernelFunc(I,v,null,s.q2,w),gradFunc:t=>{const n=e.shape.slice();y.forEach((e=>{n[e]=1}));const r=(0,f.X)(t,n);return(0,c.h)((0,p.d)(r,(0,d.i)(e.shape,"float32")),b)}})))(h)}})},5735:(e,t,n)=>{"use strict";n.d(t,{V:()=>p});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(3591),u=n(2668),l=n(4968),c=n(9065);const p=(0,u.op)({min_:function(e,t=null,n=!1){const u=(0,s._1)(e,"x","min"),p={x:u},d={axis:t,keepDims:n};return r.BV.runKernelFunc(((e,r)=>{const a=(0,o.EC)(t,u.shape);let s=a;const p=i.Q3(s,u.rank);let d=u;null!=p&&(d=(0,c.p)(u,p),s=i.sY(s.length,u.rank));const h=e.min(d,s);null!=p&&d.dispose();let f=h;if(n){const e=i.rv(f.shape,a);f=(0,l.X)(h,e),h.dispose()}return r([u,f]),f}),p,null,a.c1,d)}})},4513:(e,t,n)=>{"use strict";n.d(t,{L:()=>l});var r=n(7097),a=n(9121),s=n(747),o=n(3740),i=n(2200),u=n(2271);const l=(0,n(2668).op)({minimum_:function(e,t){let n=(0,o._1)(e,"a","minimum"),l=(0,o._1)(t,"b","minimum");[n,l]=(0,s.T_)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,i.$N)(n.shape,l.shape);const c={a:n,b:l};return r.BV.runKernelFunc(((e,t)=>{const r=e.minimum(n,l);return t([n,l]),r}),c,null,a.q8)}})},1483:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(569);const i=(0,n(2668).op)({mirrorPad_:function(e,t,n){o.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const i=(0,s._1)(e,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");o.hu(t.length===i.rank,(()=>`Padding doesn't match input. Must be ${i.rank}. Got ${t.length}.`));const u="reflect"===n?1:0;for(let e=0;e<i.rank;e++)o.hu(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),o.hu(t[e][0]>=0&&t[e][0]<=i.shape[e]-u&&t[e][1]>=0&&t[e][1]<=i.shape[e]-u,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${i.shape[e]-u} or less than 0 for input of shape ${i.shape}`));const l={paddings:t,mode:n},c={x:i};return r.BV.runKernel(a.jQ,c,l)}})},5228:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var r=n(7097),a=n(9121),s=n(747),o=n(3740);const i=(0,n(2668).op)({mod_:function(e,t){let n=(0,o._1)(e,"a","mod"),i=(0,o._1)(t,"b","mod");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernelFunc(((e,t)=>{const r=e.mod(n,i);return t([n,i]),r}),u,null,a.Vb)}})},4841:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(7097),a=n(9121),s=n(747),o=n(3740);const i=(0,n(2668).op)({mul_:function(e,t){let n=(0,o._1)(e,"a","mul"),i=(0,o._1)(t,"b","mul");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernelFunc(((e,t)=>{const r=e.multiply(n,i);return t([n,i]),r}),u,null,a.wY)}})},7370:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({neg_:function(e){const t=(0,s._1)(e,"x","neg"),n={x:t};return r.BV.runKernelFunc((e=>e.neg(t)),n,null,a.L0)}})},3561:(e,t,n)=>{"use strict";n.d(t,{K:()=>y});var r=n(3740),a=n(569),s=n(6235),o=n(3591),i=n(3307),u=n(5735),l=n(2668),c=n(3453),p=n(4968),d=n(9494),h=n(3261),f=n(248),m=n(5475);function g(e,t,n=null){if(0===e.rank)return(0,s.W)(e);if(1!==e.rank&&null===n)return g((0,p.X)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.S)((0,s.W)(e),n);if(t===1/0)return(0,i.F)((0,s.W)(e),n);if(t===-1/0)return(0,u.V)((0,s.W)(e),n);if("euclidean"===t||2===t)return(0,h._)((0,m.S)((0,c.s)((0,s.W)(e),(0,d.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,i.F)((0,m.S)((0,s.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,i.F)((0,m.S)((0,s.W)(e),n[1]),n[0]);if(t===-1/0)return(0,u.V)((0,m.S)((0,s.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,h._)((0,m.S)((0,f.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const y=(0,l.op)({norm_:function(e,t="euclidean",n=null,s=!1){const i=g(e=(0,r._1)(e,"x","norm"),t,n);let u=i.shape;if(s){const t=(0,a.EC)(n,e.shape);u=o.rv(i.shape,t)}return(0,p.X)(i,u)}})},6500:(e,t,n)=>{"use strict";n.d(t,{Q:()=>u});var r=n(7097),a=n(9121),s=n(747),o=n(3740),i=n(2200);const u=(0,n(2668).op)({notEqual_:function(e,t){let n=(0,o._1)(e,"a","notEqual"),u=(0,o._1)(t,"b","notEqual");[n,u]=(0,s.T_)(n,u),(0,i.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernelFunc((e=>e.notEqual(n,u)),l,null,a.yQ)}})},6708:(e,t,n)=>{"use strict";n.d(t,{l:()=>u});var r=n(7097),a=n(9121),s=n(3740),o=n(2668),i=n(4968);const u=(0,o.op)({oneHot_:function(e,t,n=1,o=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const u=(0,s._1)(e,"indices","oneHot","int32"),l=[...u.shape,t],c={indices:u},p={depth:t,onValue:n,offValue:o};return r.BV.runKernelFunc(((e,r)=>(r([u]),(0,i.X)(e.oneHot((0,i.X)(u,[u.size]),t,n,o),l))),c,null,a.we,p)}})},4917:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var r=n(7097),a=n(569),s=n(1661),o=n(9640);function i(e,t="float32"){if("complex64"===t){const t=i(e,"float32"),n=(0,o.l)(e,"float32");return(0,s.P)(t,n)}const n=(0,a.p8)((0,a.NA)(e),t);return r.BV.makeTensor(n,e,t)}},7846:(e,t,n)=>{"use strict";n.d(t,{J:()=>p});var r=n(7097),a=n(9121),s=n(3740),o=n(1661),i=n(4386),u=n(2668),l=n(766),c=n(6577);const p=(0,u.op)({onesLike_:function(e){const t=(0,s._1)(e,"x","onesLike"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{if("complex64"===t.dtype){const e=p((0,l.k)(t)),n=(0,c.P)((0,i.a)(t));return(0,o.P)(e,n)}return e.onesLike(t)}),n,null,a.qW)}})},2668:(e,t,n)=>{"use strict";n.d(t,{op:()=>s});var r=n(7097),a=n(569);function s(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const o=(...e)=>{r.BV.startScope(n);try{const t=s(...e);return(0,a.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(t),t}catch(e){throw r.BV.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},6665:(e,t,n)=>{"use strict";n.d(t,{IHx:()=>r.I,f3b:()=>a.f,d9v:()=>s.d,zoF:()=>o.z,Izb:()=>u,hiC:()=>l.h,DgJ:()=>c.D,Qqt:()=>p.Q,hlL:()=>d.h,BHj:()=>Re,Fp7:()=>h.F,dC7:()=>f.d,w6H:()=>m.w,XLQ:()=>g.X,iD$:()=>y.i,XD2:()=>x.X,tPi:()=>b.t,XAC:()=>v.X,knu:()=>w.k,luU:()=>I.l,XeE:()=>N.X,RRF:()=>k.R,odF:()=>S,yXz:()=>E,p4s:()=>A.p,HHK:()=>R.H,lls:()=>D.l});var r=n(6407),a=n(2657),s=n(8723),o=n(6884),i=n(2668);const u=(0,i.op)({concat2d_:function(e,t){return(0,o.z)(e,t)}});var l=n(1274),c=n(6477),p=n(4842),d=n(4006),h=n(3307),f=n(4841),m=n(7245),g=n(4968),y=n(9494),x=n(625),b=n(2676),v=n(682),w=n(2991),I=n(827),N=n(701),k=n(6092),$=n(3740),C=n(569),T=n(7852);function S(e,t,n){if((0,C.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,$.C)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,T.H)(e,t,r,n)}function E(e,t,n){if((0,C.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=(0,$.C)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,T.H)(e,t,r,n)}var R=n(4136),D=n(9640),A=n(9065),_=n(3710),O=n(7020),F=n(8447),B=n(4415);function M(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(o)}return(0,k.R)(a,"float32")}(0,i.op)({hammingWindow_:function(e){return M(e,.54,.46)}});const P=(0,i.op)({hannWindow_:function(e){return M(e,.5,.5)}}),L=(0,i.op)({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push((0,b.t)(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,u=(0,o.z)([(0,b.t)(e,s,t-r),(0,d.h)([r],a)]);i.push(u),s+=n}return 0===i.length?S([],[0,t]):(0,g.X)((0,o.z)(i),[i.length,t])}});(0,i.op)({stft_:function(e,t,n,r,a=P){var s;null==r&&(s=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2)))));const i=L(e,t,n),u=(0,f.d)(i,a(t)),l=[];for(let e=0;e<i.shape[0];e++)l.push((0,_.Q)((0,b.t)(u,[e,0],[1,t]),r));return(0,o.z)(l)}});var W=n(7097),V=n(9121);const U=(0,i.op)({cropAndResize_:function(e,t,n,r,a,s){const o=(0,$._1)(e,"image","cropAndResize"),i=(0,$._1)(t,"boxes","cropAndResize","float32"),u=(0,$._1)(n,"boxInd","cropAndResize","int32");a=a||"bilinear",s=s||0;const l=i.shape[0];C.hu(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),C.hu(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`)),C.hu(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`)),C.hu(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),C.hu(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),C.hu("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:o,boxes:i,boxInd:u},p={method:a,extrapolationValue:s,cropSize:r};return W.BV.runKernelFunc((e=>e.cropAndResize(o,i,u,r,a,s)),c,null,V.Vc,p)}}),z=(0,i.op)({flipLeftRight_:function(e){const t=(0,$._1)(e,"image","flipLeftRight","float32");C.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return W.BV.runKernel(V.Uy,n,{})}}),H=(0,i.op)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=(0,$._1)(e,"image","rotateWithOffset","float32");C.hu(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},o={radians:t,fillValue:n,center:r};return W.BV.runKernel(V.b9,s,o)}});function G(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),C.hu(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),C.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),C.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),C.hu(1===t.rank,(()=>"scores must be a 1D tensor")),C.hu(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),C.hu(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const X=(0,i.op)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=(0,$._1)(e,"boxes","nonMaxSuppression"),o=(0,$._1)(t,"scores","nonMaxSuppression"),i=G(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return W.BV.runKernelFunc((e=>e.nonMaxSuppression(s,o,n,r,a)),{boxes:s,scores:o},null,V.uv,u)}});var j=n(2055);const q=(0,i.op)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=(0,$._1)(e,"boxes","nonMaxSuppression"),i=(0,$._1)(t,"scores","nonMaxSuppression"),u=G(o,i,n,r,a,s),l={boxes:o,scores:i},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},p=W.BV.runKernel(V.W0,l,c);return{selectedIndices:p[0],selectedScores:p[1]}}}),K=(0,i.op)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=(0,$._1)(e,"boxes","nonMaxSuppression"),i=(0,$._1)(t,"scores","nonMaxSuppression"),u=G(o,i,n,r,a,null),l={boxes:o,scores:i},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},p=W.BV.runKernel(V.cy,l,c);return{selectedIndices:p[0],validOutputs:p[1]}}});var Y=n(3305),Q=n(5098),Z=n(7630),J=n(624),ee=n(2856),te=n(5912);(0,i.op)({bandPart_:function(e,t,n){(0,C.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,C.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=(0,$._1)(e,"a","bandPart");(0,C.hu)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,o]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=s),n<0&&(n=o);const i=(0,g.X)((0,m.w)(0,s,1,"int32"),[-1,1]),u=(0,m.w)(0,o,1,"int32"),l=(0,I.l)(i,u),c=(0,ee.H)((0,J.z)(l,(0,y.i)(+t,"int32")),(0,Z.b)(l,(0,y.i)(-n,"int32"))),p=(0,D.l)([s,o],r.dtype);return(0,g.X)((0,w.k)((0,R.H)((0,g.X)(r,[-1,s,o])).map((e=>(0,te.a)(c,e,p)))),a)}});var ne=n(3561),re=n(8644),ae=n(9590),se=n(5475);(0,i.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,C.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,C.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,re.V)(e,e.shape[0],0).map((e=>(0,ae.L)(e,[0])));(0,C.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(W.BV.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=(0,f.d)((0,se.S)((0,f.d)(n[r],e)),n[r]);e=(0,I.l)(e,t)}return(0,l.h)(e,(0,ne.K)(e,"euclidean"))})));return t?(0,w.k)(n,0):n}});var oe=n(4368),ie=n(1300),ue=n(7501);const le=(0,i.op)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=(0,a.f)([e,t],r),o=e<=t?e:t;for(let e=0;e<o;++e)s.set(1,e,e);const i=(0,g.X)(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return(0,ue.G)((0,ie.d)(i,0),[n[0],1,1]);if(2===n.length)return(0,ue.G)((0,ie.d)((0,ie.d)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,ue.G)((0,ie.d)((0,ie.d)((0,ie.d)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var ce=n(636),pe=n(8687),de=n(7370);function he(e,t=!1){return W.BV.tidy((()=>{(0,C.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=le(n),i=(0,s.d)(e);const u=S([[1]],[1,1]);let c=(0,s.d)(u);const p=n>=r?r:n;for(let e=0;e<p;++e){const t=i,p=c,d=a;[c,i,a]=W.BV.tidy((()=>{const t=(0,b.t)(i,[e,e],[n-e,1]),p=(0,ne.K)(t),d=(0,b.t)(i,[e,e],[1,1]),h=(0,te.a)((0,ce.p)(d,0),S([[-1]]),S([[1]])),m=(0,I.l)(d,(0,f.d)(h,p)),g=(0,l.h)(t,m);c=1===g.shape[0]?(0,s.d)(u):(0,o.z)([u,(0,b.t)(g,[1,0],[g.shape[0]-1,g.shape[1]])],0);const y=(0,de.W)((0,l.h)((0,pe.O)(h,m),p)),x=(0,b.t)(i,[e,0],[n-e,r]),v=(0,f.d)(y,c),w=(0,A.p)(c);if(0===e)i=(0,I.l)(x,(0,pe.O)(v,(0,pe.O)(w,x)));else{const t=(0,I.l)(x,(0,pe.O)(v,(0,pe.O)(w,x)));i=(0,o.z)([(0,b.t)(i,[0,0],[e,r]),t],0)}const N=(0,A.p)(v),k=(0,b.t)(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=(0,I.l)(k,(0,pe.O)((0,pe.O)(k,c),N));else{const t=(0,I.l)(k,(0,pe.O)((0,pe.O)(k,c),N));a=(0,o.z)([(0,b.t)(a,[0,0],[n,e]),t],1)}return[c,i,a]})),(0,oe.B9)([t,p,d])}return!t&&n>r&&(a=(0,b.t)(a,[0,0],[n,r]),i=(0,b.t)(i,[0,0],[r,r])),[a,i]}))}(0,i.op)({qr_:function(e,t=!1){if((0,C.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return he(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,R.H)((0,g.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=he(e,t);a.push(n),s.push(r)})),[(0,g.X)((0,w.k)(a,0),e.shape),(0,g.X)((0,w.k)(s,0),e.shape)]}}});var fe,me=n(6235);!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(fe||(fe={}));var ge=n(2271),ye=n(5130),xe=n(6500),be=n(4917);const ve=(0,i.op)({computeWeightedLoss_:function(e,t,n=fe.SUM_BY_NONZERO_WEIGHTS){const r=(0,$._1)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=(0,$._1)(t,"weights","computeWeightedLoss"));const s=null==a?r:(0,f.d)(r,a);if(n===fe.NONE)return s;if(n===fe.SUM)return(0,se.S)(s);if(n===fe.MEAN){if(null==a)return(0,ye.J)(s);{const e=r.size/a.size,t=(0,l.h)((0,se.S)(s),(0,se.S)(a));return e>1?(0,l.h)(t,(0,y.i)(e)):t}}if(n===fe.SUM_BY_NONZERO_WEIGHTS){if(null==a)return(0,l.h)((0,se.S)(s),(0,y.i)(r.size));{const e=(0,f.d)(a,(0,be.i)(r.shape)),t=(0,ge.p)((0,se.S)((0,xe.Q)(e,(0,y.i)(0))),"float32");return(0,l.h)((0,se.S)(s),t)}}throw Error(`Unknown reduction: ${n}`)}});(0,i.op)({absoluteDifference_:function(e,t,n,r=fe.SUM_BY_NONZERO_WEIGHTS){const a=(0,$._1)(e,"labels","absoluteDifference"),s=(0,$._1)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=(0,$._1)(n,"weights","absoluteDifference")),(0,C.k5)(a.shape,s.shape,"Error in absoluteDifference: ");const i=(0,me.W)((0,I.l)(a,s));return ve(i,o,r)}}),(0,i.op)({cosineDistance_:function(e,t,n,r,a=fe.SUM_BY_NONZERO_WEIGHTS){const s=(0,$._1)(e,"labels","cosineDistance"),o=(0,$._1)(t,"predictions","cosineDistance");let i=null;null!=r&&(i=(0,$._1)(r,"weights","cosineDistance")),(0,C.k5)(s.shape,o.shape,"Error in cosineDistance: ");const u=(0,y.i)(1),l=(0,I.l)(u,(0,se.S)((0,f.d)(s,o),n,!0));return ve(l,i,a)}});var we=n(7409);(0,i.op)({hingeLoss_:function(e,t,n,r=fe.SUM_BY_NONZERO_WEIGHTS){let a=(0,$._1)(e,"labels","hingeLoss");const s=(0,$._1)(t,"predictions","hingeLoss");let o=null;null!=n&&(o=(0,$._1)(n,"weights","hingeLoss")),(0,C.k5)(a.shape,s.shape,"Error in hingeLoss: ");const i=(0,y.i)(1);a=(0,I.l)((0,f.d)((0,y.i)(2),a),i);const u=(0,we.U)((0,I.l)(i,(0,f.d)(a,s)));return ve(u,o,r)}});var Ie=n(4513),Ne=n(248);(0,i.op)({huberLoss_:function(e,t,n,a=1,s=fe.SUM_BY_NONZERO_WEIGHTS){const o=(0,$._1)(e,"labels","huberLoss"),i=(0,$._1)(t,"predictions","huberLoss");let u=null;null!=n&&(u=(0,$._1)(n,"weights","huberLoss")),(0,C.k5)(o.shape,i.shape,"Error in huberLoss: ");const l=(0,y.i)(a),c=(0,me.W)((0,I.l)(i,o)),p=(0,Ie.L)(c,l),d=(0,I.l)(c,p),h=(0,r.I)((0,f.d)((0,y.i)(.5),(0,Ne.h)(p)),(0,f.d)(l,d));return ve(h,u,s)}});var ke=n(2597);(0,i.op)({logLoss_:function(e,t,n,a=1e-7,s=fe.SUM_BY_NONZERO_WEIGHTS){const o=(0,$._1)(e,"labels","logLoss"),i=(0,$._1)(t,"predictions","logLoss");let u=null;null!=n&&(u=(0,$._1)(n,"weights","logLoss")),(0,C.k5)(o.shape,i.shape,"Error in logLoss: ");const l=(0,y.i)(1),c=(0,y.i)(a),p=(0,de.W)((0,f.d)(o,(0,ke.c)((0,r.I)(i,c)))),d=(0,f.d)((0,I.l)(l,o),(0,ke.c)((0,r.I)((0,I.l)(l,i),c))),h=(0,I.l)(p,d);return ve(h,u,s)}});var $e=n(5265);(0,i.op)({meanSquaredError_:function(e,t,n,r=fe.SUM_BY_NONZERO_WEIGHTS){const a=(0,$._1)(e,"labels","meanSquaredError"),s=(0,$._1)(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=(0,$._1)(n,"weights","meanSquaredError")),(0,C.k5)(a.shape,s.shape,"Error in meanSquaredError: ");const i=(0,$e.$)(a,s);return ve(i,o,r)}});var Ce=n(7474);(0,i.op)({sigmoidCrossEntropy_:function(e,t,n,a=0,s=fe.SUM_BY_NONZERO_WEIGHTS){let o=(0,$._1)(e,"multiClassLabels","sigmoidCrossEntropy");const i=(0,$._1)(t,"logits","sigmoidCrossEntropy");let u=null;if(null!=n&&(u=(0,$._1)(n,"weights","sigmoidCrossEntropy")),(0,C.k5)(o.shape,i.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=(0,y.i)(a),t=(0,y.i)(1),n=(0,y.i)(.5);o=(0,r.I)((0,f.d)(o,(0,I.l)(t,e)),(0,f.d)(n,e))}const l=function(e,t){const n=(0,$._1)(e,"labels","sigmoidCrossEntropyWithLogits"),a=(0,$._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,C.k5)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=(0,we.U)(a),o=(0,f.d)(a,n),i=(0,Ce.K)((0,p.Q)((0,de.W)((0,me.W)(a))));return(0,r.I)((0,I.l)(s,o),i)}(o,i);return ve(l,u,s)}});var Te=n(633),Se=n(3591),Ee=n(1391);(0,i.op)({softmaxCrossEntropy_:function(e,t,n,a=0,s=fe.SUM_BY_NONZERO_WEIGHTS){let o=(0,$._1)(e,"onehotLabels","softmaxCrossEntropy");const i=(0,$._1)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=(0,$._1)(n,"weights","softmaxCrossEntropy")),(0,C.k5)(o.shape,i.shape,"Error in softmaxCrossEntropy: "),a>0){const e=(0,y.i)(a),t=(0,y.i)(1),n=(0,y.i)(o.shape[1]);o=(0,r.I)((0,f.d)(o,(0,I.l)(t,e)),(0,l.h)(e,n))}const c=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return(0,Te.cb)(((e,t,r)=>{const a=(0,Ee.l)(t,[n],!0),s=(0,I.l)((0,ge.p)(t,"float32"),a);r([e,s]);const o=(0,de.W)((0,f.d)(s,e));return{value:(0,se.S)(o,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=(0,Se.rv)(e.shape,[n]);return[(0,f.d)((0,g.X)(e,s),(0,I.l)((0,ge.p)(r,"float32"),(0,p.Q)(a))),(0,f.d)((0,g.X)(e,s),(0,I.l)((0,p.Q)(a),(0,ge.p)(r,"float32")))]}}}))(e,t)}(o,i);return ve(c,u,s)}}),O.k,F.S,_.Q,B.w;const Re={flipLeftRight:z,resizeNearestNeighbor:Q.j,resizeBilinear:Y.I,rotateWithOffset:H,cropAndResize:U,nonMaxSuppression:X,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=(0,$._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,$._1)(t,"scores","nonMaxSuppressionAsync"),i=G(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u=await Promise.all([s.data(),o.data()]),l=u[0],c=u[1],p=(0,j.GP)(l,c,n,r,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),p},nonMaxSuppressionWithScore:q,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=(0,$._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,$._1)(t,"scores","nonMaxSuppressionAsync"),u=G(o,i,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),c=l[0],p=l[1],d=(0,j.pA)(c,p,n,r,a,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),d},nonMaxSuppressionPadded:K,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=(0,$._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,$._1)(t,"scores","nonMaxSuppressionAsync"),u=G(o,i,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,p=u.scoreThreshold,[d,h]=await Promise.all([o.data(),i.data()]),f=(0,j.qP)(d,h,l,c,p,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),f}}},9682:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({pad_:function(e,t,n=0){const o=(0,s._1)(e,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},u={x:o};return r.BV.runKernelFunc(((e,r)=>(r([o]),e.pad(o,t,n))),u,null,a.ly,i)}})},3453:(e,t,n)=>{"use strict";n.d(t,{s:()=>i});var r=n(7097),a=n(9121),s=n(747),o=n(3740);const i=(0,n(2668).op)({pow_:function(e,t){let n=(0,o._1)(e,"base","pow"),i=(0,o._1)(t,"exp","pow");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernelFunc(((e,t)=>{const r=e.pow(n,i);return t([n,i,r]),r}),u,null,a.pe)}})},8151:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({prelu_:function(e,t){const n=(0,s._1)(e,"x","prelu"),o=(0,s._1)(t,"alpha","prelu"),i={x:n,alpha:o};return r.BV.runKernelFunc(((e,t)=>{const r=e.prelu(n,o);return t([n,o]),r}),i,null,a.o0)}})},9451:(e,t,n)=>{"use strict";n.d(t,{W:()=>d});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(3591),u=n(2271),l=n(2668),c=n(4968),p=n(9065);const d=(0,l.op)({prod_:function(e,t=null,n=!1){let l=(0,s._1)(e,"x","prod");"bool"===l.dtype&&(l=(0,u.p)(l,"int32"));const d={x:l},h={axis:t,keepDims:n};return r.BV.runKernelFunc((e=>{const r=(0,o.EC)(t,l.shape),a=(0,i.Q3)(r,l.rank);let s=r,u=l;null!=a&&(u=(0,p.p)(l,a),s=(0,i.sY)(s.length,l.rank));let d=e.prod(u,s);if(n){const e=(0,i.rv)(d.shape,r);d=(0,c.X)(d,e)}return d}),d,null,a.Dl,h)}})},7245:(e,t,n)=>{"use strict";n.d(t,{w:()=>u});var r=n(7097),a=n(9121),s=n(569),o=n(6092),i=n(9640);function u(e,t,n=1,u="float32"){if(0===n)throw new Error("Cannot have a step of zero");const l={start:e,stop:t,step:n,dtype:u};return r.BV.runKernelFunc((()=>{if(e===t||e<t&&n<0||t<e&&n>1)return(0,i.l)([0],u);const r=Math.abs(Math.ceil((t-e)/n)),a=(0,s.wT)(r,u);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return(0,o.R)(a,u)}),{},null,a.e6,l)}},766:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({real_:function(e){const t=(0,s._1)(e,"input","real"),n={input:t};return r.BV.runKernelFunc((e=>e.real(t)),n,null,a.xJ)}})},9036:(e,t,n)=>{"use strict";n.d(t,{M:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({reciprocal_:function(e){const t=(0,s._1)(e,"x","reciprocal"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.reciprocal(t);return n([t]),r}),n,null,a.$H)}})},5466:(e,t,n)=>{"use strict";n.d(t,{g:()=>a,A:()=>s});var r=n(569);const a=30;function s(e){return e<=a?e:(0,r.jP)(e,Math.floor(Math.sqrt(e)))}},7409:(e,t,n)=>{"use strict";n.d(t,{U:()=>u});var r=n(7097),a=n(9121),s=n(3740),o=n(2668),i=n(2271);const u=(0,o.op)({relu_:function(e){const t=(0,s._1)(e,"x","relu"),n={x:t};return r.BV.runKernelFunc(((e,n)=>(n([t]),"bool"===t.dtype?(0,i.p)(t,"int32"):e.relu(t))),n,null,a.qk)}})},3582:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(2271);const i=(0,n(2668).op)({relu6_:function(e){const t=(0,s._1)(e,"x","relu6"),n={x:t};return r.BV.runKernelFunc(((e,n)=>(n([t]),"bool"===t.dtype?(0,o.p)(t,"int32"):e.relu6(t))),n,null,a.Sb)}})},4968:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(569);const i=(0,n(2668).op)({reshape_:function(e,t){const n=(0,s._1)(e,"x","reshape",null),i={x:n},u={shape:t};return r.BV.runKernelFunc(((e,r)=>(t=o.JZ(t,n.size),o.hu(n.size===o.NA(t),(()=>"new shape and old shape must have the same number of elements.")),r([n]),e.reshape(n,t))),i,null,a.HZ,u)}})},7486:(e,t,n)=>{"use strict";n.d(t,{G:()=>c});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(8723),u=n(2668),l=n(4968);const c=(0,u.op)({reverse_:function(e,t){const n=(0,s._1)(e,"x","reverse"),u={x:n},c={dims:t};return r.BV.runKernelFunc((e=>{const r=(0,o.EC)(t,n.shape);if(0===n.rank)return(0,i.d)(n);const a=e.reverse(n,r);return(0,l.X)(a,n.shape)}),u,null,a.mK,c)}})},7809:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({round_:function(e){const t=(0,s._1)(e,"x","round"),n={x:t};return r.BV.runKernelFunc((e=>e.round(t)),n,null,a.e0)}})},2634:(e,t,n)=>{"use strict";n.d(t,{b:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({rsqrt_:function(e){const t=(0,s._1)(e,"x","rsqrt"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.rsqrt(t);return n([t]),r}),n,null,a.bV)}})},9494:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var r=n(569),a=n(7852);function s(e,t){if(((0,r.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,a.H)(e,[],[],t)}},3028:(e,t,n)=>{"use strict";n.d(t,{l5:()=>a,b0:()=>s,SU:()=>o});var r=n(569);function a(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function s(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}a(n,t,e)}function o(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,o=n.length;let i=1;for(let e=s;e<o;++e)i*=n[e];const u=s<1?1:s;return{sliceRank:s,numUpdates:(0,r.NA)(t.shape)/u,sliceSize:i,strides:[...(0,r.e3)(n.slice(0,s)),1],outputSize:(0,r.NA)(n)}}},4931:(e,t,n)=>{"use strict";n.r(t),n.d(t,{segOpComputeOptimalWindowSize:()=>s,computeOutShape:()=>o,collectGatherOpShapeInfo:()=>i});var r=n(569),a=n(5466);function s(e,t){let n,s=!1;for(e<=a.g?(n=e,s=!0):n=(0,r.jP)(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=(0,r.jP)(e,n+1);return n}function o(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function i(e,t,n){const r=e.shape[n],a=[];let s=1,o=1;for(let t=0;t<n;t++)a.push(e.shape[t]),s*=e.shape[t];for(let e=0;e<t.rank;e++)a.push(t.shape[e]);for(let t=n+1;t<e.rank;t++)a.push(e.shape[t]),o*=e.shape[t];return{batchSize:s,sliceSize:o,dimSize:r,outputShape:a}}},5503:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({selu_:function(e){const t=(0,s._1)(e,"x","selu"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.selu(t);return n([t]),r}),n,null,a.oF)}})},625:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({sigmoid_:function(e){const t=(0,s._1)(e,"x","sigmoid"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.sigmoid(t);return n([r]),r}),n,null,a.a5)}})},4434:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({sign_:function(e){const t=(0,s._1)(e,"x","sign"),n={x:t};return r.BV.runKernelFunc((e=>e.sign(t)),n,null,a.i5)}})},9331:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({sin_:function(e){const t=(0,s._1)(e,"x","sin"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.sin(t);return n([t]),r}),n,null,a.RQ)}})},3254:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({sinh_:function(e){const t=(0,s._1)(e,"x","sinh"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.sinh(t);return n([t]),r}),n,null,a.w3)}})},2676:(e,t,n)=>{"use strict";n.d(t,{t:()=>u});var r=n(7097),a=n(9121),s=n(3740),o=n(2668),i=n(7650);const u=(0,o.op)({slice_:function(e,t,n){const o=(0,s._1)(e,"x","slice");if(0===o.rank)throw new Error("Slicing scalar is not possible");const u={x:o},l={begin:t,size:n};return r.BV.runKernelFunc(((e,r)=>{const[a,s]=i.parseSliceParams(o,t,n);return i.assertParamsValid(o,a,s),r([o]),e.slice(o,a,s)}),u,null,a.p2,l)}})},7650:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>a,maskToAxes:()=>s,computeOutShape:()=>o,stridesWithElidedDims:()=>i,getNormalizedAxes:()=>c,startIndicesWithElidedDims:()=>p,stopIndicesWithElidedDims:()=>d,stridesForAxis:()=>h,startForAxis:()=>f,stopForAxis:()=>m,isSliceContinous:()=>g,computeFlatOffset:()=>y,parseSliceParams:()=>x});var r=n(569);function a(e,t,n){const a=e.shape.length;r.hu(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),r.hu(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let s=0;s<a;++s)r.hu(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function s(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function o(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function i(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function u(e,t,n){return n<=e?n:n-(t-1)}function l(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function c(e,t,n,r,a,s,o,u,l){const c=e.length;let g=new Array(c),y=new Array(c),x=new Array(c);if(t.length&&n>0){const l=t[0],c=n+1;g=p(o,l,c,r,e),y=d(u,l,c,a,e),x=i(s,l,c,e)}else for(let t=0;t<c;t++)g[t]=f(o,r,s,e,t,l),y[t]=m(u,a,s,e,t,l),x[t]=h(s,t,l);return{begin:g,end:y,strides:x}}function p(e,t,n,r,a){const s=[...a],o=l(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=0;else{const o=u(t,n,a);let i=r[o];e&1<<o&&(i=0),s[a]=i}return s}function d(e,t,n,a,s){const o=[...s],i=l(n,t);for(let r=0;r<o.length;r++)if(i.indexOf(r)>-1)o[r]=Number.MAX_SAFE_INTEGER;else{const s=u(t,n,r);let i=a[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),o[r]=i}for(let e=0;e<o.length;e++){const t=s[e];o[e]<0&&(o[e]+=t),o[e]=r.uZ(0,o[e],s[e])}return o}function h(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function f(e,t,n,a,s,o){let i=t[s];const u=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=a[s];return i<0&&(i+=l),i=r.uZ(0,i,l-1),i}function m(e,t,n,a,s,o){let i=t[s];const u=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=a[s];return i<0&&(i+=l),i=u>0?r.uZ(0,i,l):r.uZ(-1,i,l-1),i}function g(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function y(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function x(e,t,n){let a;const s=e.shape.length;let o;return a="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),a.forEach((e=>{r.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),o=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,o=o.map(((t,n)=>t>=0?t:(r.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,o]}},682:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({softmax_:function(e,t=-1){const n=(0,s._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const o={logits:n},i={dim:t};return r.BV.runKernelFunc(((e,r)=>{const a=e.softmax(n,t);return r([a]),a}),o,null,a.Gc,i)}})},3694:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({softplus_:function(e){const t=(0,s._1)(e,"x","softplus"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.softplus(t);return n([t]),r}),n,null,a.MR)}})},7918:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(569);const i=(0,n(2668).op)({spaceToBatchND_:function(e,t,n){const i=(0,s._1)(e,"x","spaceToBatchND");o.hu(i.rank>=1+t.length,(()=>`input rank ${i.rank} should be > than [blockShape] ${t.length}`)),o.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),o.hu(i.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${i.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const u={x:i},l={blockShape:t,paddings:n};return r.BV.runKernelFunc((e=>e.spaceToBatchND(i,t,n)),u,null,a.TQ,l)}})},7020:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var r=n(7097),a=n(9121),s=n(569);const o=(0,n(2668).op)({fft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernelFunc((t=>{const n=e.shape[e.shape.length-1],r=e.size/n,a=e.as2D(r,n);return t.fft(a).reshape(e.shape)}),t,null,a.vw)}})},8447:(e,t,n)=>{"use strict";n.d(t,{S:()=>u});var r=n(7097),a=n(9121),s=n(569),o=n(2668),i=n(4968);const u=(0,o.op)({ifft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernelFunc((t=>{const n=e.shape[e.shape.length-1],r=e.size/n,a=(0,i.X)(e,[r,n]),s=t.ifft(a);return(0,i.X)(s,e.shape)}),t,null,a.Qg)}})},4415:(e,t,n)=>{"use strict";n.d(t,{w:()=>f});var r=n(1661),a=n(6884),s=n(4386),o=n(4841),i=n(2668),u=n(766),l=n(4968),c=n(7486),p=n(9494),d=n(2676),h=n(8447);const f=(0,i.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let i;if(t<=2){const r=(0,l.X)(e,[n,t]);i=(0,h.S)(r)}else{const f=[n,2*(t-1)],m=(0,l.X)((0,u.k)(e),[n,t]),g=(0,l.X)((0,s.a)(e),[n,t]),y=(0,c.G)((0,d.t)(m,[0,1],[n,t-2]),1),x=(0,o.d)((0,c.G)((0,d.t)(g,[0,1],[n,t-2]),1),(0,p.i)(-1)),b=(0,a.z)([m,y],1),v=(0,a.z)([g,x],1),w=(0,l.X)((0,r.P)(b,v),[f[0],f[1]]);i=(0,h.S)(w)}if(i=(0,u.k)(i),3===e.rank&&0!==e.shape[0]){const t=i,n=e.shape[0];i=(0,l.X)(i,[n,i.shape[0]/n,i.shape[1]]),t.dispose()}return i}})},3710:(e,t,n)=>{"use strict";n.d(t,{Q:()=>m});var r=n(569),a=n(1661),s=n(6884),o=n(4386),i=n(2668),u=n(766),l=n(4968),c=n(2676),p=n(8644),d=n(9640),h=n(6577),f=n(7020);const m=(0,i.op)({rfft_:function(e,t){(0,r.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const i=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,m=(0,c.t)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=(0,s.z)([e,(0,d.l)(r)],e.shape.length-1),n=t}else m=e;const g=(0,h.P)(m),y=(0,l.X)((0,a.P)(m,g),[i,n]),x=(0,f.k)(y),b=Math.floor(n/2)+1,v=(0,u.k)(x),w=(0,o.a)(x),I=(0,p.V)(v,[b,n-b],v.shape.length-1),N=(0,p.V)(w,[b,n-b],w.shape.length-1),k=m.shape.slice();return k[m.shape.length-1]=b,(0,l.X)((0,a.P)(I[0],N[0]),k)}})},8644:(e,t,n)=>{"use strict";n.d(t,{V:()=>l});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(2668),u=n(4099);const l=(0,i.op)({split_:function(e,t,n=0){const i=(0,s._1)(e,"x","split"),l={x:i},c={numOrSizeSplits:t,axis:n};return r.BV.runKernelFunc(((e,r)=>{const a=(0,o.EC)(n,i.shape)[0],s=(0,u.O)(i,t,a);return e.split(i,s,a)}),l,null,a.L8,c)}})},4099:(e,t,n)=>{"use strict";n.d(t,{O:()=>a});var r=n(569);function a(e,t,n=0){let a=[];if("number"==typeof t)(0,r.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,r.hu)(s<=1,(()=>"There should be only one negative value in split array."));const o=t.indexOf(-1);if(-1!==o){const r=t.reduce(((e,t)=>t>0?e+t:e));t[o]=e.shape[n]-r}(0,r.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}},3261:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({sqrt_:function(e){const t=(0,s._1)(e,"x","sqrt"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.sqrt(t);return n([t]),r}),n,null,a.FK)}})},248:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var r=n(7097),a=n(3740);const s=(0,n(2668).op)({square_:function(e){const t=(0,a._1)(e,"x","square"),n=[t];return r.BV.runKernelFunc(((e,n)=>(n([t]),e.square(t))),{x:t},null,"Square",{},n,[])}})},5265:(e,t,n)=>{"use strict";n.d(t,{$:()=>u});var r=n(7097),a=n(9121),s=n(747),o=n(3740),i=n(2200);const u=(0,n(2668).op)({squaredDifference_:function(e,t){let n=(0,o._1)(e,"a","squaredDifference"),u=(0,o._1)(t,"b","squaredDifference");[n,u]=(0,s.T_)(n,u),(0,i.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernelFunc(((e,t)=>{const r=e.squaredDifference(n,u);return t([n,u]),r}),l,null,a._t,{})}})},9590:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(3740),a=n(569),s=n(2668),o=n(4968);const i=(0,s.op)({squeeze_:function(e,t){const n=(0,r._1)(e,"x","squeeze");return(0,o.X)(n,(0,a.bp)(n.shape,t).newShape)}})},2991:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var r=n(3740),a=n(569),s=n(6884),o=n(1300);const i=(0,n(2668).op)({stack_:function(e,t=0){const n=(0,r.sI)(e,"tensors","stack");if(a.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),1===n.length)return(0,o.d)(n[0],t);const i=n[0].rank,u=n[0].shape,l=n[0].dtype;a.hu(t<=i,(()=>"Axis must be <= rank of the tensor")),n.forEach((e=>{a.k5(u,e.shape,"All tensors passed to stack must have matching shapes"),a.hu(l===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const c=n.map((e=>(0,o.d)(e,t)));return(0,s.z)(c,t)}})},1901:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({step_:function(e,t=0){const n=(0,s._1)(e,"x","step"),o={x:n},i={alpha:t};return r.BV.runKernelFunc((e=>e.step(n,t)),o,null,a.h8,i)}})},5158:(e,t,n)=>{"use strict";n.d(t,{N:()=>c});var r=n(7097),a=n(9121),s=n(3740),o=n(2668),i=n(4968),u=n(2676),l=n(7650);const c=(0,o.op)({stridedSlice_:function(e,t,n,o,c=0,p=0,d=0,h=0,f=0){let m=(0,s._1)(e,"x","stridedSlice");const g={x:m},y={begin:t,end:n,strides:o,beginMask:c,endMask:p,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:f};return r.BV.runKernelFunc((e=>{null==o&&(o=new Array(t.length));const r=(0,l.maskToAxes)(d);if(r.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==d&&0!==h)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==d&&0!==f)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const a=m.rank-t.length,s=(0,l.maskToAxes)(h),g=m.shape.slice();s.forEach((e=>{t[e]=0,n[e]=1,g.splice(e,0,1)})),m=(0,i.X)(m,g);const{begin:y,end:x,strides:b}=(0,l.getNormalizedAxes)(m.shape,r,a,t,n,o,c,p,d);t=y,n=x,o=b;const v=(0,l.maskToAxes)(f);v.forEach((e=>{n[e]=t[e]+1,o[e]=1}));const w=(0,l.computeOutShape)(t,n,o),I=w.filter(((e,t)=>-1===v.indexOf(t)));if(o.every((e=>1===e)))return(0,i.X)((0,u.t)(m,t,w),I);const N=e.stridedSlice(m,t,n,o);return(0,i.X)(N,I)}),g,null,a.m2,y)}})},827:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(7097),a=n(9121),s=n(747),o=n(3740);const i=(0,n(2668).op)({sub_:function(e,t){let n=(0,o._1)(e,"a","sub"),i=(0,o._1)(t,"b","sub");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernelFunc(((e,t)=>{const r=e.subtract(n,i);return t([n,i]),r}),u,null,a.Tr)}})},5475:(e,t,n)=>{"use strict";n.d(t,{S:()=>d});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(3591),u=n(2271),l=n(2668),c=n(4968),p=n(9065);const d=(0,l.op)({sum_:function(e,t=null,n=!1){let l=(0,s._1)(e,"x","sum");"bool"===l.dtype&&(l=(0,u.p)(l,"int32"));const d={x:l},h={axis:t,keepDims:n};return r.BV.runKernelFunc(((e,r)=>{r([l]);const a=(0,o.EC)(t,l.shape),s=(0,i.Q3)(a,l.rank);let u=a,d=l;null!=s&&(d=(0,p.p)(l,s),u=(0,i.sY)(u.length,l.rank));let h=e.sum(d,u);if(n){const e=(0,i.rv)(h.shape,a);h=(0,c.X)(h,e)}return h}),d,null,a.GB,h)}})},1173:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({tan_:function(e){const t=(0,s._1)(e,"x","tan"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.tan(t);return n([t]),r}),n,null,a.sE)}})},1869:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({tanh_:function(e){const t=(0,s._1)(e,"x","tanh"),n={x:t};return r.BV.runKernelFunc(((e,n)=>{const r=e.tanh(t);return n([r]),r}),n,null,a.MI)}})},701:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var r=n(3740),a=n(7852);function s(e,t,n){const s=(0,r.C)(e,n);return(0,a.H)(e,t,s,n)}},6092:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var r=n(3740),a=n(569),s=n(7852);function o(e,t){(0,a.Cq)(e);const n=(0,r.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,s.H)(e,null,n,t)}},7852:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(7097),a=n(569),s=n(9155);function o(e,t,n,o){if(null==o&&(o=(0,a.D2)(e)),"complex64"===o)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,a.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,a.Mu)(t);const e=(0,a.NA)(t),r=(0,a.NA)(n);(0,a.hu)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==(0,a.NA)(t.slice(e));(0,a.hu)(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,a.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==o?(0,s.Os)(e,o):(0,a.xH)(e,[],!0),r.BV.makeTensor(e,t,o)}},7501:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(569);const i=(0,n(2668).op)({tile_:function(e,t){const n=(0,s._1)(e,"x","tile",null);o.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const i=[n],u={x:n},l={reps:t};return r.BV.runKernelFunc(((e,r)=>{const a=e.tile(n,t);return r([n]),a}),u,null,a.n9,l,i)}})},3243:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({topk_:function(e,t=1,n=!0){const o=(0,s._1)(e,"x","topk");if(0===o.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=o.shape[o.shape.length-1];if(t>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${t}`);const u={x:o},l={k:t,sorted:n},[c,p]=r.BV.runKernelFunc((e=>e.topk(o,t,n)),u,null,a.cW,l);return{values:c,indices:p}}})},9065:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(569);const i=(0,n(2668).op)({transpose_:function(e,t){const n=(0,s._1)(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),o.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{o.hu(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const i={x:n},u={perm:t};return r.BV.runKernelFunc((e=>e.transpose(n,t)),i,null,a.G3,u)}})},9608:(e,t,n)=>{"use strict";n.d(t,{T:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(569);const i=(0,n(2668).op)({unique_:function(e,t=0){const n=(0,s._1)(e,"x","unique",null);(0,o.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const i={x:n},u={axis:t},[l,c]=r.BV.runKernel(a.kp,i,u);return{values:l,indices:c}}})},4136:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(7097),a=n(9121),s=n(3740),o=n(569);const i=(0,n(2668).op)({unstack_:function(e,t=0){const n=(0,s._1)(e,"x","unstack");o.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`)),t<0&&(t+=n.shape.length);const i={value:n},u={axis:t};return r.BV.runKernelFunc((e=>e.unstack(n,t)),i,null,a.To,u)}})},5912:(e,t,n)=>{"use strict";n.d(t,{a:()=>l});var r=n(7097),a=n(9121),s=n(3740),o=n(569),i=n(8247),u=n(2200);const l=(0,n(2668).op)({where_:function(e,t,n){const l=(0,s._1)(t,"a","where"),c=(0,s._1)(n,"b","where"),p=(0,s._1)(e,"condition","where","bool"),d=(0,u.$N)(l.shape,c.shape),h=(0,i.U)(l,d),f=(0,i.U)(c,d);1===p.rank&&(0,o.hu)(p.shape[0]===l.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==p.rank&&(0,o.k5)(p.shape,f.shape,"Error in where: ");const m={condition:p,t:h,e:f};return r.BV.runKernelFunc(((e,t)=>{const n=e.select(p,h,f);return t([p]),n}),m,null,a.xc)}})},9640:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(7097),a=n(569),s=n(1661);function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=o(e,"float32");return(0,s.P)(t,n)}const n=(0,a.wT)((0,a.NA)(e),t);return r.BV.makeTensor(n,e,t)}},6577:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var r=n(7097),a=n(9121),s=n(3740);const o=(0,n(2668).op)({zerosLike_:function(e){const t=(0,s._1)(e,"x","zerosLike"),n={x:t};return r.BV.runKernelFunc((e=>e.zerosLike(t)),n,null,a.Ru)}})},4077:(e,t,n)=>{"use strict";n.d(t,{es:()=>y,YD:()=>c,_w:()=>x,FZ:()=>g,Vp:()=>m,Vi:()=>f});var r=n(569);function a(e,t,n,a){const o=(0,r.e3)(t),l=function(e,t,n,a){const o=(0,r.NA)(t),i=a[a.length-1],l=new Array(i).fill(0),c=t.length,p="complex64"===n?u(e):e;if(c>1)for(let e=0;e<o/i;e++){const t=e*i;for(let e=0;e<i;e++)l[e]=Math.max(l[e],s(p[t+e],0,n).length)}return l}(e,t,n,o),c=t.length,p=i(e,t,n,o,l),d=["Tensor"];return a&&(d.push(`  dtype: ${n}`),d.push(`  rank: ${c}`),d.push(`  shape: [${t}]`),d.push("  values:")),d.push(p.map((e=>"    "+e)).join("\n")),d.join("\n")}function s(e,t,n){let a;return a=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,r.HD)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),(0,r.oj)(a,t)}function o(e){return 0===e?"false":"true"}function i(e,t,n,r,a,l=!0){const c="complex64"===n?2:1,p=t[0],d=t.length;if(0===d)return"complex64"===n?[s(u(e)[0],0,n)]:"bool"===n?[o(e[0])]:[e[0].toString()];if(1===d){if(p>20){const t=3*c;let r=Array.from(e.slice(0,t)),o=Array.from(e.slice((p-3)*c,p*c));return"complex64"===n&&(r=u(r),o=u(o)),["["+r.map(((e,t)=>s(e,a[t],n))).join(", ")+", ..., "+o.map(((e,t)=>s(e,a[p-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?u(e):Array.from(e)).map(((e,t)=>s(e,a[t],n))).join(", ")+"]"]}const h=t.slice(1),f=r.slice(1),m=r[0]*c,g=[];if(p>20){for(let t=0;t<3;t++){const r=t*m,s=r+m;g.push(...i(e.slice(r,s),h,n,f,a,!1))}g.push("...");for(let t=p-3;t<p;t++){const r=t*m,s=r+m;g.push(...i(e.slice(r,s),h,n,f,a,t===p-1))}}else for(let t=0;t<p;t++){const r=t*m,s=r+m;g.push(...i(e.slice(r,s),h,n,f,a,t===p-1))}const y=2===d?",":"";g[0]="["+g[0]+y;for(let e=1;e<g.length-1;e++)g[e]=" "+g[e]+y;let x=",\n";for(let e=2;e<d;e++)x+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(l?"":x),g}function u(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var l=n(9155);class c{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=r.NA(e),null!=n){const e=n.length;r.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.rQ(t,this.size),this.strides=(0,r.e3)(e)}set(e,...t){0===t.length&&(t=[0]),r.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return p().makeTensor(this.values,this.shape,this.dtype)}}let p=null,d=null,h=null;function f(e){p=e}function m(e){d=e}function g(e){h=e}class y{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=r.NA(e),this.strides=(0,r.e3)(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return d.buffer(this.shape,this.dtype,e)}bufferSync(){return d.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,r.GX)(this.shape,e)}arraySync(){return(0,r.GX)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=p().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>l.v5(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=p().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>l.v5(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await p().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(p().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return d.print(this,e)}clone(){return this.throwIfDisposed(),d.clone(this)}toString(e=!1){return a(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),d.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),p().makeVariable(this,e,t,n)}}Object.defineProperty(y,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed});class x extends y{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!r.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);p().disposeTensor(this),this.dataId=e.dataId,p().incRef(this,null)}dispose(){p().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(x,Symbol.hasInstance,{value:e=>e instanceof y&&null!=e.assign&&e.assign instanceof Function})},747:(e,t,n)=>{"use strict";n.d(t,{T_:()=>s,Vu:()=>o});var r=n(4077),a=n(1221);function s(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,a.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e){const t=[];return i(e,t,new Set),t}function i(e,t,n){if(null==e)return;if(e instanceof r.es)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),i(r,t,n))}}},3740:(e,t,n)=>{"use strict";n.d(t,{C:()=>u,_1:()=>p,sI:()=>d});var r=n(7097),a=n(2885),s=n(4077),o=n(569),i=n(9155);function u(e,t){let n=e;if((0,o.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,o.fU)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,a.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&l(e,r,[]),r}function l(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,o.fU)(e))return void(0,o.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,o.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,o.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)l(e[t],r,n.concat(t))}function c(e,t,n,r){if(null!=e&&("numeric"!==e&&e!==t||"numeric"===e&&"string"===t))throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}function p(e,t,n,a="numeric"){if(e instanceof s.es)return c(a,e.dtype,t,n),e;let l=(0,o.D2)(e);if("string"!==l&&["bool","int32","float32"].indexOf(a)>=0&&(l=a),c(a,l,t,n),null==e||!(0,o.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const p=u(e,l);(0,o.fU)(e)||Array.isArray(e)||(e=[e]);const d="string"!==l?(0,i.Os)(e,l):(0,o.xH)(e,[],!0);return r.BV.makeTensor(d,p,l)}function d(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>p(e,`${t}[${r}]`,n)),r)}},1221:(e,t,n)=>{"use strict";var r,a,s,o,i;n.d(t,{x8:()=>l,z4:()=>c}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const u={float32:o,int32:a,bool:s,complex64:i};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function c(e){return l(e,"int32")}},9155:(e,t,n)=>{"use strict";n.d(t,{cO:()=>a.cO,hu:()=>a.hu,bT:()=>a.bT,e3:()=>a.e3,xH:()=>a.xH,rQ:()=>a.rQ,WP:()=>a.WP,QB:()=>a.QB,NE:()=>a.NE,D2:()=>a.D2,JZ:()=>a.JZ,GN:()=>a.GN,tI:()=>a.tI,HD:()=>a.HD,qy:()=>a.qy,l6:()=>a.l6,nY:()=>a.nY,EC:()=>a.EC,WD:()=>a.WD,oj:()=>a.oj,NA:()=>a.NA,YP:()=>a.YP,bp:()=>a.bp,Sm:()=>a.Sm,GX:()=>a.GX,hr:()=>s,Os:()=>o,zO:()=>i,he:()=>u,YW:()=>l,v5:()=>c});var r=n(2885),a=n(569);function s(e,t){return"string"===t?l(e):o([e],t)}function o(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a.xH(e)),(0,r.OB)().getBool("DEBUG")&&a.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function i(){return(0,r.OB)().platform.now()}function u(e,t){return(0,r.OB)().platform.fetch(e,t)}function l(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.encode(e,t)}function c(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.decode(e,t)}},569:(e,t,n)=>{"use strict";function r(e,t,n){return Math.max(e,Math.min(t,n))}function a(e){return e%2==0?e:e+1}function s(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function o(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function i(e,t,n=""){o(p(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function u(e){o(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function l(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||k(e)&&!n)for(let r=0;r<e.length;++r)l(e[r],t,n);else t.push(e);return t}function c(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function p(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function d(e){return e%1==0}function h(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function f(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function m(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const o=()=>{if(e())return void r();s++;const i=t(s);null!=n&&s>=n?a():setTimeout(o,i)};o()}))}function g(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function y(e,t){const n=t.length;return o((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),o(e.every((e=>d(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function x(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:y(t,e).sort();let o=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[o]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[o]||s[o]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[o]<=t&&o++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function b(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function v(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function w(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function I(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function N(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function k(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function $(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function C(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function T(e){return"string"==typeof e||e instanceof String}function S(e){return Array.isArray(e)?S(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":"number"==typeof e?"float32":T(e)?"string":"boolean"==typeof e?"bool":"float32"}function E(e){return!!(e&&e.constructor&&e.call&&e.apply)}function R(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function D(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function A(e,t,n){const r=new Array;if(1===t.length){const a=t[0];for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],s=t.slice(1),o=s.reduce(((e,t)=>e*t));for(let t=0;t<a;t++)r[t]=A(e+t*o,s,n)}return r}function _(e,t){if(0===e.length)return t[0];const n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return A(0,e,t)}function O(e,t){const n=F(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function F(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function B(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return _(e,new Float32Array(n));if("int32"===t)return _(e,new Int32Array(n));if("bool"===t)return _(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function M(e){e.forEach((t=>{o(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function P(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function L(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function W(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{uZ:()=>r,nY:()=>a,Sm:()=>s,hu:()=>o,k5:()=>i,Cq:()=>u,xH:()=>l,NA:()=>c,cO:()=>p,GN:()=>d,YP:()=>h,oj:()=>f,WD:()=>m,JZ:()=>g,EC:()=>y,bp:()=>x,WP:()=>b,rQ:()=>v,D5:()=>w,LP:()=>I,QB:()=>N,fU:()=>k,bT:()=>$,Ub:()=>C,HD:()=>T,D2:()=>S,mf:()=>E,jP:()=>R,e3:()=>D,GX:()=>_,p8:()=>O,wT:()=>F,l6:()=>B,Mu:()=>M,qy:()=>P,NE:()=>L,tI:()=>W})},6377:(e,t,n)=>{var r=n(4832),a=n(8652),s=n(801),o=n(2030),i=n(3618),u=n(9049),l=n(1971);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=u,e.exports=l},4832:function(e,t,n){var r;!function(e,a,s){function o(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new o(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},9049:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},8652:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(o=o+1640531527|0,a=0==(n=i[127&s]^=r+o)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=o,e.X=i,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},2030:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},1971:(e,t,n)=>{var r;!function(a,s){var o,i=this,u=256,l=s.pow(u,6),c=s.pow(2,52),p=2*c,d=255;function h(e,t,n){var r=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(i.crypto||i.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,x(a)]}}():e,3),r),h=new f(r),b=function(){for(var e=h.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|h.g(4)},b.quick=function(){return h.g(4)/4294967296},b.double=b,y(x(h.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,h),e.state=function(){return m(h,{})}),n?(s.random=e,t):e})(b,d,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<u;)o[a]=a++;for(a=0;a<u;a++)o[a]=o[s=d&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=d&a+1],n=n*u+o[d&(o[a]=o[s=d&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[d&a]=d&(n^=19*t[d&a])+r.charCodeAt(a++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=h,y(s.random(),a),e.exports){e.exports=h;try{o=n(3906)}catch(e){}}else void 0===(r=function(){return h}.call(t,n,t,e))||(e.exports=r)}([],Math)},1210:(e,t)=>{"use strict";function n(e,t){e.beginPath();let n=!0;for(const[r,a]of t)n?(e.moveTo(r,a),n=!1):e.lineTo(r,a);e.stroke()}function r(e,t,n,r){e.beginPath(),e.arc(t,n,r,0,2*Math.PI),e.fill()}Object.defineProperty(t,"__esModule",{value:!0}),t.drawHandPredictions=t.drawPoint=t.drawPath=void 0,t.drawPath=n,t.drawPoint=r,t.drawHandPredictions=function(e,t){e.fillStyle="red",e.font="24px sans-serif",e.lineJoin="round",e.lineWidth=6,e.strokeStyle="red";for(const a of t){const[t,s]=a.boundingBox.topLeft,[o,i]=a.boundingBox.bottomRight;e.strokeRect(t,s,o-t,i-s),e.fillText(`${(100*a.handInViewConfidence).toFixed(1)}%`,t,s+24);const u=["thumb","indexFinger","middleFinger","ringFinger","pinky"];for(const t of u){const s=a.annotations[t];n(e,[...a.annotations.palmBase,...s]);for(const[t,n]of s)r(e,t,n,6)}const[l,c]=a.annotations.palmBase[0];r(e,l,c,6)}}},5620:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});const o=n(1210),i=s(n(1826));function u(e){const t=document.querySelector(e);if(!t)throw new Error(`Element not found using selector '${e}'`);return t}n(462),n(6859),window.addEventListener("load",(async()=>{try{const e=await i.load(),t=u("#preview p"),n=u("#preview video"),r=u("#preview canvas");t.style.display="none",n.style.display="unset",r.style.display="unset";const[a,s]=await async function(e){const t=await navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user"}});return e.srcObject=t,new Promise((t=>{e.onloadedmetadata=()=>t([e.clientWidth,e.clientHeight])}))}(n);r.width=a,r.height=s,async function(e,t,n){const r=t.getContext("2d");if(!r)throw new Error("`canvas.getContext()` returned `null`");const a=r;!async function r(){const s=await n.estimateHands(e);a.clearRect(0,0,t.clientWidth,t.clientHeight),o.drawHandPredictions(a,s),requestAnimationFrame(r)}()}(n,r,e)}catch(e){console.error(e)}}))},3906:()=>{},8352:()=>{},1758:()=>{}},t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n(5620)})();
//# sourceMappingURL=index.js.map